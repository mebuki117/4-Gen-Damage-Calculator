'未実装
'範囲補正
'半減実
'しぜんのめぐみ

Public Class Main_Form

    'フォーム外変数のグローバル化

    'ツールボックス外のステータス
    Public IVs_Input_HP_1 As Integer = 31
    Public IVs_Input_B_1 As Integer = 31
    Public IVs_Input_D_1 As Integer = 31

    Public IVs_Input_A_2 As Integer = 31
    Public IVs_Input_C_2 As Integer = 31


    Public EVs_Input_HP_1 As Integer = 0
    Public EVs_Input_B_1 As Integer = 0
    Public EVs_Input_D_1 As Integer = 0

    Public EVs_Input_A_2 As Integer = 252
    Public EVs_Input_C_2 As Integer = 252


    Public RSs_Input_HP_1 As Integer = 0
    Public RSs_Input_B_1 As Integer = 0
    Public RSs_Input_D_1 As Integer = 0

    Public RSs_Input_A_2 As Integer = 0
    Public RSs_Input_C_2 As Integer = 0


    Public Rank_B_1 As Integer = 6
    Public Rank_D_1 As Integer = 6

    Public Rank_A_2 As Integer = 6
    Public Rank_C_2 As Integer = 6


    '自身のタイプ
    Public Types_1(1) As String
    Public Types_2(1) As String


    'その他の項目
    Public Helping_Hand_CheckBox_2 As Integer
    Public Me_First_CheckBox_2 As Integer
    Public Burn_CheckBox_2 As Integer
    Public Charge_CheckBox_2 As Integer

    Public Water_Sport_CheckBox_1 As Integer
    Public Mud_Sport_CheckBox_1 As Integer
    Public Reflect_CheckBox_1 As Integer
    Public Light_Screen_CheckBox_1 As Integer
    Public Foresight_CheckBox_1 As Integer
    Public Miracle_Eye_CheckBox_1 As Integer
    Public Gravity_CheckBox_1 As Integer


    'ポケモンデータ
    Public Pokemon_Basics() = New String() {1, "フシギダネ", 45, 49, 49, 65, 65, 45, "くさ/どく", "しんりょく", 6.9, 2, "フシギソウ", 60, 62, 63, 80, 80, 60, "くさ/どく", "しんりょく", 13.0, 3, "フシギバナ", 80, 82, 83, 100, 100, 80, "くさ/どく", "しんりょく", 100.0, 4, "ヒトカゲ", 39, 52, 43, 60, 50, 65, "ほのお", "もうか", 8.5, 5, "リザード", 58, 64, 58, 80, 65, 80, "ほのお", "もうか", 19.0, 6, "リザードン", 78, 84, 78, 109, 85, 100, "ほのお/ひこう", "もうか", 90.5, 7, "ゼニガメ", 44, 48, 65, 50, 64, 43, "みず", "げきりゅう", 9.0, 8, "カメール", 59, 63, 80, 65, 80, 58, "みず", "げきりゅう", 22.5, 9, "カメックス", 79, 83, 100, 85, 105, 78, "みず", "げきりゅう", 85.5, 10, "キャタピー", 45, 30, 35, 20, 20, 45, "むし", "りんぷん", 2.9, 11, "トランセル", 50, 20, 55, 25, 25, 30, "むし", "だっぴ", 9.9, 12, "バタフリー", 60, 45, 50, 80, 80, 70, "むし/ひこう", "ふくがん", 32.0, 13, "ビードル", 40, 35, 30, 20, 20, 50, "むし/どく", "りんぷん", 3.2, 14, "コクーン", 45, 25, 50, 25, 25, 35, "むし/どく", "だっぴ", 10.0, 15, "スピアー", 65, 80, 40, 45, 80, 75, "むし/どく", "むしのしらせ", 29.5, 16, "ポッポ", 40, 45, 40, 35, 35, 56, "ノーマル/ひこう", "するどいめ/ちどりあし", 1.8, 17, "ピジョン", 63, 60, 55, 50, 50, 71, "ノーマル/ひこう", "するどいめ/ちどりあし", 30.0, 18, "ピジョット", 83, 80, 75, 70, 70, 91, "ノーマル/ひこう", "するどいめ/ちどりあし", 39.5, 19, "コラッタ", 30, 56, 35, 25, 35, 72, "ノーマル", "にげあし/こんじょう", 3.5, 20, "ラッタ", 55, 81, 60, 50, 70, 97, "ノーマル", "にげあし/こんじょう", 18.5, 21, "オニスズメ", 40, 60, 30, 31, 31, 70, "ノーマル/ひこう", "するどいめ", 2.0, 22, "オニドリル", 65, 90, 65, 61, 61, 100, "ノーマル/ひこう", "するどいめ", 38.0, 23, "アーボ", 35, 60, 44, 40, 54, 55, "どく", "いかく/だっぴ", 6.9, 24, "アーボック", 60, 85, 69, 65, 79, 80, "どく", "いかく/だっぴ", 65.0, 25, "ピカチュウ", 35, 55, 30, 50, 40, 90, "でんき", "せいでんき", 6.0, 26, "ライチュウ", 60, 90, 55, 90, 80, 100, "でんき", "せいでんき", 30.0, 27, "サンド", 50, 75, 85, 20, 30, 40, "じめん", "すながくれ", 12.0, 28, "サンドパン", 75, 100, 110, 45, 55, 65, "じめん", "すながくれ", 29.5, 29, "ニドラン♀", 55, 47, 52, 40, 40, 41, "どく", "どくのトゲ/とうそうしん", 7.0, 30, "ニドリーナ", 70, 62, 67, 55, 55, 56, "どく", "どくのトゲ/とうそうしん", 20.0, 31, "ニドクイン", 90, 82, 87, 75, 85, 76, "どく/じめん", "どくのトゲ/とうそうしん", 60.0, 32, "ニドラン♂", 46, 57, 40, 40, 40, 50, "どく", "どくのトゲ/とうそうしん", 9.0, 33, "ニドリーノ", 61, 72, 57, 55, 55, 65, "どく", "どくのトゲ/とうそうしん", 19.5, 34, "ニドキング", 81, 92, 77, 85, 75, 85, "どく/じめん", "どくのトゲ/とうそうしん", 62.0, 35, "ピッピ", 70, 45, 48, 60, 65, 35, "ノーマル", "メロメロボディ/マジックガード", 7.5, 36, "ピクシー", 95, 70, 73, 85, 90, 60, "ノーマル", "メロメロボディ/マジックガード", 40.0, 37, "ロコン", 38, 41, 40, 50, 65, 65, "ほのお", "もらいび", 9.9, 38, "キュウコン", 73, 76, 75, 81, 100, 100, "ほのお", "もらいび", 19.9, 39, "プリン", 115, 45, 20, 45, 25, 20, "ノーマル", "メロメロボディ", 5.5, 40, "プクリン", 140, 70, 45, 75, 50, 45, "ノーマル", "メロメロボディ", 12.0, 41, "ズバット", 40, 45, 35, 30, 40, 55, "どく/ひこう", "せいしんりょく", 7.5, 42, "ゴルバット", 75, 80, 70, 65, 75, 90, "どく/ひこう", "せいしんりょく", 55.0, 43, "ナゾノクサ", 45, 50, 55, 75, 65, 30, "くさ/どく", "ようりょくそ", 5.4, 44, "クサイハナ", 60, 65, 70, 85, 75, 40, "くさ/どく", "ようりょくそ", 8.6, 45, "ラフレシア", 75, 80, 85, 100, 90, 50, "くさ/どく", "ようりょくそ", 18.6, 46, "パラス", 35, 70, 55, 45, 55, 25, "むし/くさ", "ほうし/かんそうはだ", 5.4, 47, "パラセクト", 60, 95, 80, 60, 80, 30, "むし/くさ", "ほうし/かんそうはだ", 29.5, 48, "コンパン", 60, 55, 50, 40, 55, 45, "むし/どく", "ふくがん/いろめがね", 30.0, 49, "モルフォン", 70, 65, 60, 90, 75, 90, "むし/どく", "りんぷん/いろめがね", 12.5, 50, "ディグダ", 10, 55, 25, 35, 45, 95, "じめん", "すながくれ/ありじごく", 0.8, 51, "ダグトリオ", 35, 80, 50, 50, 70, 120, "じめん", "すながくれ/ありじごく", 33.3, 52, "ニャース", 40, 45, 35, 40, 40, 90, "ノーマル", "ものひろい/テクニシャン", 4.2, 53, "ペルシアン", 65, 70, 60, 65, 65, 115, "ノーマル", "じゅうなん/テクニシャン", 32.0, 54, "コダック", 50, 52, 48, 65, 50, 55, "みず", "しめりけ/ノーてんき", 19.6, 55, "ゴルダック", 80, 82, 78, 95, 80, 85, "みず", "しめりけ/ノーてんき", 76.6, 56, "マンキー", 40, 80, 35, 35, 45, 70, "かくとう", "やるき/いかりのつぼ", 28.0, 57, "オコリザル", 65, 105, 60, 60, 70, 95, "かくとう", "やるき/いかりのつぼ", 32.0, 58, "ガーディ", 55, 70, 45, 70, 50, 60, "ほのお", "いかく/もらいび", 19.0, 59, "ウインディ", 90, 110, 80, 100, 80, 95, "ほのお", "いかく/もらいび", 155.0, 60, "ニョロモ", 40, 50, 40, 40, 40, 90, "みず", "ちょすい/しめりけ", 12.4, 61, "ニョロゾ", 65, 65, 65, 50, 50, 90, "みず", "ちょすい/しめりけ", 20.0, 62, "ニョロボン", 90, 85, 95, 70, 90, 70, "みず/かくとう", "ちょすい/しめりけ", 54.0, 63, "ケーシィ", 25, 20, 15, 105, 55, 90, "エスパー", "シンクロ/せいしんりょく", 19.5, 64, "ユンゲラー", 40, 35, 30, 120, 70, 105, "エスパー", "シンクロ/せいしんりょく", 56.5, 65, "フーディン", 55, 50, 45, 135, 85, 120, "エスパー", "シンクロ/せいしんりょく", 48.0, 66, "ワンリキー", 70, 80, 50, 35, 35, 35, "かくとう", "こんじょう/ノーガード", 19.5, 67, "ゴーリキー", 80, 100, 70, 50, 60, 45, "かくとう", "こんじょう/ノーガード", 70.5, 68, "カイリキー", 90, 130, 80, 65, 85, 55, "かくとう", "こんじょう/ノーガード", 130.0, 69, "マダツボミ", 50, 75, 35, 70, 30, 40, "くさ/どく", "ようりょくそ", 4.0, 70, "ウツドン", 65, 90, 50, 85, 45, 55, "くさ/どく", "ようりょくそ", 6.4, 71, "ウツボット", 80, 105, 65, 100, 60, 70, "くさ/どく", "ようりょくそ", 15.5, 72, "メノクラゲ", 40, 40, 35, 50, 100, 70, "みず/どく", "クリアボディ/ヘドロえき", 45.5, 73, "ドククラゲ", 80, 70, 65, 80, 120, 100, "みず/どく", "クリアボディ/ヘドロえき", 55.0, 74, "イシツブテ", 40, 80, 100, 30, 30, 20, "いわ/じめん", "いしあたま/がんじょう", 20.0, 75, "ゴローン", 55, 95, 115, 45, 45, 35, "いわ/じめん", "いしあたま/がんじょう", 105.0, 76, "ゴローニャ", 80, 110, 130, 55, 65, 45, "いわ/じめん", "いしあたま/がんじょう", 300.0, 77, "ポニータ", 50, 85, 55, 65, 65, 90, "ほのお", "にげあし/もらいび", 30.0, 78, "ギャロップ", 65, 100, 70, 80, 80, 105, "ほのお", "にげあし/もらいび", 95.0, 79, "ヤドン", 90, 65, 65, 40, 40, 15, "みず/エスパー", "どんかん/マイペース", 36.0, 80, "ヤドラン", 95, 75, 110, 100, 80, 30, "みず/エスパー", "どんかん/マイペース", 78.5, 81, "コイル", 25, 35, 70, 95, 55, 45, "でんき/はがね", "じりょく/がんじょう", 6.0, 82, "レアコイル", 50, 60, 95, 120, 70, 70, "でんき/はがね", "じりょく/がんじょう", 60.0, 83, "カモネギ", 52, 65, 55, 58, 62, 60, "ノーマル/ひこう", "するどいめ/せいしんりょく", 15.0, 84, "ドードー", 35, 85, 45, 35, 35, 75, "ノーマル/ひこう", "にげあし/はやおき", 39.2, 85, "ドードリオ", 60, 110, 70, 60, 60, 100, "ノーマル/ひこう", "にげあし/はやおき", 85.2, 86, "パウワウ", 65, 45, 55, 45, 70, 45, "みず", "あついしぼう/うるおいボディ", 90.0, 87, "ジュゴン", 90, 70, 80, 70, 95, 70, "みず/こおり", "あついしぼう/うるおいボディ", 120.0, 88, "ベトベター", 80, 80, 50, 40, 50, 25, "どく", "あくしゅう/ねんちゃく", 30.0, 89, "ベトベトン", 105, 105, 75, 65, 100, 50, "どく", "あくしゅう/ねんちゃく", 30.0, 90, "シェルダー", 30, 65, 100, 45, 25, 40, "みず", "シェルアーマー/スキルリンク", 4.0, 91, "パルシェン", 50, 95, 180, 85, 45, 70, "みず/こおり", "シェルアーマー/スキルリンク", 132.5, 92, "ゴース", 30, 35, 30, 100, 35, 80, "ゴースト/どく", "ふゆう", 0.1, 93, "ゴースト", 45, 50, 45, 115, 55, 95, "ゴースト/どく", "ふゆう", 0.1, 94, "ゲンガー", 60, 65, 60, 130, 75, 110, "ゴースト/どく", "ふゆう", 40.5, 95, "イワーク", 35, 45, 160, 30, 45, 70, "いわ/じめん", "いしあたま/がんじょう", 210.0, 96, "スリープ", 60, 48, 45, 43, 90, 42, "エスパー", "ふみん/よちむ", 32.4, 97, "スリーパー", 85, 73, 70, 73, 115, 67, "エスパー", "ふみん/よちむ", 75.6, 98, "クラブ", 30, 105, 90, 25, 25, 50, "みず", "かいりきバサミ/シェルアーマー", 6.5, 99, "キングラー", 55, 130, 115, 50, 50, 75, "みず", "かいりきバサミ/シェルアーマー", 60.0, 100, "ビリリダマ", 40, 30, 50, 55, 55, 100, "でんき", "ぼうおん/せいでんき", 10.4, 101, "マルマイン", 60, 50, 70, 80, 80, 140, "でんき", "ぼうおん/せいでんき", 66.6, 102, "タマタマ", 60, 40, 80, 60, 45, 40, "くさ/エスパー", "ようりょくそ", 2.5, 103, "ナッシー", 95, 95, 85, 125, 65, 55, "くさ/エスパー", "ようりょくそ", 120.0, 104, "カラカラ", 50, 50, 95, 40, 50, 35, "じめん", "いしあたま/ひらいしん", 6.5, 105, "ガラガラ", 60, 80, 110, 50, 80, 45, "じめん", "いしあたま/ひらいしん", 45.0, 106, "サワムラー", 50, 120, 53, 35, 110, 87, "かくとう", "じゅうなん/すてみ", 49.8, 107, "エビワラー", 50, 105, 79, 35, 110, 76, "かくとう", "するどいめ/てつのこぶし", 50.2, 108, "ベロリンガ", 90, 55, 75, 60, 75, 30, "ノーマル", "マイペース/どんかん", 65.5, 109, "ドガース", 40, 65, 95, 60, 45, 35, "どく", "ふゆう", 1.0, 110, "マタドガス", 65, 90, 120, 85, 70, 60, "どく", "ふゆう", 9.5, 111, "サイホーン", 80, 85, 95, 30, 30, 25, "じめん/いわ", "ひらいしん/いしあたま", 115.0, 112, "サイドン", 105, 130, 120, 45, 45, 40, "じめん/いわ", "ひらいしん/いしあたま", 120.0, 113, "ラッキー", 250, 5, 5, 35, 105, 50, "ノーマル", "しぜんかいふく/てんのめぐみ", 34.6, 114, "モンジャラ", 65, 55, 115, 100, 40, 60, "くさ", "ようりょくそ/リーフガード", 35.0, 115, "ガルーラ", 105, 95, 80, 40, 80, 90, "ノーマル", "はやおき/きもったま", 80.0, 116, "タッツー", 30, 40, 70, 70, 25, 60, "みず", "すいすい/スナイパー", 8.0, 117, "シードラ", 55, 65, 95, 95, 45, 85, "みず", "どくのトゲ/スナイパー", 25.0, 118, "トサキント", 45, 67, 60, 35, 50, 63, "みず", "すいすい/みずのベール", 15.0, 119, "アズマオウ", 80, 92, 65, 65, 80, 68, "みず", "すいすい/みずのベール", 39.0, 120, "ヒトデマン", 30, 45, 55, 70, 55, 85, "みず", "はっこう/しぜんかいふく", 34.5, 121, "スターミー", 60, 75, 85, 100, 85, 115, "みず/エスパー", "はっこう/しぜんかいふく", 80.0, 122, "バリヤード", 40, 45, 65, 100, 120, 90, "エスパー", "ぼうおん/フィルター", 54.5, 123, "ストライク", 70, 110, 80, 55, 80, 105, "むし/ひこう", "むしのしらせ/テクニシャン", 56.0, 124, "ルージュラ", 65, 50, 35, 115, 95, 95, "こおり/エスパー", "どんかん/よちむ", 40.6, 125, "エレブー", 65, 83, 57, 95, 85, 105, "でんき", "せいでんき", 30.0, 126, "ブーバー", 65, 95, 57, 100, 85, 93, "ほのお", "ほのおのからだ", 44.5, 127, "カイロス", 65, 125, 100, 55, 70, 85, "むし", "かいりきバサミ/かたやぶり", 55.0, 128, "ケンタロス", 75, 100, 95, 40, 70, 110, "ノーマル", "いかく/いかりのつぼ", 88.4, 129, "コイキング", 20, 10, 55, 15, 20, 80, "みず", "すいすい", 10.0, 130, "ギャラドス", 95, 125, 79, 60, 100, 81, "みず/ひこう", "いかく", 235.0, 131, "ラプラス", 130, 85, 80, 85, 95, 60, "みず/こおり", "ちょすい/シェルアーマー", 220.0, 132, "メタモン", 48, 48, 48, 48, 48, 48, "ノーマル", "じゅうなん", 4.0, 133, "イーブイ", 55, 55, 50, 45, 65, 55, "ノーマル", "にげあし/てきおうりょく", 6.5, 134, "シャワーズ", 130, 65, 60, 110, 95, 65, "みず", "ちょすい", 29.0, 135, "サンダース", 65, 65, 60, 110, 95, 130, "でんき", "ちくでん", 24.5, 136, "ブースター", 65, 130, 60, 95, 110, 65, "ほのお", "もらいび", 25.0, 137, "ポリゴン", 65, 60, 70, 85, 75, 40, "ノーマル", "トレース/ダウンロード", 36.5, 138, "オムナイト", 35, 40, 100, 90, 55, 35, "いわ/みず", "すいすい/シェルアーマー", 7.5, 139, "オムスター", 70, 60, 125, 115, 70, 55, "いわ/みず", "すいすい/シェルアーマー", 35.0, 140, "カブト", 30, 80, 90, 55, 45, 55, "いわ/みず", "すいすい/カブトアーマー", 11.5, 141, "カブトプス", 60, 115, 105, 65, 70, 80, "いわ/みず", "すいすい/カブトアーマー", 40.5, 142, "プテラ", 80, 105, 65, 60, 75, 130, "いわ/ひこう", "いしあたま/プレッシャー", 59.0, 143, "カビゴン", 160, 110, 65, 65, 110, 30, "ノーマル", "めんえき/あついしぼう", 460.0, 144, "フリーザー", 90, 85, 100, 95, 125, 85, "こおり/ひこう", "プレッシャー", 55.4, 145, "サンダー", 90, 90, 85, 125, 90, 100, "でんき/ひこう", "プレッシャー", 52.6, 146, "ファイヤー", 90, 100, 90, 125, 85, 90, "ほのお/ひこう", "プレッシャー", 60.0, 147, "ミニリュウ", 41, 64, 45, 50, 50, 50, "ドラゴン", "だっぴ", 3.3, 148, "ハクリュー", 61, 84, 65, 70, 70, 70, "ドラゴン", "だっぴ", 16.5, 149, "カイリュー", 91, 134, 95, 100, 100, 80, "ドラゴン/ひこう", "せいしんりょく", 210.0, 150, "ミュウツー", 106, 110, 90, 154, 90, 130, "エスパー", "プレッシャー", 122.0, 151, "ミュウ", 100, 100, 100, 100, 100, 100, "エスパー", "シンクロ", 4.0, 152, "チコリータ", 45, 49, 65, 49, 65, 45, "くさ", "しんりょく", 6.4, 153, "ベイリーフ", 60, 62, 80, 63, 80, 60, "くさ", "しんりょく", 15.8, 154, "メガニウム", 80, 82, 100, 83, 100, 80, "くさ", "しんりょく", 100.5, 155, "ヒノアラシ", 39, 52, 43, 60, 50, 65, "ほのお", "もうか", 7.9, 156, "マグマラシ", 58, 64, 58, 80, 65, 80, "ほのお", "もうか", 19.0, 157, "バクフーン", 78, 84, 78, 109, 85, 100, "ほのお", "もうか", 79.5, 158, "ワニノコ", 50, 65, 64, 44, 48, 43, "みず", "げきりゅう", 9.5, 159, "アリゲイツ", 65, 80, 80, 59, 63, 58, "みず", "げきりゅう", 25.0, 160, "オーダイル", 85, 105, 100, 79, 83, 78, "みず", "げきりゅう", 88.8, 161, "オタチ", 35, 46, 34, 35, 45, 20, "ノーマル", "にげあし/するどいめ", 6.0, 162, "オオタチ", 85, 76, 64, 45, 55, 90, "ノーマル", "にげあし/するどいめ", 32.5, 163, "ホーホー", 60, 30, 30, 36, 56, 50, "ノーマル/ひこう", "ふみん/するどいめ", 21.2, 164, "ヨルノズク", 100, 50, 50, 76, 96, 70, "ノーマル/ひこう", "ふみん/するどいめ", 40.8, 165, "レディバ", 40, 20, 30, 40, 80, 55, "むし/ひこう", "むしのしらせ/はやおき", 10.8, 166, "レディアン", 55, 35, 50, 55, 110, 85, "むし/ひこう", "むしのしらせ/はやおき", 35.6, 167, "イトマル", 40, 60, 40, 40, 40, 30, "むし/どく", "むしのしらせ/ふみん", 8.5, 168, "アリアドス", 70, 90, 70, 60, 60, 40, "むし/どく", "むしのしらせ/ふみん", 33.5, 169, "クロバット", 85, 90, 80, 70, 80, 130, "どく/ひこう", "せいしんりょく", 75.0, 170, "チョンチー", 75, 38, 38, 56, 56, 67, "みず/でんき", "ちくでん/はっこう", 12.0, 171, "ランターン", 125, 58, 58, 76, 76, 67, "みず/でんき", "ちくでん/はっこう", 22.5, 172, "ピチュー", 20, 40, 15, 35, 35, 60, "でんき", "せいでんき", 2.0, 173, "ピィ", 50, 25, 28, 45, 55, 15, "ノーマル", "メロメロボディ/マジックガード", 3.0, 174, "ププリン", 90, 30, 15, 40, 20, 15, "ノーマル", "メロメロボディ", 1.0, 175, "トゲピー", 35, 20, 65, 40, 65, 20, "ノーマル", "はりきり/てんのめぐみ", 1.5, 176, "トゲチック", 55, 40, 85, 80, 105, 40, "ノーマル/ひこう", "はりきり/てんのめぐみ", 3.2, 177, "ネイティ", 40, 50, 45, 70, 45, 70, "エスパー/ひこう", "シンクロ/はやおき", 2.0, 178, "ネイティオ", 65, 75, 70, 95, 70, 95, "エスパー/ひこう", "シンクロ/はやおき", 15.0, 179, "メリープ", 55, 40, 40, 65, 45, 35, "でんき", "せいでんき", 7.8, 180, "モココ", 70, 55, 55, 80, 60, 45, "でんき", "せいでんき", 13.3, 181, "デンリュウ", 90, 75, 75, 115, 90, 55, "でんき", "せいでんき", 61.5, 182, "キレイハナ", 75, 80, 85, 90, 100, 50, "くさ", "ようりょくそ", 5.8, 183, "マリル", 70, 20, 50, 20, 50, 40, "みず", "あついしぼう/ちからもち", 8.5, 184, "マリルリ", 100, 50, 80, 50, 80, 50, "みず", "あついしぼう/ちからもち", 28.5, 185, "ウソッキー", 70, 100, 115, 30, 65, 30, "いわ", "がんじょう/いしあたま", 38.0, 186, "ニョロトノ", 90, 75, 75, 90, 100, 70, "みず", "ちょすい/しめりけ", 33.9, 187, "ハネッコ", 35, 35, 40, 35, 55, 50, "くさ/ひこう", "ようりょくそ/リーフガード", 0.5, 188, "ポポッコ", 55, 45, 50, 45, 65, 80, "くさ/ひこう", "ようりょくそ/リーフガード", 1.0, 189, "ワタッコ", 75, 55, 70, 55, 85, 110, "くさ/ひこう", "ようりょくそ/リーフガード", 3.0, 190, "エイパム", 55, 70, 55, 40, 55, 85, "ノーマル", "にげあし/ものひろい", 11.5, 191, "ヒマナッツ", 30, 30, 30, 30, 30, 30, "くさ", "ようりょくそ/サンパワー", 1.8, 192, "キマワリ", 75, 75, 55, 105, 85, 30, "くさ", "ようりょくそ/サンパワー", 8.5, 193, "ヤンヤンマ", 65, 65, 45, 75, 45, 95, "むし/ひこう", "かそく/ふくがん", 38.0, 194, "ウパー", 55, 45, 45, 25, 25, 15, "みず/じめん", "しめりけ/ちょすい", 8.5, 195, "ヌオー", 95, 85, 85, 65, 65, 35, "みず/じめん", "しめりけ/ちょすい", 75.0, 196, "エーフィ", 65, 65, 60, 130, 95, 110, "エスパー", "シンクロ", 26.5, 197, "ブラッキー", 95, 65, 110, 60, 130, 65, "あく", "シンクロ", 27.0, 198, "ヤミカラス", 60, 85, 42, 85, 42, 91, "あく/ひこう", "ふみん/きょううん", 2.1, 199, "ヤドキング", 95, 75, 80, 100, 110, 30, "みず/エスパー", "どんかん/マイペース", 79.5, 200, "ムウマ", 60, 60, 60, 85, 85, 85, "ゴースト", "ふゆう", 1.0, 201, "アンノーン", 48, 72, 48, 72, 48, 48, "エスパー", "ふゆう", 5.0, 202, "ソーナンス", 190, 33, 58, 33, 58, 33, "エスパー", "かげふみ", 28.5, 203, "キリンリキ", 70, 80, 65, 90, 65, 85, "ノーマル/エスパー", "せいしんりょく/はやおき", 41.5, 204, "クヌギダマ", 50, 65, 90, 35, 35, 15, "むし", "がんじょう", 7.2, 205, "フォレトス", 75, 90, 140, 60, 60, 40, "むし/はがね", "がんじょう", 125.8, 206, "ノコッチ", 100, 70, 70, 65, 65, 45, "ノーマル", "てんのめぐみ/にげあし", 14.0, 207, "グライガー", 65, 75, 105, 35, 65, 85, "じめん/ひこう", "かいりきバサミ/すながくれ", 64.8, 208, "ハガネール", 75, 85, 200, 55, 65, 30, "はがね/じめん", "いしあたま/がんじょう", 400.0, 209, "ブルー", 60, 80, 50, 40, 40, 30, "ノーマル", "いかく/にげあし", 7.8, 210, "グランブル", 90, 120, 75, 60, 60, 45, "ノーマル", "いかく/はやあし", 48.7, 211, "ハリーセン", 65, 95, 75, 55, 55, 85, "みず/どく", "どくのトゲ/すいすい", 3.9, 212, "ハッサム", 70, 130, 100, 55, 80, 65, "むし/はがね", "むしのしらせ/テクニシャン", 118.0, 213, "ツボツボ", 20, 10, 230, 10, 230, 5, "むし/いわ", "がんじょう/くいしんぼう", 20.5, 214, "ヘラクロス", 80, 125, 75, 40, 95, 85, "むし/かくとう", "むしのしらせ/こんじょう", 54.0, 215, "ニューラ", 55, 95, 55, 35, 75, 115, "あく/こおり", "せいしんりょく/するどいめ", 28.0, 216, "ヒメグマ", 60, 80, 50, 50, 50, 40, "ノーマル", "ものひろい/はやあし", 8.8, 217, "リングマ", 90, 130, 75, 75, 75, 55, "ノーマル", "こんじょう/はやあし", 125.8, 218, "マグマッグ", 40, 40, 40, 70, 40, 20, "ほのお", "マグマのよろい/ほのおのからだ", 35.0, 219, "マグカルゴ", 50, 50, 120, 80, 80, 30, "ほのお/いわ", "マグマのよろい/ほのおのからだ", 55.0, 220, "ウリムー", 50, 50, 40, 30, 30, 50, "こおり/じめん", "どんかん/ゆきがくれ", 6.5, 221, "イノムー", 100, 100, 80, 60, 60, 50, "こおり/じめん", "どんかん/ゆきがくれ", 55.8, 222, "サニーゴ", 55, 55, 85, 65, 85, 35, "みず/いわ", "はりきり/しぜんかいふく", 5.0, 223, "テッポウオ", 35, 65, 35, 65, 35, 65, "みず", "はりきり/スナイパー", 12.0, 224, "オクタン", 75, 105, 75, 105, 75, 45, "みず", "きゅうばん/スナイパー", 28.5, 225, "デリバード", 45, 55, 45, 65, 45, 75, "こおり/ひこう", "やるき/はりきり", 16.0, 226, "マンタイン", 65, 40, 70, 80, 140, 70, "みず/ひこう", "すいすい/ちょすい", 220.0, 227, "エアームド", 65, 80, 140, 40, 70, 70, "はがね/ひこう", "するどいめ/がんじょう", 50.5, 228, "デルビル", 45, 60, 30, 80, 50, 65, "あく/ほのお", "はやおき/もらいび", 10.8, 229, "ヘルガー", 75, 90, 50, 110, 80, 95, "あく/ほのお", "はやおき/もらいび", 35.0, 230, "キングドラ", 75, 95, 95, 95, 95, 85, "みず/ドラゴン", "すいすい/スナイパー", 152.0, 231, "ゴマゾウ", 90, 60, 60, 40, 40, 40, "じめん", "ものひろい", 33.5, 232, "ドンファン", 90, 120, 120, 60, 60, 50, "じめん", "がんじょう", 120.0, 233, "ポリゴン２", 85, 80, 90, 105, 95, 60, "ノーマル", "トレース/ダウンロード", 32.5, 234, "オドシシ", 73, 95, 62, 85, 65, 85, "ノーマル", "いかく/おみとおし", 71.2, 235, "ドーブル", 55, 20, 35, 20, 45, 75, "ノーマル", "マイペース/テクニシャン", 58.0, 236, "バルキー", 35, 35, 35, 35, 35, 35, "かくとう", "こんじょう/ふくつのこころ", 21.0, 237, "カポエラー", 50, 95, 95, 35, 110, 70, "かくとう", "いかく/テクニシャン", 48.0, 238, "ムチュール", 45, 30, 15, 85, 65, 65, "こおり/エスパー", "どんかん/よちむ", 6.0, 239, "エレキッド", 45, 63, 37, 65, 55, 95, "でんき", "せいでんき", 23.5, 240, "ブビィ", 45, 75, 37, 70, 55, 83, "ほのお", "ほのおのからだ", 21.4, 241, "ミルタンク", 95, 80, 105, 40, 70, 100, "ノーマル", "あついしぼう/きもったま", 75.5, 242, "ハピナス", 255, 10, 10, 75, 135, 55, "ノーマル", "しぜんかいふく/てんのめぐみ", 46.8, 243, "ライコウ", 90, 85, 75, 115, 100, 115, "でんき", "プレッシャー", 178.0, 244, "エンテイ", 115, 115, 85, 90, 75, 100, "ほのお", "プレッシャー", 198.0, 245, "スイクン", 100, 75, 115, 90, 115, 85, "みず", "プレッシャー", 187.0, 246, "ヨーギラス", 50, 64, 50, 45, 50, 41, "いわ/じめん", "こんじょう", 72.0, 247, "サナギラス", 70, 84, 70, 65, 70, 51, "いわ/じめん", "だっぴ", 152.0, 248, "バンギラス", 100, 134, 110, 95, 100, 61, "いわ/あく", "すなおこし", 202.0, 249, "ルギア", 106, 90, 130, 90, 154, 110, "エスパー/ひこう", "プレッシャー", 216.0, 250, "ホウオウ", 106, 130, 90, 110, 154, 90, "ほのお/ひこう", "プレッシャー", 199.0, 251, "セレビィ", 100, 100, 100, 100, 100, 100, "エスパー/くさ", "しぜんかいふく", 5.0, 252, "キモリ", 40, 45, 35, 65, 55, 70, "くさ", "しんりょく", 5.0, 253, "ジュプトル", 50, 65, 45, 85, 65, 95, "くさ", "しんりょく", 21.6, 254, "ジュカイン", 70, 85, 65, 105, 85, 120, "くさ", "しんりょく", 52.2, 255, "アチャモ", 45, 60, 40, 70, 50, 45, "ほのお", "もうか", 2.5, 256, "ワカシャモ", 60, 85, 60, 85, 60, 55, "ほのお/かくとう", "もうか", 19.5, 257, "バシャーモ", 80, 120, 70, 110, 70, 80, "ほのお/かくとう", "もうか", 52.0, 258, "ミズゴロウ", 50, 70, 50, 50, 50, 40, "みず", "げきりゅう", 7.6, 259, "ヌマクロー", 70, 85, 70, 60, 70, 50, "みず/じめん", "げきりゅう", 28.0, 260, "ラグラージ", 100, 110, 90, 85, 90, 60, "みず/じめん", "げきりゅう", 81.9, 261, "ポチエナ", 35, 55, 35, 30, 30, 35, "あく", "にげあし/はやあし", 13.6, 262, "グラエナ", 70, 90, 70, 60, 60, 70, "あく", "にげあし/はやあし", 37.0, 263, "ジグザグマ", 38, 30, 41, 30, 41, 60, "ノーマル", "ものひろい/くいしんぼう", 17.5, 264, "マッスグマ", 78, 70, 61, 50, 61, 100, "ノーマル", "ものひろい/くいしんぼう", 32.5, 265, "ケムッソ", 45, 45, 35, 20, 30, 20, "むし", "りんぷん", 3.6, 266, "カラサリス", 50, 35, 55, 25, 25, 15, "むし", "だっぴ", 10.0, 267, "アゲハント", 60, 70, 50, 90, 50, 65, "むし/ひこう", "むしのしらせ", 28.4, 268, "マユルド", 50, 35, 55, 25, 25, 15, "むし", "だっぴ", 11.5, 269, "ドクケイル", 60, 50, 70, 50, 90, 65, "むし/どく", "りんぷん", 31.6, 270, "ハスボー", 40, 30, 30, 40, 50, 30, "みず/くさ", "すいすい/あめうけざら", 2.6, 271, "ハスブレロ", 60, 50, 50, 60, 70, 50, "みず/くさ", "すいすい/あめうけざら", 32.5, 272, "ルンパッパ", 80, 70, 70, 90, 100, 70, "みず/くさ", "すいすい/あめうけざら", 55.0, 273, "タネボー", 40, 40, 50, 30, 30, 30, "くさ", "ようりょくそ/はやおき", 4.0, 274, "コノハナ", 70, 70, 40, 60, 40, 60, "くさ/あく", "ようりょくそ/はやおき", 28.0, 275, "ダーテング", 90, 100, 60, 90, 60, 80, "くさ/あく", "ようりょくそ/はやおき", 59.6, 276, "スバメ", 40, 55, 30, 30, 30, 85, "ノーマル/ひこう", "こんじょう", 2.3, 277, "オオスバメ", 60, 85, 60, 50, 50, 125, "ノーマル/ひこう", "こんじょう", 19.8, 278, "キャモメ", 40, 30, 30, 55, 30, 85, "みず/ひこう", "するどいめ", 9.5, 279, "ペリッパー", 60, 50, 100, 85, 70, 65, "みず/ひこう", "するどいめ", 28.0, 280, "ラルトス", 28, 25, 25, 45, 35, 40, "エスパー", "シンクロ/トレース", 6.6, 281, "キルリア", 38, 35, 35, 65, 55, 50, "エスパー", "シンクロ/トレース", 20.2, 282, "サーナイト", 68, 65, 65, 125, 115, 80, "エスパー", "シンクロ/トレース", 48.4, 283, "アメタマ", 40, 30, 32, 50, 52, 65, "むし/みず", "すいすい", 1.7, 284, "アメモース", 70, 60, 62, 80, 82, 60, "むし/ひこう", "いかく", 3.6, 285, "キノココ", 60, 40, 60, 40, 60, 35, "くさ", "ほうし/ポイズンヒール", 4.5, 286, "キノガッサ", 60, 130, 80, 60, 60, 70, "くさ/かくとう", "ほうし/ポイズンヒール", 39.2, 287, "ナマケロ", 60, 60, 60, 35, 35, 30, "ノーマル", "なまけ", 24.0, 288, "ヤルキモノ", 80, 80, 80, 55, 55, 90, "ノーマル", "やるき", 46.5, 289, "ケッキング", 150, 160, 100, 95, 65, 100, "ノーマル", "なまけ", 130.5, 290, "ツチニン", 31, 45, 90, 30, 30, 40, "むし/じめん", "ふくがん", 5.5, 291, "テッカニン", 61, 90, 45, 50, 50, 160, "むし/ひこう", "かそく", 12.0, 292, "ヌケニン", 1, 90, 45, 30, 30, 40, "むし/ゴースト", "ふしぎなまもり", 1.2, 293, "ゴニョニョ", 64, 51, 23, 51, 23, 28, "ノーマル", "ぼうおん", 16.3, 294, "ドゴーム", 84, 71, 43, 71, 43, 48, "ノーマル", "ぼうおん", 40.5, 295, "バクオング", 104, 91, 63, 91, 63, 68, "ノーマル", "ぼうおん", 84.0, 296, "マクノシタ", 72, 60, 30, 20, 30, 25, "かくとう", "あついしぼう/こんじょう", 86.4, 297, "ハリテヤマ", 144, 120, 60, 40, 60, 50, "かくとう", "あついしぼう/こんじょう", 253.8, 298, "ルリリ", 50, 20, 40, 20, 40, 20, "ノーマル", "あついしぼう/ちからもち", 2.0, 299, "ノズパス", 30, 45, 135, 45, 90, 30, "いわ", "がんじょう/じりょく", 97.0, 300, "エネコ", 50, 45, 45, 35, 35, 50, "ノーマル", "メロメロボディ/ノーマルスキン", 11.0, 301, "エネコロロ", 70, 65, 65, 55, 55, 70, "ノーマル", "メロメロボディ/ノーマルスキン", 32.6, 302, "ヤミラミ", 50, 75, 75, 65, 65, 50, "あく/ゴースト", "するどいめ/あとだし", 11.0, 303, "クチート", 50, 85, 85, 55, 55, 50, "はがね", "かいりきバサミ/いかく", 11.5, 304, "ココドラ", 50, 70, 100, 40, 40, 30, "はがね/いわ", "がんじょう/いしあたま", 60.0, 305, "コドラ", 60, 90, 140, 50, 50, 40, "はがね/いわ", "がんじょう/いしあたま", 120.0, 306, "ボスゴドラ", 70, 110, 180, 60, 60, 50, "はがね/いわ", "がんじょう/いしあたま", 360.0, 307, "アサナン", 30, 40, 55, 40, 55, 60, "かくとう/エスパー", "ヨガパワー", 11.2, 308, "チャーレム", 60, 60, 75, 60, 75, 80, "かくとう/エスパー", "ヨガパワー", 31.5, 309, "ラクライ", 40, 45, 40, 65, 40, 65, "でんき", "せいでんき/ひらいしん", 15.2, 310, "ライボルト", 70, 75, 60, 105, 60, 105, "でんき", "せいでんき/ひらいしん", 40.2, 311, "プラスル", 60, 50, 40, 85, 75, 95, "でんき", "プラス", 4.2, 312, "マイナン", 60, 40, 50, 75, 85, 95, "でんき", "マイナス", 4.2, 313, "バルビート", 65, 73, 55, 47, 75, 85, "むし", "はっこう/むしのしらせ", 17.7, 314, "イルミーゼ", 65, 47, 55, 73, 75, 85, "むし", "どんかん/いろめがね", 17.7, 315, "ロゼリア", 50, 60, 45, 100, 80, 65, "くさ/どく", "しぜんかいふく/どくのトゲ", 2.0, 316, "ゴクリン", 70, 43, 53, 43, 53, 40, "どく", "ヘドロえき/ねんちゃく", 10.3, 317, "マルノーム", 100, 73, 83, 73, 83, 55, "どく", "ヘドロえき/ねんちゃく", 80.0, 318, "キバニア", 45, 90, 20, 65, 20, 65, "みず/あく", "さめはだ", 20.8, 319, "サメハダー", 70, 120, 40, 95, 40, 95, "みず/あく", "さめはだ", 88.8, 320, "ホエルコ", 130, 70, 35, 70, 35, 60, "みず", "みずのベール/どんかん", 130.0, 321, "ホエルオー", 170, 90, 45, 90, 45, 60, "みず", "みずのベール/どんかん", 398.0, 322, "ドンメル", 60, 60, 40, 65, 45, 35, "ほのお/じめん", "どんかん/たんじゅん", 24.0, 323, "バクーダ", 70, 100, 70, 105, 75, 40, "ほのお/じめん", "マグマのよろい/ハードロック", 220.0, 324, "コータス", 70, 85, 140, 85, 70, 20, "ほのお", "しろいけむり", 80.4, 325, "バネブー", 60, 25, 35, 70, 80, 60, "エスパー", "あついしぼう/マイペース", 30.6, 326, "ブーピッグ", 80, 45, 65, 90, 110, 80, "エスパー", "あついしぼう/マイペース", 71.5, 327, "パッチール", 60, 60, 60, 60, 60, 60, "ノーマル", "マイペース/ちどりあし", 5.0, 328, "ナックラー", 45, 100, 45, 45, 45, 10, "じめん", "かいりきバサミ/ありじごく", 15.0, 329, "ビブラーバ", 50, 70, 50, 50, 50, 70, "じめん/ドラゴン", "ふゆう", 15.3, 330, "フライゴン", 80, 100, 80, 80, 80, 100, "じめん/ドラゴン", "ふゆう", 82.0, 331, "サボネア", 50, 85, 40, 85, 40, 35, "くさ", "すながくれ", 51.3, 332, "ノクタス", 70, 115, 60, 115, 60, 55, "くさ/あく", "すながくれ", 77.4, 333, "チルット", 45, 40, 60, 40, 75, 50, "ノーマル/ひこう", "しぜんかいふく", 1.2, 334, "チルタリス", 75, 70, 90, 70, 105, 80, "ドラゴン/ひこう", "しぜんかいふく", 20.6, 335, "ザングース", 73, 115, 60, 60, 60, 90, "ノーマル", "めんえき", 40.3, 336, "ハブネーク", 73, 100, 60, 100, 60, 65, "どく", "だっぴ", 52.5, 337, "ルナトーン", 70, 55, 65, 95, 85, 70, "いわ/エスパー", "ふゆう", 168.0, 338, "ソルロック", 70, 95, 85, 55, 65, 70, "いわ/エスパー", "ふゆう", 154.0, 339, "ドジョッチ", 50, 48, 43, 46, 41, 60, "みず/じめん", "どんかん/きけんよち", 1.9, 340, "ナマズン", 110, 78, 73, 76, 71, 60, "みず/じめん", "どんかん/きけんよち", 23.6, 341, "ヘイガニ", 43, 80, 65, 50, 35, 35, "みず", "かいりきバサミ/シェルアーマー", 11.5, 342, "シザリガー", 63, 120, 85, 90, 55, 55, "みず/あく", "かいりきバサミ/シェルアーマー", 32.8, 343, "ヤジロン", 40, 40, 55, 40, 70, 55, "じめん/エスパー", "ふゆう", 21.5, 344, "ネンドール", 60, 70, 105, 70, 120, 75, "じめん/エスパー", "ふゆう", 108.0, 345, "リリーラ", 66, 41, 77, 61, 87, 23, "いわ/くさ", "きゅうばん", 23.8, 346, "ユレイドル", 86, 81, 97, 81, 107, 43, "いわ/くさ", "きゅうばん", 60.4, 347, "アノプス", 45, 95, 50, 40, 50, 75, "いわ/むし", "カブトアーマー", 12.5, 348, "アーマルド", 75, 125, 100, 70, 80, 45, "いわ/むし", "カブトアーマー", 68.2, 349, "ヒンバス", 20, 15, 20, 10, 55, 80, "みず", "すいすい", 7.4, 350, "ミロカロス", 95, 60, 79, 100, 125, 81, "みず", "ふしぎなうろこ", 162.0, 351, "ポワルン", 70, 70, 70, 70, 70, 70, "ノーマル", "てんきや", 0.8, 352, "カクレオン", 60, 90, 70, 60, 120, 40, "ノーマル", "へんしょく", 22.0, 353, "カゲボウズ", 44, 75, 35, 63, 33, 45, "ゴースト", "ふみん/おみとおし", 2.3, 354, "ジュペッタ", 64, 115, 65, 83, 63, 65, "ゴースト", "ふみん/おみとおし", 12.5, 355, "ヨマワル", 20, 40, 90, 30, 90, 25, "ゴースト", "ふゆう", 15.0, 356, "サマヨール", 40, 70, 130, 60, 130, 25, "ゴースト", "プレッシャー", 30.6, 357, "トロピウス", 99, 68, 83, 72, 87, 51, "くさ/ひこう", "ようりょくそ/サンパワー", 100.0, 358, "チリーン", 65, 50, 70, 95, 80, 65, "エスパー", "ふゆう", 1.0, 359, "アブソル", 65, 130, 60, 75, 60, 75, "あく", "プレッシャー/きょううん", 47.0, 360, "ソーナノ", 95, 23, 48, 23, 48, 23, "エスパー", "かげふみ", 14.0, 361, "ユキワラシ", 50, 50, 50, 50, 50, 50, "こおり", "せいしんりょく/アイスボティ", 16.8, 362, "オニゴーリ", 80, 80, 80, 80, 80, 80, "こおり", "せいしんりょく/アイスボティ", 256.5, 363, "タマザラシ", 70, 40, 50, 55, 50, 25, "こおり/みず", "あついしぼう/アイスボディ", 39.5, 364, "トドグラー", 90, 60, 70, 75, 70, 45, "こおり/みず", "あついしぼう/アイスボディ", 87.6, 365, "トドゼルガ", 110, 80, 90, 95, 90, 65, "こおり/みず", "あついしぼう/アイスボディ", 150.6, 366, "パールル", 35, 64, 85, 74, 55, 32, "みず", "シェルアーマー", 52.5, 367, "ハンテール", 55, 104, 105, 94, 75, 52, "みず", "すいすい", 27.0, 368, "サクラビス", 55, 84, 105, 114, 75, 52, "みず", "すいすい", 22.6, 369, "ジーランス", 100, 90, 130, 45, 65, 55, "みず/いわ", "すいすい/いしあたま", 23.4, 370, "ラブカス", 43, 30, 55, 40, 65, 97, "みず", "すいすい", 8.7, 371, "タツベイ", 45, 75, 60, 40, 30, 50, "ドラゴン", "いしあたま", 42.1, 372, "コモルー", 65, 95, 100, 60, 50, 50, "ドラゴン", "いしあたま", 110.5, 373, "ボーマンダ", 95, 135, 80, 110, 80, 100, "ドラゴン/ひこう", "いかく", 102.6, 374, "ダンバル", 40, 55, 80, 35, 60, 30, "はがね/エスパー", "クリアボディ", 95.2, 375, "メタング", 60, 75, 100, 55, 80, 50, "はがね/エスパー", "クリアボディ", 202.5, 376, "メタグロス", 80, 135, 130, 95, 90, 70, "はがね/エスパー", "クリアボディ", 550.0, 377, "レジロック", 80, 100, 200, 50, 100, 50, "いわ", "クリアボディ", 230.0, 378, "レジアイス", 80, 50, 100, 100, 200, 50, "こおり", "クリアボディ", 175.0, 379, "レジスチル", 80, 75, 150, 75, 150, 50, "はがね", "クリアボディ", 205.0, 380, "ラティアス", 80, 80, 90, 110, 130, 110, "ドラゴン/エスパー", "ふゆう", 40.0, 381, "ラティオス", 80, 90, 80, 130, 110, 110, "ドラゴン/エスパー", "ふゆう", 60.0, 382, "カイオーガ", 100, 100, 90, 150, 140, 90, "みず", "あめふらし", 352.0, 383, "グラードン", 100, 150, 140, 100, 90, 90, "じめん", "ひでり", 950.0, 384, "レックウザ", 105, 150, 90, 150, 90, 95, "ドラゴン/ひこう", "エアロック", 206.5, 385, "ジラーチ", 100, 100, 100, 100, 100, 100, "はがね/エスパー", "てんのめぐみ", 1.1, 386, "デオキシスN", 50, 150, 50, 150, 50, 150, "エスパー", "プレッシャー", 60.8, 386, "デオキシスA", 50, 180, 20, 180, 20, 150, "エスパー", "プレッシャー", 60.8, 386, "デオキシスD", 50, 70, 160, 70, 160, 90, "エスパー", "プレッシャー", 60.8, 386, "デオキシスS", 50, 95, 90, 95, 90, 180, "エスパー", "プレッシャー", 60.8, 387, "ナエトル", 55, 68, 64, 45, 55, 31, "くさ", "しんりょく", 10.2, 388, "ハヤシガメ", 75, 89, 85, 55, 65, 36, "くさ", "しんりょく", 97.0, 389, "ドダイトス", 95, 109, 105, 75, 85, 56, "くさ/じめん", "しんりょく", 310.0, 390, "ヒコザル", 44, 58, 44, 58, 44, 61, "ほのお", "もうか", 6.2, 391, "モウカザル", 64, 78, 52, 78, 52, 81, "ほのお/かくとう", "もうか", 22.0, 392, "ゴウカザル", 76, 104, 71, 104, 71, 108, "ほのお/かくとう", "もうか", 55.0, 393, "ポッチャマ", 53, 51, 53, 61, 56, 40, "みず", "げきりゅう", 5.2, 394, "ポッタイシ", 64, 66, 68, 81, 76, 50, "みず", "げきりゅう", 23.0, 395, "エンペルト", 84, 86, 88, 111, 101, 60, "みず/はがね", "げきりゅう", 84.5, 396, "ムックル", 40, 55, 30, 30, 30, 60, "ノーマル/ひこう", "するどいめ", 2.0, 397, "ムクバード", 55, 75, 50, 40, 40, 80, "ノーマル/ひこう", "いかく", 15.5, 398, "ムクホーク", 85, 120, 70, 50, 50, 100, "ノーマル/ひこう", "いかく", 24.9, 399, "ビッパ", 59, 45, 40, 35, 40, 31, "ノーマル", "たんじゅう/てんねん", 20.0, 400, "ビーダル", 79, 85, 60, 55, 60, 71, "ノーマル/みず", "たんじゅう/てんねん", 31.5, 401, "コロボーシ", 37, 25, 41, 25, 41, 25, "むし", "だっぴ", 2.2, 402, "コロトック", 77, 85, 51, 55, 51, 65, "むし", "むしのしらせ", 25.5, 403, "コリンク", 45, 65, 34, 40, 34, 45, "でんき", "とうそうしん/いかく", 9.5, 404, "ルクシオ", 60, 85, 49, 60, 49, 60, "でんき", "とうそうしん/いかく", 30.5, 405, "レントラー", 80, 120, 79, 95, 79, 70, "でんき", "とうそうしん/いかく", 42.0, 406, "スボミー", 40, 30, 35, 50, 70, 55, "くさ/どく", "しぜんかいふく/どくのトゲ", 1.2, 407, "ロズレイド", 60, 70, 55, 125, 105, 90, "くさ/どく", "しぜんかいふく/どくのトゲ", 14.5, 408, "ズガイドス", 67, 125, 40, 30, 30, 58, "いわ", "かたやぶり", 31.5, 409, "ラムパルド", 97, 165, 60, 65, 50, 58, "いわ", "かたやぶり", 102.5, 410, "タテトプス", 30, 42, 118, 42, 88, 30, "いわ/はがね", "がんじょう", 57.0, 411, "トリデプス", 60, 52, 168, 47, 138, 30, "いわ/はがね", "がんじょう", 149.5, 412, "ミノムッチ", 40, 29, 45, 29, 45, 36, "むし", "だっぴ", 3.4, 413, "ミノマダム草", 60, 59, 85, 79, 105, 36, "むし/くさ", "きけんよち", 6.5, 413, "ミノマダム地", 60, 79, 105, 59, 85, 36, "むし/じめん", "きけんよち", 6.5, 413, "ミノマダム鋼", 60, 69, 95, 69, 95, 36, "むし/はがね", "きけんよち", 6.5, 414, "ガーメイル", 70, 94, 50, 94, 50, 66, "むし/ひこう", "むしのしらせ", 23.3, 415, "ミツハニー", 30, 30, 42, 30, 42, 70, "むし/ひこう", "みつあつめ", 5.5, 416, "ビークイン", 70, 80, 102, 80, 102, 40, "むし/ひこう", "プレッシャー", 38.5, 417, "パチリス", 60, 45, 70, 45, 90, 95, "でんき", "にげあし/ものひろい", 3.9, 418, "ブイゼル", 55, 65, 35, 60, 30, 85, "みず", "すいすい", 29.5, 419, "フローゼル", 85, 105, 55, 85, 50, 115, "みず", "すいすい", 33.5, 420, "チェリンボ", 45, 35, 45, 62, 53, 35, "くさ", "ようりょくそ", 3.3, 421, "チェリム", 70, 60, 70, 87, 78, 85, "くさ", "フラワーギフト", 9.3, 422, "カラナクシ", 76, 48, 48, 57, 62, 34, "みず", "ねんちゃく/よびみず", 6.3, 423, "トリトドン", 111, 83, 68, 92, 82, 39, "みず/じめん", "ねんちゃく/よびみず", 29.9, 424, "エテボース", 75, 100, 66, 60, 66, 115, "ノーマル", "テクニシャン/ものひろい", 20.3, 425, "フワンテ", 90, 50, 34, 60, 44, 70, "ゴースト/ひこう", "ゆうばく/かるわざ", 1.2, 426, "フワライド", 150, 80, 44, 90, 54, 80, "ゴースト/ひこう", "ゆうばく/かるわざ", 15.0, 427, "ミミロル", 55, 66, 44, 44, 56, 85, "ノーマル", "にげあし/ぶきよう", 5.5, 428, "ミミロップ", 65, 76, 84, 54, 96, 105, "ノーマル", "メロメロボディ/ぶきよう", 33.3, 429, "ムウマージ", 60, 60, 60, 105, 105, 105, "ゴースト", "ふゆう", 4.4, 430, "ドンカラス", 100, 125, 52, 105, 52, 71, "あく/ひこう", "ふみん/きょううん", 27.3, 431, "ニャルマー", 49, 55, 42, 42, 37, 85, "ノーマル", "じゅうなん/マイペース", 3.9, 432, "ブニャット", 71, 82, 64, 64, 59, 112, "ノーマル", "あついしぼう/マイペース", 43.8, 433, "リーシャン", 45, 30, 50, 65, 50, 45, "エスパー", "ふゆう", 0.6, 434, "スカンプー", 63, 63, 47, 41, 41, 74, "どく/あく", "あくしゅう/ゆうばく", 19.2, 435, "スカタンク", 103, 93, 67, 71, 61, 84, "どく/あく", "あくしゅう/ゆうばく", 38.0, 436, "ドーミラー", 57, 24, 86, 24, 86, 23, "はがね/エスパー", "ふゆう/たいねつ", 60.5, 437, "ドータクン", 67, 89, 116, 79, 116, 33, "はがね/エスパー", "ふゆう/たいねつ", 187.0, 438, "ウソハチ", 50, 80, 95, 10, 45, 10, "いわ", "がんじょう/いしあたま", 15.0, 439, "マネネ", 20, 25, 45, 70, 90, 60, "エスパー", "ぼうおん/フィルター", 13.0, 440, "ピンプク", 100, 5, 5, 15, 65, 30, "ノーマル", "しぜんかいふく/てんのめぐみ", 24.4, 441, "ペラップ", 76, 65, 45, 92, 42, 91, "ノーマル/ひこう", "するどいめ/ちどりあし", 1.9, 442, "ミカルゲ", 50, 92, 108, 92, 108, 35, "ゴースト/あく", "プレッシャー", 108.0, 443, "フカマル", 58, 70, 45, 40, 45, 42, "ドラゴン/じめん", "すながくれ", 20.5, 444, "ガバイト", 68, 90, 65, 50, 55, 82, "ドラゴン/じめん", "すながくれ", 56.0, 445, "ガブリアス", 108, 130, 95, 80, 85, 102, "ドラゴン/じめん", "すながくれ", 95.0, 446, "ゴンベ", 135, 85, 40, 40, 85, 5, "ノーマル", "ものひろい/あついしぼう", 105.0, 447, "リオル", 40, 70, 40, 35, 40, 60, "かくとう", "ふくつのこころ/せいしんりょく", 20.2, 448, "ルカリオ", 70, 110, 70, 115, 70, 90, "かくとう/はがね", "ふくつのこころ/せいしんりょく", 54.0, 449, "ヒポポタス", 68, 72, 78, 38, 42, 32, "じめん", "すなおこし", 49.5, 450, "カバルドン", 108, 112, 118, 68, 72, 47, "じめん", "すなおこし", 300.0, 451, "スコルピ", 40, 50, 90, 30, 55, 65, "どく/むし", "カブトアーマー/スナイパー", 12.0, 452, "ドラピオン", 70, 90, 110, 60, 75, 95, "どく/あく", "カブトアーマー/スナイパー", 61.5, 453, "グレッグル", 48, 61, 40, 61, 40, 50, "どく/かくとう", "きけんよち/かんそうはだ", 23.0, 454, "ドクロッグ", 83, 106, 65, 86, 65, 85, "どく/かくとう", "きけんよち/かんそうはだ", 44.4, 455, "マスキッパ", 74, 100, 72, 90, 72, 46, "くさ", "ふゆう", 27.0, 456, "ケイコウオ", 49, 49, 56, 49, 61, 66, "みず", "すいすい/よびみず", 7.0, 457, "ネオラント", 69, 69, 76, 69, 86, 91, "みず", "すいすい/よびみず", 24.0, 458, "タマンタ", 45, 20, 50, 60, 120, 50, "みず/ひこう", "すいすい/ちょすい", 65.0, 459, "ユキカブリ", 60, 62, 50, 62, 60, 40, "くさ/こおり", "ゆきふらし", 50.5, 460, "ユキノオー", 90, 92, 75, 92, 85, 60, "くさ/こおり", "ゆきふらし", 135.5, 461, "マニューラ", 70, 120, 65, 45, 85, 125, "あく/こおり", "プレッシャー", 34.0, 462, "ジバコイル", 70, 70, 115, 130, 90, 60, "でんき/はがね", "じりょく/がんじょう", 180.0, 463, "ベロベルト", 110, 85, 95, 80, 95, 50, "ノーマル", "マイペース/どんかん", 140.0, 464, "ドサイドン", 115, 140, 130, 55, 55, 40, "じめん/いわ", "ひらいしん/ハードロック", 282.8, 465, "モジャンボ", 100, 100, 125, 110, 50, 50, "くさ", "ようりょくそ/リーフガード", 128.6, 466, "エレキブル", 75, 123, 67, 95, 85, 95, "でんき", "でんきエンジン", 138.6, 467, "ブーバーン", 75, 95, 67, 125, 95, 83, "ほのお", "ほのおのからだ", 68.0, 468, "トゲキッス", 85, 50, 95, 120, 115, 80, "ノーマル/ひこう", "はりきり/てんのめぐみ", 38.0, 469, "メガヤンマ", 86, 76, 86, 116, 56, 95, "むし/ひこう", "かそく/いろめがね", 51.5, 470, "リーフィア", 65, 110, 130, 60, 65, 95, "くさ", "リーフガード", 25.5, 471, "グレイシア", 65, 60, 110, 130, 95, 65, "こおり", "ゆきがくれ", 25.9, 472, "グライオン", 75, 95, 125, 45, 75, 95, "じめん/ひこう", "かいりきバサミ/すながくれ", 42.5, 473, "マンムー", 110, 130, 80, 70, 60, 80, "こおり/じめん", "どんかん/ゆきがくれ", 291.0, 474, "ポリゴンＺ", 85, 80, 70, 135, 75, 90, "ノーマル", "てきおうりょく/ダウンロード", 34.0, 475, "エルレイド", 68, 125, 65, 65, 115, 80, "エスパー/かくとう", "ふくつのこころ", 52.0, 476, "ダイノーズ", 60, 55, 145, 75, 150, 40, "いわ/はがね", "がんじょう/じりょく", 340.0, 477, "ヨノワール", 45, 100, 135, 65, 135, 45, "ゴースト", "プレッシャー", 106.6, 478, "ユキメノコ", 70, 80, 70, 80, 70, 110, "こおり/ゴースト", "ゆきがくれ", 26.6, 479, "ロトム", 50, 50, 77, 95, 77, 91, "でんき/ゴースト", "ふゆう", 0.3, 479, "ロトムFC", 50, 65, 107, 105, 107, 86, "でんき/ゴースト", "ふゆう", 0.3, 480, "ユクシー", 75, 75, 130, 75, 130, 95, "エスパー", "ふゆう", 0.3, 481, "エムリット", 80, 105, 105, 105, 105, 80, "エスパー", "ふゆう", 0.3, 482, "アグノム", 75, 125, 70, 125, 70, 115, "エスパー", "ふゆう", 0.3, 483, "ディアルガ", 100, 120, 120, 150, 100, 90, "はがね/ドラゴン", "プレッシャー", 683.0, 484, "パルキア", 90, 120, 100, 150, 120, 100, "みず/ドラゴン", "プレッシャー", 336.0, 485, "ヒードラン", 91, 90, 106, 130, 106, 77, "ほのお/はがね", "もらいび", 430.0, 486, "レジギガス", 110, 160, 110, 80, 110, 100, "ノーマル", "スロースタート", 420.0, 487, "ギラティナA", 150, 100, 120, 100, 120, 90, "ゴースト/ドラゴン", "プレッシャー", 750.0, 487, "ギラティナO", 150, 120, 100, 120, 100, 90, "ゴースト/ドラゴン", "ふゆう", 650.0, 488, "クレセリア", 120, 70, 120, 75, 130, 85, "エスパー", "ふゆう", 85.6, 489, "フィオネ", 80, 80, 80, 80, 80, 80, "みず", "うるおいボディ", 3.1, 490, "マナフィ", 100, 100, 100, 100, 100, 100, "みず", "うるおいボディ", 1.4, 491, "ダークライ", 70, 90, 90, 135, 90, 125, "あく", "ナイトメア", 50.5, 492, "シェイミL", 100, 100, 100, 100, 100, 100, "くさ", "しぜんかいふく", 2.1, 492, "シェイミS", 100, 103, 75, 120, 75, 127, "くさ/ひこう", "てんのめぐみ", 5.2, 493, "アルセウス", 120, 120, 120, 120, 120, 120, "ノーマル", "マルチタイプ", 320.0}


    '計算部に用いる配列
    Public BSetc(8) As String


    '素早さ計算
    Public S_1 As Integer
    Public S_2 As Integer


    '技データ
    Public Move_Data() = New String() {"10まんボルト", "でんき", 95, 1, "アームハンマー", "かくとう", 100, 0, "アイアンテール", "はがね", 100, 0, "アイアンヘッド", "はがね", 80, 0, "アイスボール1", "こおり", 30, 0, "アイスボール2", "こおり", 60, 0, "アイスボール3", "こおり", 120, 0, "アイスボール4", "こおり", 240, 0, "アイスボール5", "こおり", 480, 0, "アイスボール1*2", "こおり", 60, 0, "アイスボール2*2", "こおり", 120, 0, "アイスボール3*2", "こおり", 240, 0, "アイスボール4*2", "こおり", 480, 0, "アイスボール5*2", "こおり", 960, 0, "アクアジェット", "みず", 40, 0, "アクアテール", "みず", 90, 0, "あくうせつだん", "ドラゴン", 100, 1, "あくのはどう", "あく", 80, 1, "あてみなげ", "かくとう", 70, 0, "あなをほる", "じめん", 80, 0, "あばれる", "ノーマル", 90, 0, "あやしいかぜ", "ゴースト", 60, 1, "あわ", "みず", 20, 1, "いあいぎり", "ノーマル", 50, 0, "いかり", "ノーマル", 20, 0, "いびき", "ノーマル", 40, 1, "いわおとし", "いわ", 50, 0, "いわくだき", "かくとう", 40, 0, "いわなだれ", "いわ", 75, 0, "インファイト", "かくとう", 120, 0, "ウェザーボール", "ノーマル", 50, 1, "うずしお", "みず", 15, 1, "うずしお*2", "みず", 30, 1, "ウッドハンマー", "くさ", 120, 0, "エアカッター", "ひこう", 55, 1, "エアスラッシュ", "ひこう", 75, 1, "エアロブラスト", "ひこう", 100, 1, "エナジーボール", "くさ", 80, 1, "おいうち", "あく", 40, 0, "おいうち*2", "あく", 80, 0, "おうふくビンタ1", "ノーマル", 15, 0, "おうふくビンタ2", "ノーマル", 15, 0, "おうふくビンタ3", "ノーマル", 15, 0, "おうふくビンタ4", "ノーマル", 15, 0, "おうふくビンタ5", "ノーマル", 15, 0, "オーバーヒート", "ほのお", 140, 1, "オーロラビーム", "こおり", 65, 1, "オクタンほう", "みず", 65, 1, "おしおき", "あく", 60, 0, "おしゃべり", "ひこう", 60, 1, "おどろかす", "ゴースト", 30, 0, "おんがえし", "ノーマル", 102, 0, "かいりき", "ノーマル", 80, 0, "かえんぐるま", "ほのお", 60, 0, "かえんほうしゃ", "ほのお", 95, 1, "かげうち", "ゴースト", 40, 0, "かぜおこし", "ひこう", 40, 1, "かぜおこし*2", "ひこう", 80, 1, "かまいたち", "ノーマル", 80, 1, "かみくだく", "あく", 80, 0, "かみつく", "あく", 60, 0, "かみなり", "でんき", 120, 1, "かみなりのキバ", "でんき", 65, 0, "かみなりパンチ", "でんき", 75, 0, "からげんき", "ノーマル", 70, 0, "からげんき*2", "ノーマル", 70, 0, "からてチョップ", "かくとう", 50, 0, "からではさむ", "みず", 35, 0, "からみつく", "ノーマル", 10, 0, "かわらわり", "かくとう", 75, 0, "がんせきふうじ", "いわ", 50, 0, "がんせきほう", "いわ", 150, 0, "きあいだま", "かくとう", 120, 1, "きあいパンチ", "かくとう", 150, 0, "ギガインパクト", "ノーマル", 150, 0, "ギガドレイン", "くさ", 60, 1, "きしかいせい20", "かくとう", 20, 0, "きしかいせい40", "かくとう", 40, 0, "きしかいせい80", "かくとう", 80, 0, "きしかいせい100", "かくとう", 100, 0, "きしかいせい150", "かくとう", 120, 0, "きしかいせい200", "かくとう", 200, 0, "きつけ", "ノーマル", 60, 0, "きつけ*2", "ノーマル", 120, 0, "きゅうけつ", "むし", 20, 0, "きりさく", "ノーマル", 70, 0, "きりふだ4+", "ノーマル", 40, 1, "きりふだ3", "ノーマル", 50, 1, "きりふだ2", "ノーマル", 60, 1, "きりふだ1", "ノーマル", 80, 1, "きりふだ0", "ノーマル", 200, 1, "ぎんいろのかぜ", "むし", 60, 1, "くさむすび", "くさ", -1, 1, "クラブハンマー", "みず", 90, 0, "クロスチョップ", "かくとう", 100, 0, "クロスポイズン", "どく", 70, 0, "げきりん", "ドラゴン", 120, 0, "けたぐり", "かくとう", -1, 0, "げんしのちから", "いわ", 60, 1, "こうげきしれい", "むし", 90, 0, "こうそくスピン", "ノーマル", 20, 0, "こおりのキバ", "こおり", 65, 0, "こおりのつぶて", "こおり", 40, 0, "こごえるかぜ", "こおり", 55, 1, "ゴッドバード", "ひこう", 140, 0, "こなゆき", "こおり", 40, 1, "コメットパンチ", "はがね", 100, 0, "ころがる1", "いわ", 30, 0, "ころがる2", "いわ", 60, 0, "ころがる3", "いわ", 120, 0, "ころがる4", "いわ", 240, 0, "ころがる5", "いわ", 480, 0, "ころがる1*2", "いわ", 60, 0, "ころがる2*2", "いわ", 120, 0, "ころがる3*2", "いわ", 240, 0, "ころがる4*2", "いわ", 480, 0, "ころがる5*2", "いわ", 960, 0, "サイケこうせん", "エスパー", 65, 1, "サイコウェーブ", "エスパー", -1, 1, "サイコカッター", "エスパー", 70, 0, "サイコキネシス", "エスパー", 90, 1, "サイコブースト", "エスパー", 140, 1, "さばきのつぶて", "ノーマル", 100, 1, "さわぐ", "ノーマル", 50, 1, "シードフレア", "くさ", 120, 1, "しおふき", "みず", 150, 1, "しおみず", "みず", 65, 1, "しおみず*2", "みず", 130, 1, "シグナルビーム", "むし", 75, 1, "じごくぐるま", "かくとう", 80, 0, "シザークロス", "むし", 80, 0, "じしん", "じめん", 100, 0, "じしん*2", "じめん", 200, 0, "しぜんのめぐみ", "ノーマル", -1, 0, "したでなめる", "ゴースト", 20, 0, "じたばた20", "ノーマル", 20, 0, "じたばた40", "ノーマル", 40, 0, "じたばた80", "ノーマル", 80, 0, "じたばた100", "ノーマル", 100, 0, "じたばた150", "ノーマル", 150, 0, "じたばた200", "ノーマル", 200, 0, "しっぺがえし", "あく", 50, 0, "しっぺがえし*2", "あく", 100, 0, "しねんのずつき", "エスパー", 80, 0, "じばく", "ノーマル", 200, 0, "しぼりとる", "ノーマル", 121, 1, "しめつける", "ノーマル", 15, 0, "ジャイロボール", "はがね", -1, 0, "シャドークロー", "ゴースト", 70, 0, "シャドーダイブ", "ゴースト", 120, 0, "シャドーパンチ", "ゴースト", 60, 0, "シャドーボール", "ゴースト", 80, 1, "しんくうは", "かくとう", 40, 1, "しんそく", "ノーマル", 80, 0, "じんつうりき", "エスパー", 80, 1, "すいとる", "くさ", 20, 1, "スカイアッパー", "かくとう", 85, 0, "ずつき", "ノーマル", 70, 0, "すてみタックル", "ノーマル", 120, 0, "ストーンエッジ", "いわ", 100, 0, "すなじごく", "じめん", 15, 0, "スパーク", "でんき", 65, 0, "スピードスター", "ノーマル", 60, 1, "スモッグ", "どく", 20, 1, "せいなるほのお", "ほのお", 100, 0, "ソーラービーム", "くさ", 120, 1, "ソニックブーム", "ノーマル", 20, 1, "そらをとぶ", "ひこう", 90, 0, "たいあたり", "ノーマル", 35, 0, "だいちのちから", "じめん", 90, 1, "だいばくはつ", "ノーマル", 250, 0, "ダイビング", "みず", 80, 0, "だいもんじ", "ほのお", 120, 1, "たきのぼり", "みず", 80, 0, "だくりゅう", "みず", 95, 1, "ダストシュート", "どく", 120, 0, "たたきつける", "ノーマル", 80, 0, "たつまき", "ドラゴン", 40, 1, "たつまき*2", "ドラゴン", 80, 1, "タネばくだん", "くさ", 80, 0, "タネマシンガン1", "くさ", 10, 0, "タネマシンガン2", "くさ", 10, 0, "タネマシンガン3", "くさ", 10, 0, "タネマシンガン4", "くさ", 10, 0, "タネマシンガン5", "くさ", 10, 0, "ダブルアタック1", "ノーマル", 35, 0, "ダブルアタック2", "ノーマル", 35, 0, "ダブルニードル1", "むし", 25, 0, "ダブルニードル2", "むし", 25, 0, "タマゴばくだん", "ノーマル", 100, 0, "たまなげ1", "ノーマル", 15, 0, "たまなげ2", "ノーマル", 15, 0, "たまなげ3", "ノーマル", 15, 0, "たまなげ4", "ノーマル", 15, 0, "たまなげ5", "ノーマル", 15, 0, "ダメおし", "あく", 50, 0, "ダメおし*2", "あく", 100, 0, "ちきゅうなげ", "かくとう", -1, 0, "チャージビーム", "でんき", 50, 1, "ついばむ", "ひこう", 60, 0, "つじぎり", "あく", 70, 0, "つつく", "ひこう", 35, 0, "つっぱり1", "かくとう", 15, 0, "つっぱり2", "かくとう", 15, 0, "つっぱり3", "かくとう", 15, 0, "つっぱり4", "かくとう", 15, 0, "つっぱり5", "かくとう", 15, 0, "つのでつく", "ノーマル", 65, 0, "つばさでうつ", "ひこう", 60, 0, "つばめがえし", "ひこう", 60, 0, "つららばり1", "こおり", 10, 0, "つららばり2", "こおり", 10, 0, "つららばり3", "こおり", 10, 0, "つららばり4", "こおり", 10, 0, "つららばり5", "こおり", 10, 0, "つるのムチ", "くさ", 35, 0, "でんきショック", "でんき", 40, 1, "でんげきは", "でんき", 60, 1, "でんこうせっか", "ノーマル", 40, 1, "でんじほう", "でんき", 120, 1, "ときのほうこう", "ドラゴン", 150, 1, "どくづき", "どく", 80, 0, "どくどくのキバ", "どく", 50, 0, "どくばり", "どく", 15, 0, "とげキャノン1", "ノーマル", 20, 0, "とげキャノン2", "ノーマル", 20, 0, "とげキャノン3", "ノーマル", 20, 0, "とげキャノン4", "ノーマル", 20, 0, "とげキャノン5", "ノーマル", 20, 0, "とっしん", "ノーマル", 90, 0, "とっておき", "ノーマル", 130, 0, "とびげり", "かくとう", 85, 0, "とびはねる", "ひこう", 85, 0, "とびひざげり", "かくとう", 100, 0, "トライアタック", "ノーマル", 80, 1, "ドラゴンクロー", "ドラゴン", 80, 0, "ドラゴンダイブ", "ドラゴン", 100, 0, "トリプルキック1", "かくとう", 10, 0, "トリプルキック2", "かくとう", 20, 0, "トリプルキック3", "かくとう", 30, 0, "ドリルくちばし", "ひこう", 80, 0, "ドレインパンチ", "かくとう", 60, 0, "どろかけ", "じめん", 20, 1, "どろばくだん", "じめん", 65, 1, "どろぼう", "あく", 40, 0, "とんぼがえり", "むし", 70, 0, "ナイトヘッド", "ゴースト", -1, 1, "なみのり", "みず", 95, 1, "なみのり*2", "みず", 190, 1, "ニードルアーム", "くさ", 60, 0, "にぎりつぶす", "ノーマル", 121, 0, "にどげり1", "かくとう", 30, 0, "にどげり2""かくとう", 30, 0, "ねこだまし", "ノーマル", 40, 0, "ネコにこばん", "ノーマル", 40, 0, "ねっぷう", "ほのお", 100, 1, "ねんりき", "エスパー", 50, 1, "のしかかり", "ノーマル", 85, 0, "ハードプラント", "くさ", 150, 1, "ハイドロカノン", "みず", 150, 1, "ハイドロポンプ", "みず", 120, 1, "ハイパーボイス", "ノーマル", 90, 1, "はかいこうせん", "ノーマル", 150, 1, "ばかぢから", "かくとう", 120, 0, "はがねのつばさ", "はがね", 70, 0, "はきだす1", "ノーマル", 100, 1, "はきだす2", "ノーマル", 200, 1, "はきだす3", "ノーマル", 300, 1, "ばくれつパンチ", "かくとう", 100, 0, "はさむ", "ノーマル", 40, 0, "はたきおとす", "あく", 20, 0, "はたく", "ノーマル", 40, 0, "はっけい", "かくとう", 60, 0, "はっぱカッター", "くさ", 55, 0, "はどうだん", "かくとう", 90, 1, "はなびらのまい", "くさ", 90, 1, "バブルこうせん", "みず", 65, 1, "はめつのねがい", "はがね", 120, 1, "バレットパンチ", "はがね", 40, 0, "パワーウィップ", "くさ", 120, 0, "パワージェム", "いわ", 70, 1, "ひっかく", "ノーマル", 40, 0, "ひっさつまえば", "ノーマル", 80, 0, "ひのこ", "ほのお", 40, 1, "ひみつのちから", "ノーマル", 70, 0, "ピヨピヨパンチ""ノーマル", 70, 0, "ふいうち", "あく", 80, 0, "フェイント", "ノーマル", 50, 0, "ふくろだたき", "あく", 10, 0, "ふぶき", "こおり", 120, 1, "ふみつけ", "ノーマル", 65, 0, "ふみつけ*2", "ノーマル", 130, 0, "ブラストバーン", "ほのお", 150, 1, "フレアドライブ", "ほのお", 120, 0, "ブレイククロー", "ノーマル", 75, 0, "ブレイズキック", "ほのお", 85, 0, "ブレイブバード", "ひこう", 120, 0, "プレゼント40", "ノーマル", 40, 0, "プレゼント80", "ノーマル", 80, 0, "プレゼント120", "ノーマル", 120, 0, "ふんえん", "ほのお", 80, 1, "ふんか", "ほのお", 150, 1, "ヘドロこうげき", "どく", 65, 1, "ヘドロばくだん", "どく", 90, 1, "ポイズンテール", "どく", 50, 0, "ほうでん", "でんき", 80, 1, "ボーンラッシュ1", "じめん", 25, 0, "ボーンラッシュ2", "じめん", 25, 0, "ボーンラッシュ3", "じめん", 25, 0, "ボーンラッシュ4", "じめん", 25, 0, "ボーンラッシュ5", "じめん", 25, 0, "ほしがる", "ノーマル", 40, 0, "ホネこんぼう", "じめん", 65, 0, "ホネブーメラン1", "じめん", 50, 0, "ホネブーメラン2", "じめん", 50, 0, "ほのおのうず", "ほのお", 15, 1, "ほのおのキバ", "ほのお", 65, 0, "ほのおのパンチ", "ほのお", 75, 0, "ボルテッカー", "でんき", 120, 0, "まきつく", "ノーマル", 15, 0, "マグニチュード4", "じめん", 10, 0, "マグニチュード5", "じめん", 30, 0, "マグニチュード6", "じめん", 60, 0, "マグニチュード7", "じめん", 70, 0, "マグニチュード8", "じめん", 90, 0, "マグニチュード9", "じめん", 110, 0, "マグニチュード10", "じめん", 150, 0, "マグニチュード4*2", "じめん", 20, 0, "マグニチュード5*2", "じめん", 60, 0, "マグニチュード6*2", "じめん", 100, 0, "マグニチュード7*2", "じめん", 140, 0, "マグニチュード8*2", "じめん", 180, 0, "マグニチュード9*2", "じめん", 220, 0, "マグニチュード10*2", "じめん", 300, 0, "マグネットボム", "はがね", 60, 0, "マグマストーム", "ほのお", 120, 1, "マジカルリーフ", "くさ", 60, 1, "マッドショット", "じめん", 55, 1, "マッハパンチ", "かくとう", 40, 0, "まわしげり", "かくとう", 60, 0, "ミサイルばり1", "むし", 14, 0, "ミサイルばり2", "むし", 14, 0, "ミサイルばり3", "むし", 14, 0, "ミサイルばり4", "むし", 14, 0, "ミサイルばり5", "むし", 14, 0, "みずでっぽう", "みず", 40, 1, "ミストボール", "エスパー", 70, 1, "みずのはどう", "みず", 60, 1, "みだれづき1", "ノーマル", 15, 0, "みだれづき2", "ノーマル", 15, 0, "みだれづき3", "ノーマル", 15, 0, "みだれづき4", "ノーマル", 15, 0, "みだれづき5", "ノーマル", 15, 0, "みだれひっかき1", "ノーマル", 18, 0, "みだれひっかき2", "ノーマル", 18, 0, "みだれひっかき3", "ノーマル", 18, 0, "みだれひっかき4", "ノーマル", 18, 0, "みだれひっかき5", "ノーマル", 18, 0, "みねうち", "ノーマル", 40, 0, "ミラーショット", "エスパー", 65, 1, "みらいよち", "エスパー", 80, 1, "むしくい", "むし", 60, 0, "むしのさざめき", "むし", 90, 0, "メガドレイン", "くさ", 40, 1, "メガトンキック", "ノーマル", 120, 0, "メガトンパンチ", "ノーマル", 80, 0, "メガホーン", "むし", 120, 0, "めざましビンタ", "かくとう", 60, 0, "めざましビンタ*2", "かくとう", 130, 0, "メタルクロー", "はがね", 50, 0, "もろはのずつき", "いわ", 150, 0, "やつあたり", "ノーマル", 102, 0, "ゆきなだれ", "こおり", 60, 0, "ゆきなだれ*2", "こおり", 120, 0, "ゆめくい", "エスパー", 100, 1, "ようかいえき", "どく", 40, 1, "ラスターカノン", "はがね", 80, 1, "リーフストーム", "くさ", 140, 1, "リーフブレード", "くさ", 90, 0, "リベンジ", "かくとう", 60, 0, "リベンジ*2", "かくとう", 130, 0, "りゅうせいぐん", "ドラゴン", 140, 1, "りゅうのいかり", "ドラゴン", -1, 1, "りゅうのいぶき", "ドラゴン", 60, 1, "りゅうのはどう", "ドラゴン", 90, 1, "れいとうパンチ", "こおり", 75, 0, "れいとうビーム", "こおり", 95, 1, "れんぞくぎり1", "むし", 10, 0, "れんぞくぎり2", "むし", 20, 0, "れんぞくぎり3", "むし", 40, 0, "れんぞくぎり4", "むし", 80, 0, "れんぞくぎり5", "むし", 160, 0, "れんぞくパンチ1", "ノーマル", 18, 0, "れんぞくパンチ2", "ノーマル", 18, 0, "れんぞくパンチ3", "ノーマル", 18, 0, "れんぞくパンチ4", "ノーマル", 18, 0, "れんぞくパンチ5", "ノーマル", 18, 0, "ロケットずつき", "ノーマル", 100, 0, "ロッククライム", "ノーマル", 90, 0, "ロックブラスト1", "いわ", 25, 0, "ロックブラスト2", "いわ", 25, 0, "ロックブラスト3", "いわ", 25, 0, "ロックブラスト4", "いわ", 25, 0, "ロックブラスト5", "いわ", 25, 0, "わるあがき", "ノーマル", 50, 0}


    '技タイプ
    Public Move_Type(4) As String

    'タイプ一致補正
    Public STAB(4) As Decimal


    'タイプ相性
    Public Type_Compatibility_Chk As Integer
    Public Calced_Type_Compatibility_Count As Integer
    Public Calced_Type_Compatibility(,) As Decimal
    Public Type_Compatibility As Decimal
    Public Type_Compatibility_1 As Decimal
    Public Type_Compatibility_2 As Decimal


    '攻撃/特攻
    Public Atk_A() As Decimal
    Public Atk_A_Critical As Decimal
    Public Atk_C() As Decimal
    Public Atk_C_Critical As Decimal

    '攻撃/特攻補正
    Public Atk_A_C() As Decimal

    '防御/特防
    Public Def_B() As Decimal
    Public Def_B_Critical() As Decimal
    Public Def_D() As Decimal
    Public Def_D_Critical() As Decimal

    '防御/特防補正
    Public Def_B_D() As Decimal

    '素早さ補正
    Public Atk_S As Decimal
    Public Def_S As Decimal


    'ダメージ補正
    Public Mod1() As Decimal
    Public Mod2() As Decimal
    Public Mod3() As Decimal


    '技威力
    Public BasePower(4) As Decimal

    '急所補正
    Public CH() As Integer


    '計算結果
    Public Damage_Formula(4, 15) As Integer

    '威力補正
    Public Power_C(4) As Decimal


    '初期数値のセット
    Private Sub Main_Form_Load(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MyBase.Load

        'デフォルトのセット
        Physical_Special_Select.SelectedIndex = 1
        Type_Select.SelectedIndex = 14

        Ability_Seletc_1.SelectedIndex = 0
        Ability_Seletc_2.SelectedIndex = 0

        Item_Select_1.SelectedIndex = 0
        Item_Select_2.SelectedIndex = 0

        Rank_A_1.SelectedIndex = 6
        Rank_C_1.SelectedIndex = 6
        Rank_S_1.SelectedIndex = 6

        Rank_B_2.SelectedIndex = 6
        Rank_D_2.SelectedIndex = 6
        Rank_S_2.SelectedIndex = 6

        Weather_Select.SelectedIndex = 0











    End Sub


    'ポケモンの種族値データなどの表示
    Private Sub Name_Select_1_SelectedIndexChanged(sender As Object, e As EventArgs) Handles Name_Select_1.SelectedIndexChanged
        Name_1.Text = Name_Select_1.Text

        Base_Status_HP_Display_1.Text = "---"
        Base_Status_A_Display_1.Text = "---"
        Base_Status_B_Display_1.Text = "---"
        Base_Status_C_Display_1.Text = "---"
        Base_Status_D_Display_1.Text = "---"
        Base_Status_S_Display_1.Text = "---"
        Base_Status_Total_Display_1.Text = 0
        Type_Display_1.Text = "---"
        Ability_1_Display_1.Text = "---"
        Ability_2_Display_1.Text = "---"
        Weight_Display_1.Text = "---kg / ---"

        Dim Name_Index As Integer = Array.IndexOf(Pokemon_Basics, Name_1.Text)
        If (Name_Index = -1 Or Name_Index Mod 11 <> 1) Then GoTo Base_Status_etc_End

        For L = 0 To 8
            BSetc(L) = Pokemon_Basics(Name_Index + L + 1)
        Next

        Base_Status_HP_Display_1.Text = BSetc(0)
        Base_Status_A_Display_1.Text = BSetc(1)
        Base_Status_B_Display_1.Text = BSetc(2)
        Base_Status_C_Display_1.Text = BSetc(3)
        Base_Status_D_Display_1.Text = BSetc(4)
        Base_Status_S_Display_1.Text = BSetc(5)

        Base_Status_HP_Bar_Display_1.Width = Math.Floor(BSetc(0) / 2)
        Base_Status_A_Bar_Display_1.Width = Math.Floor(BSetc(1) / 2)
        Base_Status_B_Bar_Display_1.Width = Math.Floor(BSetc(2) / 2)
        Base_Status_C_Bar_Display_1.Width = Math.Floor(BSetc(3) / 2)
        Base_Status_D_Bar_Display_1.Width = Math.Floor(BSetc(4) / 2)
        Base_Status_S_Bar_Display_1.Width = Math.Floor(BSetc(5) / 2)

        Base_Status_HP_Display_1.Left = Math.Floor(BSetc(0) / 2) + 8
        Base_Status_A_Display_1.Left = Math.Floor(BSetc(1) / 2) + 8
        Base_Status_B_Display_1.Left = Math.Floor(BSetc(2) / 2) + 8
        Base_Status_C_Display_1.Left = Math.Floor(BSetc(3) / 2) + 8
        Base_Status_D_Display_1.Left = Math.Floor(BSetc(4) / 2) + 8
        Base_Status_S_Display_1.Left = Math.Floor(BSetc(5) / 2) + 8

        For L = 0 To 5
            Base_Status_Total_Display_1.Text += CType(BSetc(L), Integer)
        Next

        Types_1 = BSetc(6).Split("/"c)
        Type_Display_1.Text = Types_1(0)
        If Types_1.Length = 2 Then
            Type_Display_1.Text += " / " & Types_1(1)
        End If

        Dim Abilitys() As String = BSetc(7).Split("/"c)
        Ability_1_Display_1.Text = Abilitys(0)
        If Abilitys.Length = 2 Then
            Ability_2_Display_1.Text = Abilitys(1)
        End If

        Weight_Display_1.Text = BSetc(8) & "kg"
        If BSetc(8) <= 10.0 Then Weight_Display_1.Text += " / 20"
        If 10.1 <= BSetc(8) And BSetc(8) <= 25.0 Then Weight_Display_1.Text += " / 40"
        If 25.1 <= BSetc(8) And BSetc(8) <= 50.0 Then Weight_Display_1.Text += " / 60"
        If 50.1 <= BSetc(8) And BSetc(8) <= 100.0 Then Weight_Display_1.Text += " / 80"
        If 100.1 <= BSetc(8) And BSetc(8) <= 200.0 Then Weight_Display_1.Text += " / 100"
        If 200.1 <= BSetc(8) Then Weight_Display_1.Text += " / 120"

        Calculation()

Base_Status_etc_End:

    End Sub

    Private Sub Name_Select_2_SelectedIndexChanged(sender As Object, e As EventArgs) Handles Name_Select_2.SelectedIndexChanged
        Name_2.Text = Name_Select_2.Text

        Base_Status_HP_Display_2.Text = "---"
        Base_Status_A_Display_2.Text = "---"
        Base_Status_B_Display_2.Text = "---"
        Base_Status_C_Display_2.Text = "---"
        Base_Status_D_Display_2.Text = "---"
        Base_Status_S_Display_2.Text = "---"
        Base_Status_Total_Display_2.Text = 0
        Type_Display_2.Text = "---"
        Ability_1_Display_2.Text = "---"
        Ability_2_Display_2.Text = "---"
        Weight_Display_2.Text = "---kg / ---"

        Dim Name_Index As Integer = Array.IndexOf(Pokemon_Basics, Name_2.Text)
        If (Name_Index = -1 Or Name_Index Mod 11 <> 1) Then GoTo Base_Status_etc_End

        For L = 0 To 8
            BSetc(L) = Pokemon_Basics(Name_Index + L + 1)
        Next

        Base_Status_HP_Display_2.Text = BSetc(0)
        Base_Status_A_Display_2.Text = BSetc(1)
        Base_Status_B_Display_2.Text = BSetc(2)
        Base_Status_C_Display_2.Text = BSetc(3)
        Base_Status_D_Display_2.Text = BSetc(4)
        Base_Status_S_Display_2.Text = BSetc(5)

        Base_Status_HP_Bar_Display_2.Width = Math.Floor(BSetc(0) / 2)
        Base_Status_A_Bar_Display_2.Width = Math.Floor(BSetc(1) / 2)
        Base_Status_B_Bar_Display_2.Width = Math.Floor(BSetc(2) / 2)
        Base_Status_C_Bar_Display_2.Width = Math.Floor(BSetc(3) / 2)
        Base_Status_D_Bar_Display_2.Width = Math.Floor(BSetc(4) / 2)
        Base_Status_S_Bar_Display_2.Width = Math.Floor(BSetc(5) / 2)

        Base_Status_HP_Display_2.Left = Math.Floor(BSetc(0) / 2) + 8
        Base_Status_A_Display_2.Left = Math.Floor(BSetc(1) / 2) + 8
        Base_Status_B_Display_2.Left = Math.Floor(BSetc(2) / 2) + 8
        Base_Status_C_Display_2.Left = Math.Floor(BSetc(3) / 2) + 8
        Base_Status_D_Display_2.Left = Math.Floor(BSetc(4) / 2) + 8
        Base_Status_S_Display_2.Left = Math.Floor(BSetc(5) / 2) + 8

        For L = 0 To 5
            Base_Status_Total_Display_2.Text += CType(BSetc(L), Integer)
        Next

        Types_2 = BSetc(6).Split("/"c)
        Type_Display_2.Text = Types_2(0)
        If Types_2.Length = 2 Then
            Type_Display_2.Text += " / " & Types_2(1)
        End If

        Dim Abilitys() As String = BSetc(7).Split("/"c)
        Ability_1_Display_2.Text = Abilitys(0)
        If Abilitys.Length = 2 Then
            Ability_2_Display_2.Text = Abilitys(1)
        End If

        Weight_Display_2.Text = BSetc(8) & "kg"
        If BSetc(8) <= 10.0 Then Weight_Display_2.Text += " / 20"
        If 10.1 <= BSetc(8) And BSetc(8) <= 25.0 Then Weight_Display_2.Text += " / 40"
        If 25.1 <= BSetc(8) And BSetc(8) <= 50.0 Then Weight_Display_2.Text += " / 60"
        If 50.1 <= BSetc(8) And BSetc(8) <= 100.0 Then Weight_Display_2.Text += " / 80"
        If 100.1 <= BSetc(8) And BSetc(8) <= 200.0 Then Weight_Display_2.Text += " / 100"
        If 200.1 <= BSetc(8) Then Weight_Display_2.Text += " / 120"

        Calculation()

Base_Status_etc_End:

    End Sub


    'ドロップボックスの選択を、テキストボックスにコピーする / テキストボックスの変更を、ドロップボックスにコピーする

    '技 / D->T
    Private Sub Move_Select_1_SelectedIndexChanged(sender As Object, e As EventArgs) Handles Move_Select_1.SelectedIndexChanged
        Move_Input_1.Text = Move_Select_1.Text
    End Sub

    Private Sub Move_Select_2_SelectedIndexChanged(sender As Object, e As EventArgs) Handles Move_Select_2.SelectedIndexChanged
        Move_Input_2.Text = Move_Select_2.Text
    End Sub

    Private Sub Move_Select_3_SelectedIndexChanged(sender As Object, e As EventArgs) Handles Move_Select_3.SelectedIndexChanged
        Move_Input_3.Text = Move_Select_3.Text
    End Sub
    Private Sub Move_Select_4_SelectedIndexChanged(sender As Object, e As EventArgs) Handles Move_Select_4.SelectedIndexChanged
        Move_Input_4.Text = Move_Select_4.Text
    End Sub

    '技 / T->D
    Private Sub Move_Input_1_TextChanged(sender As Object, e As EventArgs) Handles Move_Input_1.TextChanged
        Move_Select_1.Text = Move_Input_1.Text
        Calculation()
    End Sub

    Private Sub Move_Input_2_TextChanged(sender As Object, e As EventArgs) Handles Move_Input_2.TextChanged
        Move_Select_2.Text = Move_Input_2.Text
        Calculation()
    End Sub

    Private Sub Move_Input_3_TextChanged(sender As Object, e As EventArgs) Handles Move_Input_3.TextChanged
        Move_Select_3.Text = Move_Input_3.Text
        Calculation()
    End Sub

    Private Sub Move_Input_4_TextChanged(sender As Object, e As EventArgs) Handles Move_Input_4.TextChanged
        Move_Select_4.Text = Move_Input_4.Text
        Calculation()
    End Sub


    '計算結果
    Private Sub Move_Calced_1_Click(sender As Object, e As EventArgs) Handles Move_Calced_1.Click
        Calced_Datas(0, 0)
        Calced_Move_1.Show()
    End Sub

    Private Sub Move_Calced_2_Click(sender As Object, e As EventArgs) Handles Move_Calced_2.Click
        Calced_Datas(1, 0)
        Calced_Move_2.Show()
    End Sub

    Private Sub Move_Calced_3_Click(sender As Object, e As EventArgs) Handles Move_Calced_3.Click
        Calced_Datas(2, 0)
        Calced_Move_3.Show()
    End Sub

    Private Sub Move_Calced_4_Click(sender As Object, e As EventArgs) Handles Move_Calced_4.Click
        Calced_Datas(3, 0)
        Calced_Move_4.Show()
    End Sub

    Private Sub Move_Calced_5_Click(sender As Object, e As EventArgs) Handles Move_Calced_5.Click
        Calced_Datas(4, 0)
        Calced_Move_5.Show()
    End Sub


    'ポケモン名 / T->D
    Private Sub Name_1_TextChanged(sender As Object, e As EventArgs) Handles Name_1.TextChanged
        Name_Select_1.Text = Name_1.Text
    End Sub

    Private Sub Name_2_TextChanged(sender As Object, e As EventArgs) Handles Name_2.TextChanged
        Name_Select_2.Text = Name_2.Text
    End Sub


    'タイプ、物理特殊 / D->T
    Private Sub Type_Select_SelectedIndexChanged(sender As Object, e As EventArgs) Handles Type_Select.SelectedIndexChanged
        Type_Display.Text = Type_Select.Text
        Calculation()
    End Sub

    Private Sub Physical_Special_Select_SelectedIndexChanged(sender As Object, e As EventArgs) Handles Physical_Special_Select.SelectedIndexChanged
        Physical_Special_Display.Text = Physical_Special_Select.Text
        Calculation()
    End Sub


    '特性
    Private Sub Ability_Seletc_1_SelectedIndexChanged(sender As Object, e As EventArgs) Handles Ability_Seletc_1.SelectedIndexChanged
        Ability_Display_1.Text = Ability_Seletc_1.Text
        Calculation()
    End Sub

    Private Sub Ability_Seletc_2_SelectedIndexChanged(sender As Object, e As EventArgs) Handles Ability_Seletc_2.SelectedIndexChanged
        Ability_Display_2.Text = Ability_Seletc_2.Text
        Calculation()
    End Sub


    '持ちもの
    Private Sub Item_Select_1_SelectedIndexChanged(sender As Object, e As EventArgs) Handles Item_Select_1.SelectedIndexChanged
        Item_Display_1.Text = Item_Select_1.Text
        Calculation()
    End Sub

    Private Sub Sub_Item_Select_1_SelectedIndexChanged(sender As Object, e As EventArgs) Handles Sub_Item_Select_1.SelectedIndexChanged
        Item_Display_1.Text = Sub_Item_Select_1.Text
        Calculation()
    End Sub

    Private Sub Item_Select_2_SelectedIndexChanged(sender As Object, e As EventArgs) Handles Item_Select_2.SelectedIndexChanged
        Item_Display_2.Text = Item_Select_2.Text
        Calculation()
    End Sub

    Private Sub Sub_Item_Select_2_SelectedIndexChanged(sender As Object, e As EventArgs) Handles Sub_Item_Select_2.SelectedIndexChanged
        Item_Display_2.Text = Sub_Item_Select_2.Text
        Calculation()
    End Sub


    '性格
    Private Sub Nature_Select_1_SelectedIndexChanged(sender As Object, e As EventArgs) Handles Nature_Select_1.SelectedIndexChanged
        Nature_Display_1.Text = Nature_Select_1.Text
        Calculation()
    End Sub

    Private Sub Nature_Select_2_SelectedIndexChanged(sender As Object, e As EventArgs) Handles Nature_Select_2.SelectedIndexChanged
        Nature_Display_2.Text = Nature_Select_2.Text
        Calculation()
    End Sub


    '天候 / D->T
    Private Sub Weather_Select_SelectedIndexChanged(sender As Object, e As EventArgs) Handles Weather_Select.SelectedIndexChanged
        Weather_Display.Text = Weather_Select.Text
        Calculation()
    End Sub


    'その他項目のパネル表示
    Private Sub Others_Panel_Display_On_Off_CheckedChanged(sender As Object, e As EventArgs) Handles Others_Panel_Display_On_Off.CheckedChanged
        If (Attacker_Others_Panel.Visible = True) Then
            Attacker_Others_Panel.Visible = False
            Others_Panel_Display_On_Off.Top = 503
        Else Attacker_Others_Panel.Visible = True
            Others_Panel_Display_On_Off.Top = 680
        End If
        If (Defender_Others_Panel.Visible = True) Then Defender_Others_Panel.Visible = False Else Defender_Others_Panel.Visible = True
    End Sub


    '威力入力
    Private Sub Power_Input_1_KeyPress(sender As Object, e As KeyPressEventArgs) Handles Power_Input_1.KeyPress
        'キーが [0]～[9] または [BackSpace] 以外の場合イベントをキャンセル
        If Not (("0"c <= e.KeyChar And e.KeyChar <= "9"c) Or e.KeyChar = ControlChars.Back) Then
            'コントロールの既定の処理を省略する場合は true
            e.Handled = True
        End If
    End Sub

    Private Sub Power_Input_1_TextChanged(sender As Object, e As EventArgs) Handles Power_Input_1.TextChanged
        If ("" = Power_Input_1.Text) Then Power_Input_1.Text = 1
        Calculation()
    End Sub


    'レベル入力
    Private Sub Level_Input_1_KeyPress(sender As Object, e As KeyPressEventArgs) Handles Level_Input_1.KeyPress
        'キーが [0]～[9] または [BackSpace] 以外の場合イベントをキャンセル
        If Not (("0"c <= e.KeyChar And e.KeyChar <= "9"c) Or e.KeyChar = ControlChars.Back) Then
            'コントロールの既定の処理を省略する場合は true
            e.Handled = True
        End If
    End Sub
    Private Sub Level_Input_1_TextChanged(sender As Object, e As EventArgs) Handles Level_Input_1.TextChanged
        If ("" <> Level_Input_1.Text) Then
            If (100 <= Level_Input_1.Text) Then Level_Input_1.Text = 100
        End If
        If ("" = Level_Input_1.Text) Then Level_Input_1.Text = 1
        Calculation()
    End Sub

    Private Sub Level_Input_2_KeyPress(sender As Object, e As KeyPressEventArgs) Handles Level_Input_2.KeyPress
        'キーが [0]～[9] または [BackSpace] 以外の場合イベントをキャンセル
        If Not (("0"c <= e.KeyChar And e.KeyChar <= "9"c) Or e.KeyChar = ControlChars.Back) Then
            'コントロールの既定の処理を省略する場合は true
            e.Handled = True
        End If
    End Sub
    Private Sub Level_Input_2_TextChanged(sender As Object, e As EventArgs) Handles Level_Input_2.TextChanged
        If ("" <> Level_Input_2.Text) Then
            If (100 <= Level_Input_2.Text) Then Level_Input_2.Text = 100
        End If
        If ("" = Level_Input_2.Text) Then Level_Input_2.Text = 1
        Calculation()
    End Sub


    'レベル50フラット
    Private Sub flat_50_Click(sender As Object, e As EventArgs) Handles flat_50.Click
        Level_Input_1.Text = 50
        Level_Input_2.Text = 50
        'Calculation()
    End Sub


    '個体値入力
    Private Sub IVs_Input_A_1_KeyPress(sender As Object, e As KeyPressEventArgs) Handles IVs_Input_A_1.KeyPress
        'キーが [0]～[9] または [BackSpace] 以外の場合イベントをキャンセル
        If Not (("0"c <= e.KeyChar And e.KeyChar <= "9"c) Or e.KeyChar = ControlChars.Back) Then
            'コントロールの既定の処理を省略する場合は true
            e.Handled = True
        End If
    End Sub
    Private Sub IVs_Input_A_1_TextChanged(sender As Object, e As EventArgs) Handles IVs_Input_A_1.TextChanged
        If ("" <> IVs_Input_A_1.Text) Then
            If (31 <= IVs_Input_A_1.Text) Then IVs_Input_A_1.Text = 31
        End If
        If ("" = IVs_Input_A_1.Text) Then IVs_Input_A_1.Text = 0
        Calculation()
    End Sub

    Private Sub IVs_Input_c_1_KeyPress(sender As Object, e As KeyPressEventArgs) Handles IVs_Input_C_1.KeyPress
        'キーが [0]～[9] または [BackSpace] 以外の場合イベントをキャンセル
        If Not (("0"c <= e.KeyChar And e.KeyChar <= "9"c) Or e.KeyChar = ControlChars.Back) Then
            'コントロールの既定の処理を省略する場合は true
            e.Handled = True
        End If
    End Sub

    Private Sub IVs_Input_C_1_TextChanged(sender As Object, e As EventArgs) Handles IVs_Input_C_1.TextChanged
        If ("" <> IVs_Input_C_1.Text) Then
            If (31 <= IVs_Input_C_1.Text) Then IVs_Input_C_1.Text = 31
        End If
        If ("" = IVs_Input_C_1.Text) Then IVs_Input_C_1.Text = 0
        Calculation()
    End Sub

    Private Sub IVs_Input_S_1_KeyPress(sender As Object, e As KeyPressEventArgs) Handles IVs_Input_S_1.KeyPress
        'キーが [0]～[9] または [BackSpace] 以外の場合イベントをキャンセル
        If Not (("0"c <= e.KeyChar And e.KeyChar <= "9"c) Or e.KeyChar = ControlChars.Back) Then
            'コントロールの既定の処理を省略する場合は true
            e.Handled = True
        End If
    End Sub
    Private Sub IVs_Input_S_1_TextChanged(sender As Object, e As EventArgs) Handles IVs_Input_S_1.TextChanged
        If ("" <> IVs_Input_S_1.Text) Then
            If (31 <= IVs_Input_S_1.Text) Then IVs_Input_S_1.Text = 31
        End If
        If ("" = IVs_Input_S_1.Text) Then IVs_Input_S_1.Text = 0
        Calculation()
    End Sub


    Private Sub IVs_Input_HP_2_KeyPress(sender As Object, e As KeyPressEventArgs) Handles IVs_Input_HP_2.KeyPress
        'キーが [0]～[9] または [BackSpace] 以外の場合イベントをキャンセル
        If Not (("0"c <= e.KeyChar And e.KeyChar <= "9"c) Or e.KeyChar = ControlChars.Back) Then
            'コントロールの既定の処理を省略する場合は true
            e.Handled = True
        End If
    End Sub
    Private Sub IVs_Input_HP_2_TextChanged(sender As Object, e As EventArgs) Handles IVs_Input_HP_2.TextChanged
        If ("" <> IVs_Input_HP_2.Text) Then
            If (31 <= IVs_Input_HP_2.Text) Then IVs_Input_HP_2.Text = 31
        End If
        If ("" = IVs_Input_HP_2.Text) Then IVs_Input_HP_2.Text = 0
        Calculation()
    End Sub

    Private Sub IVs_Input_B_2_KeyPress(sender As Object, e As KeyPressEventArgs) Handles IVs_Input_B_2.KeyPress
        'キーが [0]～[9] または [BackSpace] 以外の場合イベントをキャンセル
        If Not (("0"c <= e.KeyChar And e.KeyChar <= "9"c) Or e.KeyChar = ControlChars.Back) Then
            'コントロールの既定の処理を省略する場合は true
            e.Handled = True
        End If
    End Sub
    Private Sub IVs_Input_B_2_TextChanged(sender As Object, e As EventArgs) Handles IVs_Input_B_2.TextChanged
        If ("" <> IVs_Input_B_2.Text) Then
            If (31 <= IVs_Input_B_2.Text) Then IVs_Input_B_2.Text = 31
        End If
        If ("" = IVs_Input_B_2.Text) Then IVs_Input_B_2.Text = 0
    End Sub

    Private Sub IVs_Input_D_2_KeyPress(sender As Object, e As KeyPressEventArgs) Handles IVs_Input_D_2.KeyPress
        'キーが [0]～[9] または [BackSpace] 以外の場合イベントをキャンセル
        If Not (("0"c <= e.KeyChar And e.KeyChar <= "9"c) Or e.KeyChar = ControlChars.Back) Then
            'コントロールの既定の処理を省略する場合は true
            e.Handled = True
        End If
    End Sub
    Private Sub IVs_Input_D_2_TextChanged(sender As Object, e As EventArgs) Handles IVs_Input_D_2.TextChanged
        If ("" <> IVs_Input_D_2.Text) Then
            If (31 <= IVs_Input_D_2.Text) Then IVs_Input_D_2.Text = 31
        End If
        If ("" = IVs_Input_D_2.Text) Then IVs_Input_D_2.Text = 0
        Calculation()
    End Sub

    Private Sub IVs_Input_S_2_KeyPress(sender As Object, e As KeyPressEventArgs) Handles IVs_Input_S_2.KeyPress
        'キーが [0]～[9] または [BackSpace] 以外の場合イベントをキャンセル
        If Not (("0"c <= e.KeyChar And e.KeyChar <= "9"c) Or e.KeyChar = ControlChars.Back) Then
            'コントロールの既定の処理を省略する場合は true
            e.Handled = True
        End If
    End Sub
    Private Sub IVs_Input_S_2_TextChanged(sender As Object, e As EventArgs) Handles IVs_Input_S_2.TextChanged
        If ("" <> IVs_Input_S_2.Text) Then
            If (31 <= IVs_Input_S_2.Text) Then IVs_Input_S_2.Text = 31
        End If
        If ("" = IVs_Input_S_2.Text) Then IVs_Input_S_2.Text = 0
        Calculation()
    End Sub


    '努力値入力
    Private Sub EVs_Input_A_1_KeyPress(sender As Object, e As KeyPressEventArgs) Handles EVs_Input_A_1.KeyPress
        'キーが [0]～[9] または [BackSpace] 以外の場合イベントをキャンセル
        If Not (("0"c <= e.KeyChar And e.KeyChar <= "9"c) Or e.KeyChar = ControlChars.Back) Then
            'コントロールの既定の処理を省略する場合は true
            e.Handled = True
        End If
    End Sub
    Private Sub EVs_Input_A_1_TextChanged(sender As Object, e As EventArgs) Handles EVs_Input_A_1.TextChanged
        If ("" <> EVs_Input_A_1.Text) Then
            If (252 <= EVs_Input_A_1.Text) Then EVs_Input_A_1.Text = 252
        End If
        If ("" = EVs_Input_A_1.Text) Then EVs_Input_A_1.Text = 0
        Calculation()
    End Sub

    Private Sub EVs_Input_C_1_KeyPress(sender As Object, e As KeyPressEventArgs) Handles EVs_Input_C_1.KeyPress
        'キーが [0]～[9] または [BackSpace] 以外の場合イベントをキャンセル
        If Not (("0"c <= e.KeyChar And e.KeyChar <= "9"c) Or e.KeyChar = ControlChars.Back) Then
            'コントロールの既定の処理を省略する場合は true
            e.Handled = True
        End If
    End Sub
    Private Sub EVs_Input_C_1_TextChanged(sender As Object, e As EventArgs) Handles EVs_Input_C_1.TextChanged
        If ("" <> EVs_Input_C_1.Text) Then
            If (252 <= EVs_Input_C_1.Text) Then EVs_Input_C_1.Text = 252
        End If
        If ("" = EVs_Input_C_1.Text) Then EVs_Input_C_1.Text = 0
        Calculation()
    End Sub

    Private Sub EVs_Input_S_1_KeyPress(sender As Object, e As KeyPressEventArgs) Handles EVs_Input_S_1.KeyPress
        'キーが [0]～[9] または [BackSpace] 以外の場合イベントをキャンセル
        If Not (("0"c <= e.KeyChar And e.KeyChar <= "9"c) Or e.KeyChar = ControlChars.Back) Then
            'コントロールの既定の処理を省略する場合は true
            e.Handled = True
        End If
    End Sub
    Private Sub EVs_Input_S_1_TextChanged(sender As Object, e As EventArgs) Handles EVs_Input_S_1.TextChanged
        If ("" <> EVs_Input_S_1.Text) Then
            If (252 <= EVs_Input_S_1.Text) Then EVs_Input_S_1.Text = 252
        End If
        If ("" = EVs_Input_S_1.Text) Then EVs_Input_S_1.Text = 0
        Calculation()
    End Sub


    Private Sub EVs_Input_HP_2_KeyPress(sender As Object, e As KeyPressEventArgs) Handles EVs_Input_HP_2.KeyPress
        'キーが [0]～[9] または [BackSpace] 以外の場合イベントをキャンセル
        If Not (("0"c <= e.KeyChar And e.KeyChar <= "9"c) Or e.KeyChar = ControlChars.Back) Then
            'コントロールの既定の処理を省略する場合は true
            e.Handled = True
        End If
    End Sub
    Private Sub EVs_Input_HP_2_TextChanged(sender As Object, e As EventArgs) Handles EVs_Input_HP_2.TextChanged
        If ("" <> EVs_Input_HP_2.Text) Then
            If (252 <= EVs_Input_HP_2.Text) Then EVs_Input_HP_2.Text = 252
        End If
        If ("" = EVs_Input_HP_2.Text) Then EVs_Input_HP_2.Text = 0
        Calculation()
    End Sub

    Private Sub EVs_Input_B_2_KeyPress(sender As Object, e As KeyPressEventArgs) Handles EVs_Input_B_2.KeyPress
        'キーが [0]～[9] または [BackSpace] 以外の場合イベントをキャンセル
        If Not (("0"c <= e.KeyChar And e.KeyChar <= "9"c) Or e.KeyChar = ControlChars.Back) Then
            'コントロールの既定の処理を省略する場合は true
            e.Handled = True
        End If
    End Sub
    Private Sub EVs_Input_B_2_TextChanged(sender As Object, e As EventArgs) Handles EVs_Input_B_2.TextChanged
        If ("" <> EVs_Input_B_2.Text) Then
            If (252 <= EVs_Input_B_2.Text) Then EVs_Input_B_2.Text = 252
        End If
        If ("" = EVs_Input_B_2.Text) Then EVs_Input_B_2.Text = 0
        Calculation()
    End Sub

    Private Sub EVs_Input_D_2_KeyPress(sender As Object, e As KeyPressEventArgs) Handles EVs_Input_D_2.KeyPress
        'キーが [0]～[9] または [BackSpace] 以外の場合イベントをキャンセル
        If Not (("0"c <= e.KeyChar And e.KeyChar <= "9"c) Or e.KeyChar = ControlChars.Back) Then
            'コントロールの既定の処理を省略する場合は true
            e.Handled = True
        End If
    End Sub
    Private Sub EVs_Input_D_2_TextChanged(sender As Object, e As EventArgs) Handles EVs_Input_D_2.TextChanged
        If ("" <> EVs_Input_D_2.Text) Then
            If (252 <= EVs_Input_D_2.Text) Then EVs_Input_D_2.Text = 252
        End If
        If ("" = EVs_Input_D_2.Text) Then EVs_Input_D_2.Text = 0
        Calculation()
    End Sub

    Private Sub EVs_Input_S_2_KeyPress(sender As Object, e As KeyPressEventArgs) Handles EVs_Input_S_2.KeyPress
        'キーが [0]～[9] または [BackSpace] 以外の場合イベントをキャンセル
        If Not (("0"c <= e.KeyChar And e.KeyChar <= "9"c) Or e.KeyChar = ControlChars.Back) Then
            'コントロールの既定の処理を省略する場合は true
            e.Handled = True
        End If
    End Sub
    Private Sub EVs_Input_S_2_TextChanged(sender As Object, e As EventArgs) Handles EVs_Input_S_2.TextChanged
        If ("" <> EVs_Input_S_2.Text) Then
            If (252 <= EVs_Input_S_2.Text) Then EVs_Input_S_2.Text = 252
        End If
        If ("" = EVs_Input_S_2.Text) Then EVs_Input_S_2.Text = 0
        Calculation()
    End Sub


    '実数値入力
    Private Sub RSs_Input_A_1_KeyPress(sender As Object, e As KeyPressEventArgs) Handles RSs_Input_A_1.KeyPress
        'キーが [0]～[9] または [BackSpace] 以外の場合イベントをキャンセル
        If Not (("0"c <= e.KeyChar And e.KeyChar <= "9"c) Or e.KeyChar = ControlChars.Back) Then
            'コントロールの既定の処理を省略する場合は true
            e.Handled = True
        End If
        Calculation()
    End Sub

    Private Sub RSs_Input_C_1_KeyPress(sender As Object, e As KeyPressEventArgs) Handles RSs_Input_C_1.KeyPress
        'キーが [0]～[9] または [BackSpace] 以外の場合イベントをキャンセル
        If Not (("0"c <= e.KeyChar And e.KeyChar <= "9"c) Or e.KeyChar = ControlChars.Back) Then
            'コントロールの既定の処理を省略する場合は true
            e.Handled = True
        End If
        Calculation()
    End Sub

    Private Sub RSs_Input_S_1_KeyPress(sender As Object, e As KeyPressEventArgs) Handles RSs_Input_S_1.KeyPress
        'キーが [0]～[9] または [BackSpace] 以外の場合イベントをキャンセル
        If Not (("0"c <= e.KeyChar And e.KeyChar <= "9"c) Or e.KeyChar = ControlChars.Back) Then
            'コントロールの既定の処理を省略する場合は true
            e.Handled = True
        End If
        Calculation()
    End Sub

    Private Sub RSs_Input_HP_2_KeyPress(sender As Object, e As KeyPressEventArgs) Handles RSs_Input_HP_2.KeyPress
        'キーが [0]～[9] または [BackSpace] 以外の場合イベントをキャンセル
        If Not (("0"c <= e.KeyChar And e.KeyChar <= "9"c) Or e.KeyChar = ControlChars.Back) Then
            'コントロールの既定の処理を省略する場合は true
            e.Handled = True
        End If
        Calculation()
    End Sub

    Private Sub RSs_Input_B_2_KeyPress(sender As Object, e As KeyPressEventArgs) Handles RSs_Input_B_2.KeyPress
        'キーが [0]～[9] または [BackSpace] 以外の場合イベントをキャンセル
        If Not (("0"c <= e.KeyChar And e.KeyChar <= "9"c) Or e.KeyChar = ControlChars.Back) Then
            'コントロールの既定の処理を省略する場合は true
            e.Handled = True
        End If
    End Sub

    Private Sub RSs_Input_D_2_KeyPress(sender As Object, e As KeyPressEventArgs) Handles RSs_Input_D_2.KeyPress
        'キーが [0]～[9] または [BackSpace] 以外の場合イベントをキャンセル
        If Not (("0"c <= e.KeyChar And e.KeyChar <= "9"c) Or e.KeyChar = ControlChars.Back) Then
            'コントロールの既定の処理を省略する場合は true
            e.Handled = True
        End If
        Calculation()
    End Sub

    Private Sub RSs_Input_S_2_KeyPress(sender As Object, e As KeyPressEventArgs) Handles RSs_Input_S_2.KeyPress
        'キーが [0]～[9] または [BackSpace] 以外の場合イベントをキャンセル
        If Not (("0"c <= e.KeyChar And e.KeyChar <= "9"c) Or e.KeyChar = ControlChars.Back) Then
            'コントロールの既定の処理を省略する場合は true
            e.Handled = True
        End If
        Calculation()
    End Sub


    'ステータスリセット
    Private Sub IVs_Reset_Click(sender As Object, e As EventArgs) Handles IVs_Reset.Click
        IVs_Input_HP_1 = 31
        IVs_Input_A_1.Text = 31
        IVs_Input_B_1 = 31
        IVs_Input_C_1.Text = 31
        IVs_Input_D_1 = 31
        IVs_Input_S_1.Text = 31

        IVs_Input_HP_2.Text = 31
        IVs_Input_A_2 = 31
        IVs_Input_B_2.Text = 31
        IVs_Input_C_2 = 31
        IVs_Input_D_2.Text = 31
        IVs_Input_S_2.Text = 31

        Calculation()
    End Sub

    Private Sub EVs_Reset_Click(sender As Object, e As EventArgs) Handles EVs_Reset.Click
        EVs_Input_HP_1 = 0
        EVs_Input_A_1.Text = 252
        EVs_Input_B_1 = 0
        EVs_Input_C_1.Text = 252
        EVs_Input_D_1 = 0
        EVs_Input_S_1.Text = 252

        EVs_Input_HP_2.Text = 0
        EVs_Input_A_2 = 252
        EVs_Input_B_2.Text = 0
        EVs_Input_C_2 = 252
        EVs_Input_D_2.Text = 0
        EVs_Input_S_2.Text = 252

        Calculation()
    End Sub

    Private Sub RSs_Reset_Click(sender As Object, e As EventArgs) Handles RSs_Reset.Click
        '攻撃側個体値
        IVs_Input_HP_1 = 31
        IVs_Input_A_1.Text = 31
        IVs_Input_B_1 = 31
        IVs_Input_C_1.Text = 31
        IVs_Input_D_1 = 31
        IVs_Input_S_1.Text = 31

        '防御側個体値
        IVs_Input_HP_2.Text = 31
        IVs_Input_A_2 = 31
        IVs_Input_B_2.Text = 31
        IVs_Input_C_2 = 31
        IVs_Input_D_2.Text = 31
        IVs_Input_S_2.Text = 31

        '攻撃側努力値
        EVs_Input_HP_1 = 0
        EVs_Input_A_1.Text = 252
        EVs_Input_B_1 = 0
        EVs_Input_C_1.Text = 252
        EVs_Input_D_1 = 0
        EVs_Input_S_1.Text = 252

        '防御側努力値
        EVs_Input_HP_2.Text = 0
        EVs_Input_A_2 = 252
        EVs_Input_B_2.Text = 0
        EVs_Input_C_2 = 252
        EVs_Input_D_2.Text = 0
        EVs_Input_S_2.Text = 252

        Calculation()
    End Sub

    Private Sub Rank_Reset_Click(sender As Object, e As EventArgs) Handles Rank_Reset.Click
        Rank_A_1.SelectedIndex = 6
        Rank_B_1 = 6
        Rank_C_1.SelectedIndex = 6
        Rank_D_1 = 6
        Rank_S_1.SelectedIndex = 6

        Rank_A_2 = 6
        Rank_B_2.SelectedIndex = 6
        Rank_C_2 = 6
        Rank_D_2.SelectedIndex = 6
        Rank_S_2.SelectedIndex = 6

        Calculation()
    End Sub


    'ランク選択
    Private Sub Rank_A_1_SelectedIndexChanged(sender As Object, e As EventArgs) Handles Rank_A_1.SelectedIndexChanged
        Calculation()
    End Sub

    Private Sub Rank_C_1_SelectedIndexChanged(sender As Object, e As EventArgs) Handles Rank_C_1.SelectedIndexChanged
        Calculation()
    End Sub

    Private Sub Rank_S_1_SelectedIndexChanged(sender As Object, e As EventArgs) Handles Rank_S_1.SelectedIndexChanged
        Calculation()
    End Sub


    Private Sub Rank_B_2_SelectedIndexChanged(sender As Object, e As EventArgs) Handles Rank_B_2.SelectedIndexChanged
        Calculation()
    End Sub

    Private Sub Rank_D_2_SelectedIndexChanged(sender As Object, e As EventArgs) Handles Rank_D_2.SelectedIndexChanged
        Calculation()
    End Sub

    Private Sub Rank_S_2_SelectedIndexChanged(sender As Object, e As EventArgs) Handles Rank_S_2.SelectedIndexChanged
        Calculation()
    End Sub


    Private Sub IERVs_All_Reset_Click(sender As Object, e As EventArgs) Handles IERVs_All_Reset.Click
        '攻撃側個体値
        IVs_Input_HP_1 = 31
        IVs_Input_A_1.Text = 31
        IVs_Input_B_1 = 31
        IVs_Input_C_1.Text = 31
        IVs_Input_D_1 = 31
        IVs_Input_S_1.Text = 31

        '防御側個体値
        IVs_Input_HP_2.Text = 31
        IVs_Input_A_2 = 31
        IVs_Input_B_2.Text = 31
        IVs_Input_C_2 = 31
        IVs_Input_D_2.Text = 31
        IVs_Input_S_2.Text = 31

        '攻撃側努力値
        EVs_Input_HP_1 = 0
        EVs_Input_A_1.Text = 252
        EVs_Input_B_1 = 0
        EVs_Input_C_1.Text = 252
        EVs_Input_D_1 = 0
        EVs_Input_S_1.Text = 252

        '防御側努力値
        EVs_Input_HP_2.Text = 0
        EVs_Input_A_2 = 252
        EVs_Input_B_2.Text = 0
        EVs_Input_C_2 = 252
        EVs_Input_D_2.Text = 0
        EVs_Input_S_2.Text = 252

        '攻撃側ランク
        Rank_A_1.SelectedIndex = 6
        Rank_B_1 = 6
        Rank_C_1.SelectedIndex = 6
        Rank_D_1 = 6
        Rank_S_1.SelectedIndex = 6

        '防御側ランク
        Rank_A_2 = 6
        Rank_B_2.SelectedIndex = 6
        Rank_C_2 = 6
        Rank_D_2.SelectedIndex = 6
        Rank_S_2.SelectedIndex = 6

        Calculation()
    End Sub


    '急所 / ダブル
    Private Sub Critical_CheckBox_1_CheckedChanged(sender As Object, e As EventArgs) Handles Critical_CheckBox_1.CheckedChanged
        Calculation()
    End Sub

    Private Sub Double_CheckBox_1_CheckedChanged(sender As Object, e As EventArgs) Handles Double_CheckBox_1.CheckedChanged
        Calculation()
    End Sub


    'その他の補正
    Private Sub Helping_Hand_CheckBox_1_CheckedChanged(sender As Object, e As EventArgs) Handles Helping_Hand_CheckBox_1.CheckedChanged
        Calculation()
    End Sub

    Private Sub Me_First_CheckBox_1_CheckedChanged(sender As Object, e As EventArgs) Handles Me_First_CheckBox_1.CheckedChanged
        Calculation()
    End Sub

    Private Sub Burn_CheckBox_1_CheckedChanged(sender As Object, e As EventArgs) Handles Burn_CheckBox_1.CheckedChanged
        Calculation()
    End Sub

    Private Sub Charge_CheckBox_1_CheckedChanged(sender As Object, e As EventArgs) Handles Charge_CheckBox_1.CheckedChanged
        Calculation()
    End Sub

    Private Sub Paralysis_CheckBox_1_CheckedChanged(sender As Object, e As EventArgs) Handles Paralysis_CheckBox_1.CheckedChanged
        Calculation()
    End Sub

    Private Sub Tailwind_CheckBox_1_CheckedChanged(sender As Object, e As EventArgs) Handles Tailwind_CheckBox_1.CheckedChanged
        Calculation()
    End Sub

    Private Sub Water_Sport_CheckBox_2_CheckedChanged(sender As Object, e As EventArgs) Handles Water_Sport_CheckBox_2.CheckedChanged
        Calculation()
    End Sub

    Private Sub Mud_Sport_CheckBox_2_CheckedChanged(sender As Object, e As EventArgs) Handles Mud_Sport_CheckBox_2.CheckedChanged
        Calculation()
    End Sub

    Private Sub Reflect_CheckBox_2_CheckedChanged(sender As Object, e As EventArgs) Handles Reflect_CheckBox_2.CheckedChanged
        Calculation()
    End Sub

    Private Sub Light_Screen_CheckBox_2_CheckedChanged(sender As Object, e As EventArgs) Handles Light_Screen_CheckBox_2.CheckedChanged
        Calculation()
    End Sub

    Private Sub Foresight_CheckBox_2_CheckedChanged(sender As Object, e As EventArgs) Handles Foresight_CheckBox_2.CheckedChanged
        Calculation()
    End Sub

    Private Sub Miracle_Eye_CheckBox_2_CheckedChanged(sender As Object, e As EventArgs) Handles Miracle_Eye_CheckBox_2.CheckedChanged
        Calculation()
    End Sub

    Private Sub Gravity_CheckBox_2_CheckedChanged(sender As Object, e As EventArgs) Handles Gravity_CheckBox_2.CheckedChanged
        Calculation()
    End Sub

    Private Sub Tailwind_CheckBox_2_CheckedChanged(sender As Object, e As EventArgs) Handles Tailwind_CheckBox_2.CheckedChanged
        Calculation()
    End Sub

    Private Sub Paralysis_CheckBox_2_CheckedChanged(sender As Object, e As EventArgs) Handles Paralysis_CheckBox_2.CheckedChanged
        Calculation()
    End Sub


    'その他の項目をすべてリセット
    Private Sub Others_Status_All_Reset_1_Click(sender As Object, e As EventArgs) Handles Others_Status_All_Reset_1.Click
        '攻撃側
        Helping_Hand_CheckBox_1.Checked = False
        Me_First_CheckBox_1.Checked = False
        Burn_CheckBox_1.Checked = False
        Charge_CheckBox_1.Checked = False
        Paralysis_CheckBox_1.Checked = False
        Tailwind_CheckBox_1.Checked = False

        Helping_Hand_CheckBox_2 = False
        Me_First_CheckBox_2 = False
        Burn_CheckBox_2 = False
        Charge_CheckBox_2 = False
    End Sub

    Private Sub Others_Status_All_Reset_2_Click(sender As Object, e As EventArgs) Handles Others_Status_All_Reset_2.Click
        '防御側
        Water_Sport_CheckBox_2.Checked = False
        Mud_Sport_CheckBox_2.Checked = False
        Reflect_CheckBox_2.Checked = False
        Light_Screen_CheckBox_2.Checked = False
        Foresight_CheckBox_2.Checked = False
        Miracle_Eye_CheckBox_2.Checked = False
        Gravity_CheckBox_2.Checked = False
        Tailwind_CheckBox_2.Checked = False
        Paralysis_CheckBox_2.Checked = False

        Water_Sport_CheckBox_1 = False
        Mud_Sport_CheckBox_1 = False
        Reflect_CheckBox_1 = False
        Light_Screen_CheckBox_1 = False
        Foresight_CheckBox_1 = False
        Miracle_Eye_CheckBox_1 = False
        Gravity_CheckBox_1 = False
        Tailwind_CheckBox_2.Checked = False
        Paralysis_CheckBox_2.Checked = False
    End Sub

    '--------------------------------------------------------------------------------------------------------------------------------------------------------------------

    '計算

    '--------------------------------------------------------------------------------------------------------------------------------------------------------------------

    Public Function Calculation()

        '攻撃側のステータスを計算
        Dim Name_Index As Integer = Array.IndexOf(Pokemon_Basics, Name_1.Text)
        If (Name_Index = -1 Or Name_Index Mod 11 <> 1) Then Exit Function

        For L = 0 To 8
            BSetc(L) = Pokemon_Basics(Name_Index + L + 1)
        Next

        RSs_Input_HP_1 = HP_Real_Value(BSetc(0), IVs_Input_HP_1, EVs_Input_HP_1, Level_Input_1.Text)
        RSs_Input_A_1.Text = A_S_Real_Value(BSetc(1), IVs_Input_A_1.Text, EVs_Input_A_1.Text, Level_Input_1.Text, Nature_Conversion(Nature_Display_1.Text)(0))
        RSs_Input_B_1 = A_S_Real_Value(BSetc(2), IVs_Input_B_1, EVs_Input_B_1, Level_Input_1.Text, Nature_Conversion(Nature_Display_1.Text)(1))
        RSs_Input_C_1.Text = A_S_Real_Value(BSetc(3), IVs_Input_C_1.Text, EVs_Input_C_1.Text, Level_Input_1.Text, Nature_Conversion(Nature_Display_1.Text)(2))
        RSs_Input_D_1 = A_S_Real_Value(BSetc(4), IVs_Input_D_1, EVs_Input_D_1, Level_Input_1.Text, Nature_Conversion(Nature_Display_1.Text)(3))
        RSs_Input_S_1.Text = A_S_Real_Value(BSetc(5), IVs_Input_S_1.Text, EVs_Input_S_1.Text, Level_Input_1.Text, Nature_Conversion(Nature_Display_1.Text)(4))


        '防御側のステータスを計算
        Name_Index = Array.IndexOf(Pokemon_Basics, Name_2.Text)
        If (Name_Index = -1 Or Name_Index Mod 11 <> 1) Then Exit Function


        For L = 0 To 8
            BSetc(L) = Pokemon_Basics(Name_Index + L + 1)
        Next
        RSs_Input_HP_2.Text = HP_Real_Value(BSetc(0), IVs_Input_HP_2.Text, EVs_Input_HP_2.Text, Level_Input_2.Text)
        RSs_Input_A_2 = A_S_Real_Value(BSetc(1), IVs_Input_A_2, EVs_Input_A_2, Level_Input_2.Text, Nature_Conversion(Nature_Display_2.Text)(0))
        RSs_Input_B_2.Text = A_S_Real_Value(BSetc(2), IVs_Input_B_2.Text, EVs_Input_B_2.Text, Level_Input_2.Text, Nature_Conversion(Nature_Display_2.Text)(1))
        RSs_Input_C_2 = A_S_Real_Value(BSetc(3), IVs_Input_C_2, EVs_Input_C_2, Level_Input_2.Text, Nature_Conversion(Nature_Display_2.Text)(2))
        RSs_Input_D_2.Text = A_S_Real_Value(BSetc(4), IVs_Input_D_2.Text, EVs_Input_D_2.Text, Level_Input_2.Text, Nature_Conversion(Nature_Display_2.Text)(3))
        RSs_Input_S_2.Text = A_S_Real_Value(BSetc(5), IVs_Input_S_2.Text, EVs_Input_S_2.Text, Level_Input_2.Text, Nature_Conversion(Nature_Display_2.Text)(4))

        'ヌケニンの場合、HPを1にする
        If Pokemon_Basics(Array.IndexOf(Pokemon_Basics, Name_1.Text)) = "ヌケニン" Then RSs_Input_HP_1 = 1
        If Pokemon_Basics(Array.IndexOf(Pokemon_Basics, Name_2.Text)) = "ヌケニン" Then RSs_Input_HP_2.Text = 1


        '攻撃側の素早さ計算
        Atk_S = 1
        'ランク補正
        If Rank_S_1.SelectedIndex = 0 Then S_1 = Math.Floor(RSs_Input_S_1.Text * 8 / 2) : Atk_S *= 8 / 2
        If Rank_S_1.SelectedIndex = 1 Then S_1 = Math.Floor(RSs_Input_S_1.Text * 7 / 2) : Atk_S *= 7 / 2
        If Rank_S_1.SelectedIndex = 2 Then S_1 = Math.Floor(RSs_Input_S_1.Text * 6 / 2) : Atk_S *= 6 / 2
        If Rank_S_1.SelectedIndex = 3 Then S_1 = Math.Floor(RSs_Input_S_1.Text * 5 / 2) : Atk_S *= 5 / 2
        If Rank_S_1.SelectedIndex = 4 Then S_1 = Math.Floor(RSs_Input_S_1.Text * 4 / 2) : Atk_S *= 4 / 2
        If Rank_S_1.SelectedIndex = 5 Then S_1 = Math.Floor(RSs_Input_S_1.Text * 3 / 2) : Atk_S *= 3 / 2
        If Rank_S_1.SelectedIndex = 6 Then S_1 = Math.Floor(RSs_Input_S_1.Text * 2 / 2) : Atk_S *= 2 / 2
        If Rank_S_1.SelectedIndex = 7 Then S_1 = Math.Floor(RSs_Input_S_1.Text * 2 / 3) : Atk_S *= 2 / 3
        If Rank_S_1.SelectedIndex = 8 Then S_1 = Math.Floor(RSs_Input_S_1.Text * 2 / 4) : Atk_S *= 2 / 4
        If Rank_S_1.SelectedIndex = 9 Then S_1 = Math.Floor(RSs_Input_S_1.Text * 2 / 5) : Atk_S *= 2 / 5
        If Rank_S_1.SelectedIndex = 10 Then S_1 = Math.Floor(RSs_Input_S_1.Text * 2 / 6) : Atk_S *= 2 / 6
        If Rank_S_1.SelectedIndex = 11 Then S_1 = Math.Floor(RSs_Input_S_1.Text * 2 / 7) : Atk_S *= 2 / 7
        If Rank_S_1.SelectedIndex = 12 Then S_1 = Math.Floor(RSs_Input_S_1.Text * 2 / 8) : Atk_S *= 2 / 8

        '特性補正(1)
        If (Ability_Display_1.Text = "すいすい" And Weather_Display.Text = "あめ") Then S_1 = Math.Floor(S_1 * 2) : Atk_S *= 2
        If (Ability_Display_1.Text = "ようりょくそ" And Weather_Display.Text = "はれ") Then S_1 = Math.Floor(S_1 * 2) : Atk_S *= 2

        'アイテム補正
        If (Item_Display_1.Text = "きょうせいギプス") Then S_1 = Math.Floor(S_1 / 2) : Atk_S /= 2
        If (Item_Display_1.Text = "くろいてっきゅう") Then S_1 = Math.Floor(S_1 / 2) : Atk_S /= 2
        If (Item_Display_1.Text = "こだわりスカーフ") Then S_1 = Math.Floor(S_1 * 1.5) : Atk_S *= 1.5
        If (Item_Display_1.Text = "スピードパウダー" And Name_1.Text = "メタモン") Then S_1 = Math.Floor(S_1 * 2) : Atk_S *= 2
        If (Item_Display_1.Text = "パワー系") Then S_1 = Math.Floor(S_1 / 2) : Atk_S /= 2

        'まひ補正
        If (Ability_Display_1.Text <> "はやあし" And Paralysis_CheckBox_1.Checked = True) Then S_1 = Math.Floor(S_1 / 4) : Atk_S /= 4

        '特性補正(2)
        If (Ability_Display_1.Text = "スロースタート") Then S_1 = Math.Floor(S_1 / 2) : Atk_S /= 2
        If (Ability_Display_1.Text = "はやあし") Then S_1 = Math.Floor(S_1 * 1.5) : Atk_S *= 1.5
        If (Ability_Display_1.Text = "かるわざ" And Item_Display_1.Text = "持ち物なし") Then S_1 = Math.Floor(S_1 * 2) : Atk_S *= 2

        'おいかぜ補正
        If (Tailwind_CheckBox_1.Checked = True) Then S_1 = Math.Floor(S_1 * 2) : Atk_S *= 2


        '防御側の素早さ計算
        Def_S = 1
        'ランク補正
        If Rank_S_2.SelectedIndex = 0 Then S_2 = Math.Floor(RSs_Input_S_2.Text * 8 / 2) : Def_S *= 8 / 2
        If Rank_S_2.SelectedIndex = 1 Then S_2 = Math.Floor(RSs_Input_S_2.Text * 7 / 2) : Def_S *= 7 / 2
        If Rank_S_2.SelectedIndex = 2 Then S_2 = Math.Floor(RSs_Input_S_2.Text * 6 / 2) : Def_S *= 6 / 2
        If Rank_S_2.SelectedIndex = 3 Then S_2 = Math.Floor(RSs_Input_S_2.Text * 5 / 2) : Def_S *= 5 / 2
        If Rank_S_2.SelectedIndex = 4 Then S_2 = Math.Floor(RSs_Input_S_2.Text * 4 / 2) : Def_S *= 4 / 2
        If Rank_S_2.SelectedIndex = 5 Then S_2 = Math.Floor(RSs_Input_S_2.Text * 3 / 2) : Def_S *= 3 / 2
        If Rank_S_2.SelectedIndex = 6 Then S_2 = Math.Floor(RSs_Input_S_2.Text * 2 / 2)
        If Rank_S_2.SelectedIndex = 7 Then S_2 = Math.Floor(RSs_Input_S_2.Text * 2 / 3) : Def_S *= 2 / 3
        If Rank_S_2.SelectedIndex = 8 Then S_2 = Math.Floor(RSs_Input_S_2.Text * 2 / 4) : Def_S *= 2 / 4
        If Rank_S_2.SelectedIndex = 9 Then S_2 = Math.Floor(RSs_Input_S_2.Text * 2 / 5) : Def_S *= 2 / 5
        If Rank_S_2.SelectedIndex = 10 Then S_2 = Math.Floor(RSs_Input_S_2.Text * 2 / 6) : Def_S *= 2 / 6
        If Rank_S_2.SelectedIndex = 11 Then S_2 = Math.Floor(RSs_Input_S_2.Text * 2 / 7) : Def_S *= 2 / 7
        If Rank_S_2.SelectedIndex = 12 Then S_2 = Math.Floor(RSs_Input_S_2.Text * 2 / 8) : Def_S *= 2 / 8

        '特性補正(1)
        If (Ability_Display_2.Text = "すいすい" And Weather_Display.Text = "あめ") Then S_2 = Math.Floor(S_2 * 2) : Def_S *= 2
        If (Ability_Display_2.Text = "ようりょくそ" And Weather_Display.Text = "はれ") Then S_2 = Math.Floor(S_2 * 2) : Def_S *= 2

        'アイテム補正
        If (Item_Display_2.Text = "きょうせいギプス") Then S_2 = Math.Floor(S_2 / 2) : Def_S /= 2
        If (Item_Display_2.Text = "くろいてっきゅう") Then S_2 = Math.Floor(S_2 / 2) : Def_S /= 2
        If (Item_Display_2.Text = "こだわりスカーフ") Then S_2 = Math.Floor(S_2 * 1.5) : Def_S *= 1.5
        If (Item_Display_2.Text = "スピードパウダー" And Name_2.Text = "メタモン") Then S_2 = Math.Floor(S_2 * 2) : Def_S *= 2
        If (Item_Display_2.Text = "パワー系") Then S_2 = Math.Floor(S_2 / 2) : Def_S /= 2

        'まひ補正
        If (Ability_Display_2.Text <> "はやあし" And Paralysis_CheckBox_2.Checked = True) Then S_2 = Math.Floor(S_2 / 4) : Def_S /= 4

        '特性補正(2)
        If (Ability_Display_2.Text = "スロースタート") Then S_2 = Math.Floor(S_2 / 2) : Def_S /= 2
        If (Ability_Display_2.Text = "はやあし") Then S_2 = Math.Floor(S_2 * 1.5) : Def_S *= 1.5
        If (Ability_Display_2.Text = "かるわざ" And Item_Display_2.Text = "持ち物なし") Then S_2 = Math.Floor(S_2 * 2) : Def_S *= 2

        'おいかぜ補正
        If (Tailwind_CheckBox_2.Checked = True) Then S_2 = Math.Floor(S_2 * 2) : Def_S *= 2


        '--------------------------------------------------------------------------------

        'Section1 #Base [Basic information]

        '--------------------------------------------------------------------------------

        '技のタイプを代入
        If (-1 <> Array.IndexOf(Move_Data, Move_Input_1.Text)) Then Move_Type(0) = Move_Data(Array.IndexOf(Move_Data, Move_Input_1.Text) + 1) Else Move_Type(0) = "ノーマル"
        If (-1 <> Array.IndexOf(Move_Data, Move_Input_2.Text)) Then Move_Type(1) = Move_Data(Array.IndexOf(Move_Data, Move_Input_2.Text) + 1) Else Move_Type(1) = "ノーマル"
        If (-1 <> Array.IndexOf(Move_Data, Move_Input_3.Text)) Then Move_Type(2) = Move_Data(Array.IndexOf(Move_Data, Move_Input_3.Text) + 1) Else Move_Type(2) = "ノーマル"
        If (-1 <> Array.IndexOf(Move_Data, Move_Input_4.Text)) Then Move_Type(3) = Move_Data(Array.IndexOf(Move_Data, Move_Input_4.Text) + 1) Else Move_Type(3) = "ノーマル"
        Move_Type(4) = Type_Display.Text

        'ウェザーボール
        If (Move_Input_1.Text = "ウェザーボール" And Weather_Display.Text = "はれ") Then Move_Type(0) = "ほのお"
        If (Move_Input_1.Text = "ウェザーボール" And Weather_Display.Text = "あめ") Then Move_Type(0) = "みず"
        If (Move_Input_1.Text = "ウェザーボール" And Weather_Display.Text = "あられ") Then Move_Type(0) = "こおり"
        If (Move_Input_1.Text = "ウェザーボール" And Weather_Display.Text = "すなあらし") Then Move_Type(0) = "いわ"

        If (Move_Input_2.Text = "ウェザーボール" And Weather_Display.Text = "はれ") Then Move_Type(1) = "ほのお"
        If (Move_Input_2.Text = "ウェザーボール" And Weather_Display.Text = "あめ") Then Move_Type(1) = "みず"
        If (Move_Input_2.Text = "ウェザーボール" And Weather_Display.Text = "あられ") Then Move_Type(1) = "こおり"
        If (Move_Input_2.Text = "ウェザーボール" And Weather_Display.Text = "すなあらし") Then Move_Type(1) = "いわ"

        If (Move_Input_3.Text = "ウェザーボール" And Weather_Display.Text = "はれ") Then Move_Type(2) = "ほのお"
        If (Move_Input_3.Text = "ウェザーボール" And Weather_Display.Text = "あめ") Then Move_Type(2) = "みず"
        If (Move_Input_3.Text = "ウェザーボール" And Weather_Display.Text = "あられ") Then Move_Type(2) = "こおり"
        If (Move_Input_3.Text = "ウェザーボール" And Weather_Display.Text = "すなあらし") Then Move_Type(2) = "いわ"

        If (Move_Input_4.Text = "ウェザーボール" And Weather_Display.Text = "はれ") Then Move_Type(3) = "ほのお"
        If (Move_Input_4.Text = "ウェザーボール" And Weather_Display.Text = "あめ") Then Move_Type(3) = "みず"
        If (Move_Input_4.Text = "ウェザーボール" And Weather_Display.Text = "あられ") Then Move_Type(3) = "こおり"
        If (Move_Input_4.Text = "ウェザーボール" And Weather_Display.Text = "すなあらし") Then Move_Type(3) = "いわ"

        'さばきのつぶて
        If (Move_Input_1.Text = "さばきのつぶて" And Item_Display_1.Text = "ひのたまプレート") Then Move_Type(0) = "ほのお"
        If (Move_Input_1.Text = "さばきのつぶて" And Item_Display_1.Text = "しずくプレート") Then Move_Type(0) = "みず"
        If (Move_Input_1.Text = "さばきのつぶて" And Item_Display_1.Text = "みどりのプレート") Then Move_Type(0) = "くさ"
        If (Move_Input_1.Text = "さばきのつぶて" And Item_Display_1.Text = "いかずちプレート") Then Move_Type(0) = "でんき"
        If (Move_Input_1.Text = "さばきのつぶて" And Item_Display_1.Text = "つららのプレート") Then Move_Type(0) = "こおり"
        If (Move_Input_1.Text = "さばきのつぶて" And Item_Display_1.Text = "こぶしのプレート") Then Move_Type(0) = "かくとう"
        If (Move_Input_1.Text = "さばきのつぶて" And Item_Display_1.Text = "もうどくプレート") Then Move_Type(0) = "どく"
        If (Move_Input_1.Text = "さばきのつぶて" And Item_Display_1.Text = "だいちのプレート") Then Move_Type(0) = "じめん"
        If (Move_Input_1.Text = "さばきのつぶて" And Item_Display_1.Text = "あおぞらプレート") Then Move_Type(0) = "ひこう"
        If (Move_Input_1.Text = "さばきのつぶて" And Item_Display_1.Text = "ふしぎのプレート") Then Move_Type(0) = "エスパー"
        If (Move_Input_1.Text = "さばきのつぶて" And Item_Display_1.Text = "たまむしプレート") Then Move_Type(0) = "むし"
        If (Move_Input_1.Text = "さばきのつぶて" And Item_Display_1.Text = "がんせきプレート") Then Move_Type(0) = "いわ"
        If (Move_Input_1.Text = "さばきのつぶて" And Item_Display_1.Text = "もののけプレート") Then Move_Type(0) = "ゴースト"
        If (Move_Input_1.Text = "さばきのつぶて" And Item_Display_1.Text = "りゅうのプレート") Then Move_Type(0) = "ドラゴン"
        If (Move_Input_1.Text = "さばきのつぶて" And Item_Display_1.Text = "こわもてプレート") Then Move_Type(0) = "あく"
        If (Move_Input_1.Text = "さばきのつぶて" And Item_Display_1.Text = "こうてつプレート") Then Move_Type(0) = "はがね"

        If (Move_Input_2.Text = "さばきのつぶて" And Item_Display_1.Text = "ひのたまプレート") Then Move_Type(1) = "ほのお"
        If (Move_Input_2.Text = "さばきのつぶて" And Item_Display_1.Text = "しずくプレート") Then Move_Type(1) = "みず"
        If (Move_Input_2.Text = "さばきのつぶて" And Item_Display_1.Text = "みどりのプレート") Then Move_Type(1) = "くさ"
        If (Move_Input_2.Text = "さばきのつぶて" And Item_Display_1.Text = "いかずちプレート") Then Move_Type(1) = "でんき"
        If (Move_Input_2.Text = "さばきのつぶて" And Item_Display_1.Text = "つららのプレート") Then Move_Type(1) = "こおり"
        If (Move_Input_2.Text = "さばきのつぶて" And Item_Display_1.Text = "こぶしのプレート") Then Move_Type(1) = "かくとう"
        If (Move_Input_2.Text = "さばきのつぶて" And Item_Display_1.Text = "もうどくプレート") Then Move_Type(1) = "どく"
        If (Move_Input_2.Text = "さばきのつぶて" And Item_Display_1.Text = "だいちのプレート") Then Move_Type(1) = "じめん"
        If (Move_Input_2.Text = "さばきのつぶて" And Item_Display_1.Text = "あおぞらプレート") Then Move_Type(1) = "ひこう"
        If (Move_Input_2.Text = "さばきのつぶて" And Item_Display_1.Text = "ふしぎのプレート") Then Move_Type(1) = "エスパー"
        If (Move_Input_2.Text = "さばきのつぶて" And Item_Display_1.Text = "たまむしプレート") Then Move_Type(1) = "むし"
        If (Move_Input_2.Text = "さばきのつぶて" And Item_Display_1.Text = "がんせきプレート") Then Move_Type(1) = "いわ"
        If (Move_Input_2.Text = "さばきのつぶて" And Item_Display_1.Text = "もののけプレート") Then Move_Type(1) = "ゴースト"
        If (Move_Input_2.Text = "さばきのつぶて" And Item_Display_1.Text = "りゅうのプレート") Then Move_Type(1) = "ドラゴン"
        If (Move_Input_2.Text = "さばきのつぶて" And Item_Display_1.Text = "こわもてプレート") Then Move_Type(1) = "あく"
        If (Move_Input_2.Text = "さばきのつぶて" And Item_Display_1.Text = "こうてつプレート") Then Move_Type(1) = "はがね"

        If (Move_Input_3.Text = "さばきのつぶて" And Item_Display_1.Text = "ひのたまプレート") Then Move_Type(2) = "ほのお"
        If (Move_Input_3.Text = "さばきのつぶて" And Item_Display_1.Text = "しずくプレート") Then Move_Type(2) = "みず"
        If (Move_Input_3.Text = "さばきのつぶて" And Item_Display_1.Text = "みどりのプレート") Then Move_Type(2) = "くさ"
        If (Move_Input_3.Text = "さばきのつぶて" And Item_Display_1.Text = "いかずちプレート") Then Move_Type(2) = "でんき"
        If (Move_Input_3.Text = "さばきのつぶて" And Item_Display_1.Text = "つららのプレート") Then Move_Type(2) = "こおり"
        If (Move_Input_3.Text = "さばきのつぶて" And Item_Display_1.Text = "こぶしのプレート") Then Move_Type(2) = "かくとう"
        If (Move_Input_3.Text = "さばきのつぶて" And Item_Display_1.Text = "もうどくプレート") Then Move_Type(2) = "どく"
        If (Move_Input_3.Text = "さばきのつぶて" And Item_Display_1.Text = "だいちのプレート") Then Move_Type(2) = "じめん"
        If (Move_Input_3.Text = "さばきのつぶて" And Item_Display_1.Text = "あおぞらプレート") Then Move_Type(2) = "ひこう"
        If (Move_Input_3.Text = "さばきのつぶて" And Item_Display_1.Text = "ふしぎのプレート") Then Move_Type(2) = "エスパー"
        If (Move_Input_3.Text = "さばきのつぶて" And Item_Display_1.Text = "たまむしプレート") Then Move_Type(2) = "むし"
        If (Move_Input_3.Text = "さばきのつぶて" And Item_Display_1.Text = "がんせきプレート") Then Move_Type(2) = "いわ"
        If (Move_Input_3.Text = "さばきのつぶて" And Item_Display_1.Text = "もののけプレート") Then Move_Type(2) = "ゴースト"
        If (Move_Input_3.Text = "さばきのつぶて" And Item_Display_1.Text = "りゅうのプレート") Then Move_Type(2) = "ドラゴン"
        If (Move_Input_3.Text = "さばきのつぶて" And Item_Display_1.Text = "こわもてプレート") Then Move_Type(2) = "あく"
        If (Move_Input_3.Text = "さばきのつぶて" And Item_Display_1.Text = "こうてつプレート") Then Move_Type(2) = "はがね"

        If (Move_Input_4.Text = "さばきのつぶて" And Item_Display_1.Text = "ひのたまプレート") Then Move_Type(3) = "ほのお"
        If (Move_Input_4.Text = "さばきのつぶて" And Item_Display_1.Text = "しずくプレート") Then Move_Type(3) = "みず"
        If (Move_Input_4.Text = "さばきのつぶて" And Item_Display_1.Text = "みどりのプレート") Then Move_Type(3) = "くさ"
        If (Move_Input_4.Text = "さばきのつぶて" And Item_Display_1.Text = "いかずちプレート") Then Move_Type(3) = "でんき"
        If (Move_Input_4.Text = "さばきのつぶて" And Item_Display_1.Text = "つららのプレート") Then Move_Type(3) = "こおり"
        If (Move_Input_4.Text = "さばきのつぶて" And Item_Display_1.Text = "こぶしのプレート") Then Move_Type(3) = "かくとう"
        If (Move_Input_4.Text = "さばきのつぶて" And Item_Display_1.Text = "もうどくプレート") Then Move_Type(3) = "どく"
        If (Move_Input_4.Text = "さばきのつぶて" And Item_Display_1.Text = "だいちのプレート") Then Move_Type(3) = "じめん"
        If (Move_Input_4.Text = "さばきのつぶて" And Item_Display_1.Text = "あおぞらプレート") Then Move_Type(3) = "ひこう"
        If (Move_Input_4.Text = "さばきのつぶて" And Item_Display_1.Text = "ふしぎのプレート") Then Move_Type(3) = "エスパー"
        If (Move_Input_4.Text = "さばきのつぶて" And Item_Display_1.Text = "たまむしプレート") Then Move_Type(3) = "むし"
        If (Move_Input_4.Text = "さばきのつぶて" And Item_Display_1.Text = "がんせきプレート") Then Move_Type(3) = "いわ"
        If (Move_Input_4.Text = "さばきのつぶて" And Item_Display_1.Text = "もののけプレート") Then Move_Type(3) = "ゴースト"
        If (Move_Input_4.Text = "さばきのつぶて" And Item_Display_1.Text = "りゅうのプレート") Then Move_Type(3) = "ドラゴン"
        If (Move_Input_4.Text = "さばきのつぶて" And Item_Display_1.Text = "こわもてプレート") Then Move_Type(3) = "あく"
        If (Move_Input_4.Text = "さばきのつぶて" And Item_Display_1.Text = "こうてつプレート") Then Move_Type(3) = "はがね"

        'ノーマルスキン
        If (Ability_Display_1.Text = "ノーマルスキン" And Move_Input_1.Text <> "わるあがき") Then Move_Type(0) = "ノーマル"
        If (Ability_Display_1.Text = "ノーマルスキン" And Move_Input_2.Text <> "わるあがき") Then Move_Type(1) = "ノーマル"
        If (Ability_Display_1.Text = "ノーマルスキン" And Move_Input_3.Text <> "わるあがき") Then Move_Type(2) = "ノーマル"
        If (Ability_Display_1.Text = "ノーマルスキン" And Move_Input_4.Text <> "わるあがき") Then Move_Type(3) = "ノーマル"
        If (Ability_Display_1.Text = "ノーマルスキン" And Type_Display.Text <> "無属性") Then Move_Type(4) = "ノーマル"


        '天気による変化 / プレートによる変化
        Name_Index = Array.IndexOf(Pokemon_Basics, Name_1.Text)
        For L = 0 To 8
            BSetc(L) = Pokemon_Basics(Name_Index + L + 1)
        Next
        Types_1 = BSetc(6).Split("/"c)
        If (Name_1.Text = "ポワルン" And Weather_Display.Text = "はれ") Then Types_1(0) = "ほのお"
        If (Name_1.Text = "ポワルン" And Weather_Display.Text = "あめ") Then Types_1(0) = "みず"
        If (Name_1.Text = "ポワルン" And Weather_Display.Text = "あられ") Then Types_1(0) = "こおり"

        If (Name_1.Text = "アルセウス" And Item_Display_1.Text = "まっさらプレート") Then Types_1(0) = "ノーマル"
        If (Name_1.Text = "アルセウス" And Item_Display_1.Text = "ひのたまプレート") Then Types_1(0) = "ほのお"
        If (Name_1.Text = "アルセウス" And Item_Display_1.Text = "しずくプレート") Then Types_1(0) = "みず"
        If (Name_1.Text = "アルセウス" And Item_Display_1.Text = "みどりのプレート") Then Types_1(0) = "くさ"
        If (Name_1.Text = "アルセウス" And Item_Display_1.Text = "いかずちプレート") Then Types_1(0) = "でんき"
        If (Name_1.Text = "アルセウス" And Item_Display_1.Text = "つららのプレート") Then Types_1(0) = "こおり"
        If (Name_1.Text = "アルセウス" And Item_Display_1.Text = "こぶしのプレート") Then Types_1(0) = "かくとう"
        If (Name_1.Text = "アルセウス" And Item_Display_1.Text = "もうどくプレート") Then Types_1(0) = "どく"
        If (Name_1.Text = "アルセウス" And Item_Display_1.Text = "だいちのプレート") Then Types_1(0) = "じめん"
        If (Name_1.Text = "アルセウス" And Item_Display_1.Text = "あおぞらプレート") Then Types_1(0) = "ひこう"
        If (Name_1.Text = "アルセウス" And Item_Display_1.Text = "ふしぎのプレート") Then Types_1(0) = "エスパー"
        If (Name_1.Text = "アルセウス" And Item_Display_1.Text = "たまむしプレート") Then Types_1(0) = "むし"
        If (Name_1.Text = "アルセウス" And Item_Display_1.Text = "がんせきプレート") Then Types_1(0) = "いわ"
        If (Name_1.Text = "アルセウス" And Item_Display_1.Text = "もののけプレート") Then Types_1(0) = "ゴースト"
        If (Name_1.Text = "アルセウス" And Item_Display_1.Text = "りゅうのプレート") Then Types_1(0) = "ドラゴン"
        If (Name_1.Text = "アルセウス" And Item_Display_1.Text = "こわもてプレート") Then Types_1(0) = "あく"
        If (Name_1.Text = "アルセウス" And Item_Display_1.Text = "こうてつプレート") Then Types_1(0) = "はがね"


        Name_Index = Array.IndexOf(Pokemon_Basics, Name_2.Text)
        For L = 0 To 8
            BSetc(L) = Pokemon_Basics(Name_Index + L + 1)
        Next
        Types_2 = BSetc(6).Split("/"c)
        If (Name_2.Text = "ポワルン" And Weather_Display.Text = "はれ") Then Types_2(0) = "ほのお"
        If (Name_2.Text = "ポワルン" And Weather_Display.Text = "あめ") Then Types_2(0) = "みず"
        If (Name_2.Text = "ポワルン" And Weather_Display.Text = "あられ") Then Types_2(0) = "こおり"

        If (Name_2.Text = "アルセウス" And Item_Display_2.Text = "まっさらプレート") Then Types_2(0) = "ノーマル"
        If (Name_2.Text = "アルセウス" And Item_Display_2.Text = "ひのたまプレート") Then Types_2(0) = "ほのお"
        If (Name_2.Text = "アルセウス" And Item_Display_2.Text = "しずくプレート") Then Types_2(0) = "みず"
        If (Name_2.Text = "アルセウス" And Item_Display_2.Text = "みどりのプレート") Then Types_2(0) = "くさ"
        If (Name_2.Text = "アルセウス" And Item_Display_2.Text = "いかずちプレート") Then Types_2(0) = "でんき"
        If (Name_2.Text = "アルセウス" And Item_Display_2.Text = "つららのプレート") Then Types_2(0) = "こおり"
        If (Name_2.Text = "アルセウス" And Item_Display_2.Text = "こぶしのプレート") Then Types_2(0) = "かくとう"
        If (Name_2.Text = "アルセウス" And Item_Display_2.Text = "もうどくプレート") Then Types_2(0) = "どく"
        If (Name_2.Text = "アルセウス" And Item_Display_2.Text = "だいちのプレート") Then Types_2(0) = "じめん"
        If (Name_2.Text = "アルセウス" And Item_Display_2.Text = "あおぞらプレート") Then Types_2(0) = "ひこう"
        If (Name_2.Text = "アルセウス" And Item_Display_2.Text = "ふしぎのプレート") Then Types_2(0) = "エスパー"
        If (Name_2.Text = "アルセウス" And Item_Display_2.Text = "たまむしプレート") Then Types_2(0) = "むし"
        If (Name_2.Text = "アルセウス" And Item_Display_2.Text = "がんせきプレート") Then Types_2(0) = "いわ"
        If (Name_2.Text = "アルセウス" And Item_Display_2.Text = "もののけプレート") Then Types_2(0) = "ゴースト"
        If (Name_2.Text = "アルセウス" And Item_Display_2.Text = "りゅうのプレート") Then Types_2(0) = "ドラゴン"
        If (Name_2.Text = "アルセウス" And Item_Display_2.Text = "こわもてプレート") Then Types_2(0) = "あく"
        If (Name_2.Text = "アルセウス" And Item_Display_2.Text = "こうてつプレート") Then Types_2(0) = "はがね"


        'タイプ一致、適応力補正 #STAB
        If Types_1.Length = 1 Then
            ReDim Preserve Types_1(1)
            Types_1(1) = Types_1(0)
        End If

        If (Ability_Display_1.Text = "てきおうりょく" And (Move_Type(0) = Types_1(0) Or Move_Type(0) = Types_1(1)) And Move_Input_1.Text <> "わるあがき" And Move_Input_1.Text <> "みらいよち" And Move_Input_1.Text <> "はめつのねがい") Then
            STAB(0) = 2
        ElseIf ((Move_Type(0) = Types_1(0) Or Move_Type(0) = Types_1(1)) And Move_Input_1.Text <> "わるあがき" And Move_Input_1.Text <> "みらいよち" And Move_Input_1.Text <> "はめつのねがい") Then
            STAB(0) = 1.5
        Else
            STAB(0) = 1
        End If

        If (Ability_Display_1.Text = "てきおうりょく" And (Move_Type(1) = Types_1(0) Or Move_Type(1) = Types_1(1)) And Move_Input_2.Text <> "わるあがき" And Move_Input_2.Text <> "みらいよち" And Move_Input_2.Text <> "はめつのねがい") Then
            STAB(1) = 2
        ElseIf ((Move_Type(1) = Types_1(0) Or Move_Type(1) = Types_1(1)) And Move_Input_2.Text <> "わるあがき" And Move_Input_2.Text <> "みらいよち" And Move_Input_2.Text <> "はめつのねがい") Then
            STAB(1) = 1.5
        Else
            STAB(1) = 1
        End If

        If (Ability_Display_1.Text = "てきおうりょく" And (Move_Type(2) = Types_1(0) Or Move_Type(2) = Types_1(1)) And Move_Input_3.Text <> "わるあがき" And Move_Input_3.Text <> "みらいよち" And Move_Input_3.Text <> "はめつのねがい") Then
            STAB(2) = 2
        ElseIf ((Move_Type(2) = Types_1(0) Or Move_Type(2) = Types_1(1)) And Move_Input_3.Text <> "わるあがき" And Move_Input_3.Text <> "みらいよち" And Move_Input_3.Text <> "はめつのねがい") Then
            STAB(2) = 1.5
        Else
            STAB(2) = 1
        End If

        If (Ability_Display_1.Text = "てきおうりょく" And (Move_Type(3) = Types_1(0) Or Move_Type(3) = Types_1(1)) And Move_Input_4.Text <> "わるあがき" And Move_Input_4.Text <> "みらいよち" And Move_Input_4.Text <> "はめつのねがい") Then
            STAB(3) = 2
        ElseIf ((Move_Type(3) = Types_1(0) Or Move_Type(3) = Types_1(1)) And Move_Input_4.Text <> "わるあがき" And Move_Input_4.Text <> "みらいよち" And Move_Input_4.Text <> "はめつのねがい") Then
            STAB(3) = 1.5
        Else
            STAB(3) = 1
        End If

        If (Ability_Display_1.Text = "てきおうりょく" And (Move_Type(4) = Types_1(0) Or Move_Type(4) = Types_1(1)) And Type_Display.Text <> "無属性") Then
            STAB(4) = 2
        ElseIf ((Move_Type(4) = Types_1(0) Or Move_Type(4) = Types_1(1)) And Type_Display.Text <> "無属性") Then
            STAB(4) = 1.5
        Else
            STAB(4) = 1
        End If


        '#相性補正 #Type1 / #Type2
        If Types_2.Length = 1 Then
            ReDim Preserve Types_2(1)
            Types_2(1) = Types_2(0)
        End If

        Calced_Type_Compatibility_Count = 0
        Calced_Type_Compatibility = {{1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}}

        For Calced_Type_Compatibility_Count = 0 To 4

            Type_Compatibility_Chk = 0
            Type_Compatibility = 1
            Type_Compatibility_1 = 1
            Type_Compatibility_2 = 1

            If (Move_Type(Calced_Type_Compatibility_Count) = "ノーマル" And (Types_2(0) = "いわ" Or Types_2(1) = "いわ")) Then Type_Compatibility = 0.5 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "ノーマル" And (Types_2(0) = "はがね" Or Types_2(1) = "はがね")) Then Type_Compatibility = 0.5 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "ほのお" And (Types_2(0) = "ほのお" Or Types_2(1) = "ほのお")) Then Type_Compatibility = 0.5 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "ほのお" And (Types_2(0) = "みず" Or Types_2(1) = "みず")) Then Type_Compatibility = 0.5 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "ほのお" And (Types_2(0) = "くさ" Or Types_2(1) = "くさ")) Then Type_Compatibility = 2 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "ほのお" And (Types_2(0) = "こおり" Or Types_2(1) = "こおり")) Then Type_Compatibility = 2 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "ほのお" And (Types_2(0) = "むし" Or Types_2(1) = "むし")) Then Type_Compatibility = 2 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "ほのお" And (Types_2(0) = "いわ" Or Types_2(1) = "いわ")) Then Type_Compatibility = 0.5 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "ほのお" And (Types_2(0) = "ドラゴン" Or Types_2(1) = "ドラゴン")) Then Type_Compatibility = 0.5 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "ほのお" And (Types_2(0) = "はがね" Or Types_2(1) = "はがね")) Then Type_Compatibility = 2 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "みず" And (Types_2(0) = "ほのお" Or Types_2(1) = "ほのお")) Then Type_Compatibility = 2 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "みず" And (Types_2(0) = "みず" Or Types_2(1) = "みず")) Then Type_Compatibility = 0.5 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "みず" And (Types_2(0) = "くさ" Or Types_2(1) = "くさ")) Then Type_Compatibility = 0.5 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "みず" And (Types_2(0) = "じめん" Or Types_2(1) = "じめん")) Then Type_Compatibility = 2 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "みず" And (Types_2(0) = "いわ" Or Types_2(1) = "いわ")) Then Type_Compatibility = 2 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "みず" And (Types_2(0) = "ドラゴン" Or Types_2(1) = "ドラゴン")) Then Type_Compatibility = 0.5 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "でんき" And (Types_2(0) = "みず" Or Types_2(1) = "みず")) Then Type_Compatibility = 2 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "でんき" And (Types_2(0) = "でんき" Or Types_2(1) = "でんき")) Then Type_Compatibility = 0.5 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "でんき" And (Types_2(0) = "くさ" Or Types_2(1) = "くさ")) Then Type_Compatibility = 0.5 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "でんき" And (Types_2(0) = "じめん" Or Types_2(1) = "じめん")) Then Type_Compatibility = 0 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "でんき" And (Types_2(0) = "ひこう" Or Types_2(1) = "ひこう")) Then Type_Compatibility = 2 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "でんき" And (Types_2(0) = "ドラゴン" Or Types_2(1) = "ドラゴン")) Then Type_Compatibility = 0.5 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "くさ" And (Types_2(0) = "ほのお" Or Types_2(1) = "ほのお")) Then Type_Compatibility = 0.5 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "くさ" And (Types_2(0) = "みず" Or Types_2(1) = "みず")) Then Type_Compatibility = 2 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "くさ" And (Types_2(0) = "くさ" Or Types_2(1) = "くさ")) Then Type_Compatibility = 0.5 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "くさ" And (Types_2(0) = "どく" Or Types_2(1) = "どく")) Then Type_Compatibility = 0.5 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "くさ" And (Types_2(0) = "じめん" Or Types_2(1) = "じめん")) Then Type_Compatibility = 2 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "くさ" And (Types_2(0) = "ひこう" Or Types_2(1) = "ひこう")) Then Type_Compatibility = 0.5 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "くさ" And (Types_2(0) = "むし" Or Types_2(1) = "むし")) Then Type_Compatibility = 0.5 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "くさ" And (Types_2(0) = "いわ" Or Types_2(1) = "いわ")) Then Type_Compatibility = 2 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "くさ" And (Types_2(0) = "ドラゴン" Or Types_2(1) = "ドラゴン")) Then Type_Compatibility = 0.5 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "くさ" And (Types_2(0) = "はがね" Or Types_2(1) = "はがね")) Then Type_Compatibility = 0.5 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "こおり" And (Types_2(0) = "みず" Or Types_2(1) = "みず")) Then Type_Compatibility = 0.5 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "こおり" And (Types_2(0) = "くさ" Or Types_2(1) = "くさ")) Then Type_Compatibility = 2 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "こおり" And (Types_2(0) = "こおり" Or Types_2(1) = "こおり")) Then Type_Compatibility = 0.5 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "こおり" And (Types_2(0) = "じめん" Or Types_2(1) = "じめん")) Then Type_Compatibility = 2 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "こおり" And (Types_2(0) = "ひこう" Or Types_2(1) = "ひこう")) Then Type_Compatibility = 2 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "こおり" And (Types_2(0) = "ドラゴン" Or Types_2(1) = "ドラゴン")) Then Type_Compatibility = 2 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "こおり" And (Types_2(0) = "はがね" Or Types_2(1) = "はがね")) Then Type_Compatibility = 0.5 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "こおり" And (Types_2(0) = "ほのお" Or Types_2(1) = "ほのお")) Then Type_Compatibility = 0.5 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "かくとう" And (Types_2(0) = "ノーマル" Or Types_2(1) = "ノーマル")) Then Type_Compatibility = 2 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "かくとう" And (Types_2(0) = "こおり" Or Types_2(1) = "こおり")) Then Type_Compatibility = 2 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "かくとう" And (Types_2(0) = "どく" Or Types_2(1) = "どく")) Then Type_Compatibility = 0.5 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "かくとう" And (Types_2(0) = "ひこう" Or Types_2(1) = "ひこう")) Then Type_Compatibility = 0.5 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "かくとう" And (Types_2(0) = "エスパー" Or Types_2(1) = "エスパー")) Then Type_Compatibility = 0.5 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "かくとう" And (Types_2(0) = "むし" Or Types_2(1) = "むし")) Then Type_Compatibility = 0.5 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "かくとう" And (Types_2(0) = "いわ" Or Types_2(1) = "いわ")) Then Type_Compatibility = 2 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "かくとう" And (Types_2(0) = "あく" Or Types_2(1) = "あく")) Then Type_Compatibility = 2 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "かくとう" And (Types_2(0) = "はがね" Or Types_2(1) = "はがね")) Then Type_Compatibility = 2 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "どく" And (Types_2(0) = "くさ" Or Types_2(1) = "くさ")) Then Type_Compatibility = 2 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "どく" And (Types_2(0) = "どく" Or Types_2(1) = "どく")) Then Type_Compatibility = 0.5 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "どく" And (Types_2(0) = "じめん" Or Types_2(1) = "じめん")) Then Type_Compatibility = 0.5 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "どく" And (Types_2(0) = "いわ" Or Types_2(1) = "いわ")) Then Type_Compatibility = 0.5 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "どく" And (Types_2(0) = "ゴースト" Or Types_2(1) = "ゴースト")) Then Type_Compatibility = 0.5 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "どく" And (Types_2(0) = "はがね" Or Types_2(1) = "はがね")) Then Type_Compatibility = 0 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "じめん" And (Types_2(0) = "ほのお" Or Types_2(1) = "ほのお")) Then Type_Compatibility = 2 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "じめん" And (Types_2(0) = "でんき" Or Types_2(1) = "でんき")) Then Type_Compatibility = 25 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "じめん" And (Types_2(0) = "くさ" Or Types_2(1) = "くさ")) Then Type_Compatibility = 0.5 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "じめん" And (Types_2(0) = "どく" Or Types_2(1) = "どく")) Then Type_Compatibility = 2 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "じめん" And Gravity_CheckBox_2.Checked = False And Item_Display_2.Text <> "くろいてっきゅう" And (Types_2(0) = "ひこう" Or Types_2(1) = "ひこう")) Then Type_Compatibility = 0 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "じめん" And (Types_2(0) = "むし" Or Types_2(1) = "むし")) Then Type_Compatibility = 0.5 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "じめん" And (Types_2(0) = "いわ" Or Types_2(1) = "いわ")) Then Type_Compatibility = 2 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "じめん" And (Types_2(0) = "はがね" Or Types_2(1) = "はがね")) Then Type_Compatibility = 2 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "ひこう" And (Types_2(0) = "でんき" Or Types_2(1) = "でんき")) Then Type_Compatibility = 0.5 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "ひこう" And (Types_2(0) = "くさ" Or Types_2(1) = "くさ")) Then Type_Compatibility = 2 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "ひこう" And (Types_2(0) = "かくとう" Or Types_2(1) = "かくとう")) Then Type_Compatibility = 2 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "ひこう" And (Types_2(0) = "むし" Or Types_2(1) = "むし")) Then Type_Compatibility = 2 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "ひこう" And (Types_2(0) = "いわ" Or Types_2(1) = "いわ")) Then Type_Compatibility = 0.5 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "ひこう" And (Types_2(0) = "はがね" Or Types_2(1) = "はがね")) Then Type_Compatibility = 0.5 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "エスパー" And (Types_2(0) = "かくとう" Or Types_2(1) = "かくとう")) Then Type_Compatibility = 2 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "エスパー" And (Types_2(0) = "どく" Or Types_2(1) = "どく")) Then Type_Compatibility = 2 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "エスパー" And (Types_2(0) = "エスパー" Or Types_2(1) = "エスパー")) Then Type_Compatibility = 0.5 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "エスパー" And (Types_2(0) = "あく" Or Types_2(1) = "あく")) Then Type_Compatibility = 0 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "エスパー" And (Types_2(0) = "はがね" Or Types_2(1) = "はがね")) Then Type_Compatibility = 0.5 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "むし" And (Types_2(0) = "ほのお" Or Types_2(1) = "ほのお")) Then Type_Compatibility = 0.5 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "むし" And (Types_2(0) = "くさ" Or Types_2(1) = "くさ")) Then Type_Compatibility = 2 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "むし" And (Types_2(0) = "かくとう" Or Types_2(1) = "かくとう")) Then Type_Compatibility = 0.5 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "むし" And (Types_2(0) = "どく" Or Types_2(1) = "どく")) Then Type_Compatibility = 0.5 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "むし" And (Types_2(0) = "ひこう" Or Types_2(1) = "ひこう")) Then Type_Compatibility = 0.5 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "むし" And (Types_2(0) = "エスパー" Or Types_2(1) = "エスパー")) Then Type_Compatibility = 2 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "むし" And (Types_2(0) = "ゴースト" Or Types_2(1) = "ゴースト")) Then Type_Compatibility = 0.5 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "むし" And (Types_2(0) = "あく" Or Types_2(1) = "あく")) Then Type_Compatibility = 2 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "むし" And (Types_2(0) = "はがね" Or Types_2(1) = "はがね")) Then Type_Compatibility = 0.5 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "いわ" And (Types_2(0) = "ほのお" Or Types_2(1) = "ほのお")) Then Type_Compatibility = 2 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "いわ" And (Types_2(0) = "こおり" Or Types_2(1) = "こおり")) Then Type_Compatibility = 2 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "いわ" And (Types_2(0) = "かくとう" Or Types_2(1) = "かくとう")) Then Type_Compatibility = 0.5 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "いわ" And (Types_2(0) = "じめん" Or Types_2(1) = "じめん")) Then Type_Compatibility = 0.5 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "いわ" And (Types_2(0) = "ひこう" Or Types_2(1) = "ひこう")) Then Type_Compatibility = 2 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "いわ" And (Types_2(0) = "むし" Or Types_2(1) = "むし")) Then Type_Compatibility = 2 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "いわ" And (Types_2(0) = "はがね" Or Types_2(1) = "はがね")) Then Type_Compatibility = 0.5 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "ゴースト" And (Types_2(0) = "ノーマル" Or Types_2(1) = "ノーマル")) Then Type_Compatibility = 0 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "ゴースト" And (Types_2(0) = "エスパー" Or Types_2(1) = "エスパー")) Then Type_Compatibility = 2 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "ゴースト" And (Types_2(0) = "ゴースト" Or Types_2(1) = "ゴースト")) Then Type_Compatibility = 0.5 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "ゴースト" And (Types_2(0) = "あく" Or Types_2(1) = "あく")) Then Type_Compatibility = 0.5 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "ゴースト" And (Types_2(0) = "はがね" Or Types_2(1) = "はがね")) Then Type_Compatibility = 0.5 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "ドラゴン" And (Types_2(0) = "ドラゴン" Or Types_2(1) = "ドラゴン")) Then Type_Compatibility = 2 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "ドラゴン" And (Types_2(0) = "はがね" Or Types_2(1) = "はがね")) Then Type_Compatibility = 0.5 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "あく" And (Types_2(0) = "かくとう" Or Types_2(1) = "かくとう")) Then Type_Compatibility = 0.5 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "あく" And (Types_2(0) = "エスパー" Or Types_2(1) = "エスパー")) Then Type_Compatibility = 2 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "あく" And (Types_2(0) = "ゴースト" Or Types_2(1) = "ゴースト")) Then Type_Compatibility = 2 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "あく" And (Types_2(0) = "あく" Or Types_2(1) = "あく")) Then Type_Compatibility = 0.5 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "あく" And (Types_2(0) = "はがね" Or Types_2(1) = "はがね")) Then Type_Compatibility = 0.5 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "はがね" And (Types_2(0) = "ほのお" Or Types_2(1) = "ほのお")) Then Type_Compatibility = 0.5 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "はがね" And (Types_2(0) = "みず" Or Types_2(1) = "みず")) Then Type_Compatibility = 0.5 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "はがね" And (Types_2(0) = "でんき" Or Types_2(1) = "でんき")) Then Type_Compatibility = 0.5 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "はがね" And (Types_2(0) = "こおり" Or Types_2(1) = "こおり")) Then Type_Compatibility = 2 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "はがね" And (Types_2(0) = "いわ" Or Types_2(1) = "いわ")) Then Type_Compatibility = 2 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "はがね" And (Types_2(0) = "はがね" Or Types_2(1) = "はがね")) Then Type_Compatibility = 0.5 : Tcc()

            If (Ability_Display_1.Text = "きもったま" Or Foresight_CheckBox_2.Checked = True) Then GoTo Skip
            If (Move_Type(Calced_Type_Compatibility_Count) = "ノーマル" And (Types_2(0) = "ゴースト" Or Types_2(1) = "ゴースト")) Then Type_Compatibility = 0 : Tcc()
            If (Move_Type(Calced_Type_Compatibility_Count) = "かくとう" And (Types_2(0) = "ゴースト" Or Types_2(1) = "ゴースト")) Then Type_Compatibility = 0 : Tcc()
Skip:

            If (Type_Compatibility_Chk = 0) Then
                Type_Compatibility_1 = 1
                Type_Compatibility_Chk = 1
            End If
            If (Type_Compatibility_Chk = 1) Then
                Type_Compatibility_2 = 1
            End If

            Calced_Type_Compatibility(Calced_Type_Compatibility_Count, 0) = Type_Compatibility_1
            Calced_Type_Compatibility(Calced_Type_Compatibility_Count, 1) = Type_Compatibility_2

        Next

        If (Name_2.Text = "ヌケニン" And Calced_Type_Compatibility(0, 0) * Calced_Type_Compatibility(0, 1) <= 1 And Move_Input_1.Text <> "わるあがき" And Move_Input_1.Text <> "みらいよち" And Move_Input_1.Text <> "はめつのねがい") Then
            Calced_Type_Compatibility(0, 0) = 0
            Calced_Type_Compatibility(0, 1) = 0
        End If

        If (Name_2.Text = "ヌケニン" And Calced_Type_Compatibility(1, 0) * Calced_Type_Compatibility(1, 1) <= 1 And Move_Input_2.Text <> "わるあがき" And Move_Input_2.Text <> "みらいよち" And Move_Input_2.Text <> "はめつのねがい") Then
            Calced_Type_Compatibility(1, 0) = 0
            Calced_Type_Compatibility(1, 1) = 0
        End If

        If (Name_2.Text = "ヌケニン" And Calced_Type_Compatibility(2, 0) * Calced_Type_Compatibility(2, 1) <= 1 And Move_Input_3.Text <> "わるあがき" And Move_Input_3.Text <> "みらいよち" And Move_Input_3.Text <> "はめつのねがい") Then
            Calced_Type_Compatibility(2, 0) = 0
            Calced_Type_Compatibility(2, 1) = 0
        End If

        If (Name_2.Text = "ヌケニン" And Calced_Type_Compatibility(3, 0) * Calced_Type_Compatibility(3, 1) <= 1 And Move_Input_4.Text <> "わるあがき" And Move_Input_4.Text <> "みらいよち" And Move_Input_4.Text <> "はめつのねがい") Then
            Calced_Type_Compatibility(3, 0) = 0
            Calced_Type_Compatibility(3, 1) = 0
        End If


        If (Move_Input_1.Text = "わるあがき" Or Move_Input_1.Text = "みらいよち" Or Move_Input_1.Text = "はめつのねがい") Then Calced_Type_Compatibility(0, 0) = 1 : Calced_Type_Compatibility(0, 1) = 1
        If (Move_Input_2.Text = "わるあがき" Or Move_Input_2.Text = "みらいよち" Or Move_Input_2.Text = "はめつのねがい") Then Calced_Type_Compatibility(1, 0) = 1 : Calced_Type_Compatibility(1, 1) = 1
        If (Move_Input_3.Text = "わるあがき" Or Move_Input_3.Text = "みらいよち" Or Move_Input_3.Text = "はめつのねがい") Then Calced_Type_Compatibility(2, 0) = 1 : Calced_Type_Compatibility(2, 1) = 1
        If (Move_Input_4.Text = "わるあがき" Or Move_Input_4.Text = "みらいよち" Or Move_Input_4.Text = "はめつのねがい") Then Calced_Type_Compatibility(3, 0) = 1 : Calced_Type_Compatibility(3, 1) = 1
        If (Type_Display.Text = "無性別") Then Calced_Type_Compatibility(4, 0) = 1 : Calced_Type_Compatibility(4, 1) = 1


        '--------------------------------------------------------------------------------

        'Section3 #[Sp]Atk [The Attack and Special Attack stats and their Modifiers]

        '--------------------------------------------------------------------------------

        Atk_A = {RSs_Input_A_1.Text, RSs_Input_A_1.Text, RSs_Input_A_1.Text, RSs_Input_A_1.Text, RSs_Input_A_1.Text}
        Atk_A_Critical = RSs_Input_A_1.Text
        Atk_C = {RSs_Input_C_1.Text, RSs_Input_C_1.Text, RSs_Input_C_1.Text, RSs_Input_C_1.Text, RSs_Input_C_1.Text}
        Atk_C_Critical = RSs_Input_C_1.Text

        Atk_A_C = {1, 1}

        '攻撃ランク補正
        If (Rank_A_1.SelectedIndex = 0) Then Atk_A(0) = Math.Floor(Atk_A(0) * 8 / 2) : Atk_A_Critical = Math.Floor(Atk_A_Critical * 8 / 2) : Atk_A_C(0) *= 8 / 2
        If (Rank_A_1.SelectedIndex = 1) Then Atk_A(0) = Math.Floor(Atk_A(0) * 7 / 2) : Atk_A_Critical = Math.Floor(Atk_A_Critical * 7 / 2) : Atk_A_C(0) *= 7 / 2
        If (Rank_A_1.SelectedIndex = 2) Then Atk_A(0) = Math.Floor(Atk_A(0) * 6 / 2) : Atk_A_Critical = Math.Floor(Atk_A_Critical * 6 / 2) : Atk_A_C(0) *= 6 / 2
        If (Rank_A_1.SelectedIndex = 3) Then Atk_A(0) = Math.Floor(Atk_A(0) * 5 / 2) : Atk_A_Critical = Math.Floor(Atk_A_Critical * 5 / 2) : Atk_A_C(0) *= 5 / 2
        If (Rank_A_1.SelectedIndex = 4) Then Atk_A(0) = Math.Floor(Atk_A(0) * 4 / 2) : Atk_A_Critical = Math.Floor(Atk_A_Critical * 4 / 2) : Atk_A_C(0) *= 4 / 2
        If (Rank_A_1.SelectedIndex = 5) Then Atk_A(0) = Math.Floor(Atk_A(0) * 3 / 2) : Atk_A_Critical = Math.Floor(Atk_A_Critical * 3 / 2) : Atk_A_C(0) *= 3 / 2
        If (Rank_A_1.SelectedIndex = 7) Then Atk_A(0) = Math.Floor(Atk_A(0) * 2 / 3) : If (Critical_CheckBox_1.Checked = False) Then Atk_A_C(0) *= 2 / 3
        If (Rank_A_1.SelectedIndex = 8) Then Atk_A(0) = Math.Floor(Atk_A(0) * 2 / 4) : If (Critical_CheckBox_1.Checked = False) Then Atk_A_C(0) *= 2 / 4
        If (Rank_A_1.SelectedIndex = 9) Then Atk_A(0) = Math.Floor(Atk_A(0) * 2 / 5) : If (Critical_CheckBox_1.Checked = False) Then Atk_A_C(0) *= 2 / 5
        If (Rank_A_1.SelectedIndex = 10) Then Atk_A(0) = Math.Floor(Atk_A(0) * 2 / 6) : If (Critical_CheckBox_1.Checked = False) Then Atk_A_C(0) *= 2 / 6
        If (Rank_A_1.SelectedIndex = 11) Then Atk_A(0) = Math.Floor(Atk_A(0) * 2 / 7) : If (Critical_CheckBox_1.Checked = False) Then Atk_A_C(0) *= 2 / 7
        If (Rank_A_1.SelectedIndex = 12) Then Atk_A(0) = Math.Floor(Atk_A(0) * 2 / 8) : If (Critical_CheckBox_1.Checked = False) Then Atk_A_C(0) *= 2 / 8

        '特攻ランク補正
        If (Rank_C_1.SelectedIndex = 0) Then Atk_C(0) = Math.Floor(Atk_C(0) * 8 / 2) : Atk_C_Critical = Math.Floor(Atk_C_Critical * 8 / 2) : Atk_A_C(1) *= 8 / 2
        If (Rank_C_1.SelectedIndex = 1) Then Atk_C(0) = Math.Floor(Atk_C(0) * 7 / 2) : Atk_C_Critical = Math.Floor(Atk_C_Critical * 7 / 2) : Atk_A_C(1) *= 7 / 2
        If (Rank_C_1.SelectedIndex = 2) Then Atk_C(0) = Math.Floor(Atk_C(0) * 6 / 2) : Atk_C_Critical = Math.Floor(Atk_C_Critical * 6 / 2) : Atk_A_C(1) *= 6 / 2
        If (Rank_C_1.SelectedIndex = 3) Then Atk_C(0) = Math.Floor(Atk_C(0) * 5 / 2) : Atk_C_Critical = Math.Floor(Atk_C_Critical * 5 / 2) : Atk_A_C(1) *= 5 / 2
        If (Rank_C_1.SelectedIndex = 4) Then Atk_C(0) = Math.Floor(Atk_C(0) * 4 / 2) : Atk_C_Critical = Math.Floor(Atk_C_Critical * 4 / 2) : Atk_A_C(1) *= 4 / 2
        If (Rank_C_1.SelectedIndex = 5) Then Atk_C(0) = Math.Floor(Atk_C(0) * 3 / 2) : Atk_C_Critical = Math.Floor(Atk_C_Critical * 3 / 2) : Atk_A_C(1) *= 3 / 2
        If (Rank_C_1.SelectedIndex = 7) Then Atk_C(0) = Math.Floor(Atk_C(0) * 2 / 3) : If (Critical_CheckBox_1.Checked = False) Then Atk_A_C(1) *= 2 / 3
        If (Rank_C_1.SelectedIndex = 8) Then Atk_C(0) = Math.Floor(Atk_C(0) * 2 / 4) : If (Critical_CheckBox_1.Checked = False) Then Atk_A_C(1) *= 2 / 4
        If (Rank_C_1.SelectedIndex = 9) Then Atk_C(0) = Math.Floor(Atk_C(0) * 2 / 5) : If (Critical_CheckBox_1.Checked = False) Then Atk_A_C(1) *= 2 / 5
        If (Rank_C_1.SelectedIndex = 10) Then Atk_C(0) = Math.Floor(Atk_C(0) * 2 / 6) : If (Critical_CheckBox_1.Checked = False) Then Atk_A_C(1) *= 2 / 6
        If (Rank_C_1.SelectedIndex = 11) Then Atk_C(0) = Math.Floor(Atk_C(0) * 2 / 7) : If (Critical_CheckBox_1.Checked = False) Then Atk_A_C(1) *= 2 / 7
        If (Rank_C_1.SelectedIndex = 12) Then Atk_C(0) = Math.Floor(Atk_C(0) * 2 / 8) : If (Critical_CheckBox_1.Checked = False) Then Atk_A_C(1) *= 2 / 8

        'ヨガパワー補正 #Pure Power
        If (Ability_Display_1.Text = "ヨガパワー") Then
            Atk_A(0) = Math.Floor(Atk_A(0) * 2)
            Atk_A_Critical = Math.Floor(Atk_A_Critical * 2)
            Atk_A_C(0) *= 2
        End If

        'ちからもち補正 #Huge Power
        If (Ability_Display_1.Text = "ちからもち") Then
            Atk_A(0) = Math.Floor(Atk_A(0) * 2)
            Atk_A_Critical = Math.Floor(Atk_A_Critical * 2)
            Atk_A_C(0) *= 2
        End If

        'フラワーギフト補正 #Flower Gift
        If (Ability_Display_1.Text = "フラワーギフト" And Weather_Display.Text = "はれ") Then
            Atk_A(0) = Math.Floor(Atk_A(0) * 1.5)
            Atk_A_Critical = Math.Floor(Atk_A_Critical * 1.5)
            Atk_A_C(0) *= 1.5
        End If

        'こんじょう補正 #Guts
        If (Ability_Display_1.Text = "こんじょう") Then
            Atk_A(0) = Math.Floor(Atk_A(0) * 1.5)
            Atk_A_Critical = Math.Floor(Atk_A_Critical * 1.5)
            Atk_A_C(0) *= 1.5
        End If

        'はりきり補正 #Hustle
        If (Ability_Display_1.Text = "はりきり") Then
            Atk_A(0) = Math.Floor(Atk_A(0) * 1.5)
            Atk_A_Critical = Math.Floor(Atk_A_Critical * 1.5)
            Atk_A_C(0) *= 1.5
        End If

        'スロースタート補正 #Slow Start
        If (Ability_Display_1.Text = "スロースタート") Then
            Atk_A(0) = Math.Floor(Atk_A(0) * 0.5)
            Atk_A_Critical = Math.Floor(Atk_A_Critical * 0.5)
            Atk_A_C(0) *= 0.5
        End If

        'プラス補正 #Plus
        If (Ability_Display_1.Text = "プラス") Then
            Atk_C(0) = Math.Floor(Atk_C(0) * 1.5)
            Atk_C_Critical = Math.Floor(Atk_C_Critical * 1.5)
            Atk_A_C(1) *= 1.5
        End If

        'マイナス補正 #Minus
        If (Ability_Display_1.Text = "マイナス") Then
            Atk_C(0) = Math.Floor(Atk_C(0) * 1.5)
            Atk_C_Critical = Math.Floor(Atk_C_Critical * 1.5)
            Atk_A_C(1) *= 1.5
        End If

        'サンパワー補正 #Solar Power
        If (Ability_Display_1.Text = "サンパワー" And Weather_Display.Text = "はれ") Then
            Atk_C(0) = Math.Floor(Atk_C(0) * 1.5)
            Atk_C_Critical = Math.Floor(Atk_C_Critical * 1.5)
            Atk_A_C(1) *= 1.5
        End If

        'こだわりハチマキ補正 #Choice Band
        If (Item_Display_1.Text = "こだわりハチマキ") Then
            Atk_A(0) = Math.Floor(Atk_A(0) * 1.5)
            Atk_A_Critical = Math.Floor(Atk_A_Critical * 1.5)
            Atk_A_C(0) *= 1.5
        End If

        'でんきだま補正 #Light Ball
        If (Item_Display_1.Text = "でんきだま" And Name_1.Text = "ピカチュウ") Then
            Atk_A(0) = Math.Floor(Atk_A(0) * 2)
            Atk_A_Critical = Math.Floor(Atk_A_Critical * 2)
            Atk_C(0) = Math.Floor(Atk_C(0) * 2)
            Atk_C_Critical = Math.Floor(Atk_C_Critical * 2)
            Atk_A_C(0) *= 2 : Atk_A_C(1) *= 2
        End If

        'ふといホネ補正 #Thick Club
        If (Item_Display_1.Text = "ふといホネ" And (Name_1.Text = "カラカラ" Or Name_1.Text = "ガラガラ")) Then
            Atk_A(0) = Math.Floor(Atk_A(0) * 2)
            Atk_A_Critical = Math.Floor(Atk_A_Critical * 2)
            Atk_A_C(0) *= 2
        End If

        'こだわりメガネ補正 #Choice Specs
        If (Item_Display_1.Text = "こだわりメガネ") Then
            Atk_C(0) = Math.Floor(Atk_C(0) * 1.5)
            Atk_C_Critical = Math.Floor(Atk_C_Critical * 1.5)
            Atk_A_C(1) *= 1.5
        End If

        'こころのしずく補正 #Soul Dew
        If (Item_Display_1.Text = "こころのしずく" And (Name_1.Text = "ラティアス" Or Name_1.Text = "ラティオス")) Then
            Atk_C(0) = Math.Floor(Atk_C(0) * 1.5)
            Atk_C_Critical = Math.Floor(Atk_C_Critical * 1.5)
            Atk_A_C(1) *= 1.5
        End If

        'しんかいのキバ補正 #Deepseatooth
        If (Item_Display_1.Text = "しんかいのキバ" And Name_1.Text = "パールル") Then
            Atk_C(0) = Math.Floor(Atk_C(0) * 2)
            Atk_C_Critical = Math.Floor(Atk_C_Critical * 2)
            Atk_A_C(1) *= 1.5
        End If

        Atk_A(1) = Atk_A(0) : Atk_A(2) = Atk_A(0) : Atk_A(3) = Atk_A(0) : Atk_A(4) = Atk_A(0)
        Atk_C(1) = Atk_C(0) : Atk_C(2) = Atk_C(0) : Atk_C(3) = Atk_C(0) : Atk_C(4) = Atk_C(0)

        '--------------------------------------------------------------------------------

        'Section4 #[Sp]Def [The Defense and Special Defense stats and their Modifiers]

        '--------------------------------------------------------------------------------

        Def_B = {RSs_Input_B_2.Text, RSs_Input_B_2.Text, RSs_Input_B_2.Text, RSs_Input_B_2.Text, RSs_Input_B_2.Text}
        Def_B_Critical = {RSs_Input_B_2.Text, RSs_Input_B_2.Text, RSs_Input_B_2.Text, RSs_Input_B_2.Text, RSs_Input_B_2.Text}
        Def_D = {RSs_Input_D_2.Text, RSs_Input_D_2.Text, RSs_Input_D_2.Text, RSs_Input_D_2.Text, RSs_Input_D_2.Text}
        Def_D_Critical = {RSs_Input_D_2.Text, RSs_Input_D_2.Text, RSs_Input_D_2.Text, RSs_Input_D_2.Text, RSs_Input_D_2.Text}

        Def_B_D = {1, 1}

        '防御ランク補正
        If (Rank_B_2.SelectedIndex = 0) Then Def_B(0) = Math.Floor(Def_B(0) * 8 / 2) : If (Critical_CheckBox_1.Checked = False) Then Def_B_D(0) *= 8 / 2
        If (Rank_B_2.SelectedIndex = 1) Then Def_B(0) = Math.Floor(Def_B(0) * 7 / 2) : If (Critical_CheckBox_1.Checked = False) Then Def_B_D(0) *= 7 / 2
        If (Rank_B_2.SelectedIndex = 2) Then Def_B(0) = Math.Floor(Def_B(0) * 6 / 2) : If (Critical_CheckBox_1.Checked = False) Then Def_B_D(0) *= 6 / 2
        If (Rank_B_2.SelectedIndex = 3) Then Def_B(0) = Math.Floor(Def_B(0) * 5 / 2) : If (Critical_CheckBox_1.Checked = False) Then Def_B_D(0) *= 5 / 2
        If (Rank_B_2.SelectedIndex = 4) Then Def_B(0) = Math.Floor(Def_B(0) * 4 / 2) : If (Critical_CheckBox_1.Checked = False) Then Def_B_D(0) *= 4 / 2
        If (Rank_B_2.SelectedIndex = 5) Then Def_B(0) = Math.Floor(Def_B(0) * 3 / 2) : If (Critical_CheckBox_1.Checked = False) Then Def_B_D(0) *= 3 / 2
        If (Rank_B_2.SelectedIndex = 7) Then Def_B(0) = Math.Floor(Def_B(0) * 2 / 3) : Def_B_Critical(0) = Def_B(0) : Def_B_D(0) *= 2 / 3
        If (Rank_B_2.SelectedIndex = 8) Then Def_B(0) = Math.Floor(Def_B(0) * 2 / 4) : Def_B_Critical(0) = Def_B(0) : Def_B_D(0) *= 2 / 4
        If (Rank_B_2.SelectedIndex = 9) Then Def_B(0) = Math.Floor(Def_B(0) * 2 / 5) : Def_B_Critical(0) = Def_B(0) : Def_B_D(0) *= 2 / 5
        If (Rank_B_2.SelectedIndex = 10) Then Def_B(0) = Math.Floor(Def_B(0) * 2 / 6) : Def_B_Critical(0) = Def_B(0) : Def_B_D(0) *= 2 / 6
        If (Rank_B_2.SelectedIndex = 11) Then Def_B(0) = Math.Floor(Def_B(0) * 2 / 7) : Def_B_Critical(0) = Def_B(0) : Def_B_D(0) *= 2 / 7
        If (Rank_B_2.SelectedIndex = 12) Then Def_B(0) = Math.Floor(Def_B(0) * 2 / 8) : Def_B_Critical(0) = Def_B(0) : Def_B_D(0) *= 2 / 8
        Def_B(1) = Def_B(0) : Def_B(2) = Def_B(0) : Def_B(3) = Def_B(0) : Def_B(4) = Def_B(0)
        Def_B_Critical(1) = Def_B_Critical(0) : Def_B_Critical(2) = Def_B_Critical(0) : Def_B_Critical(3) = Def_B_Critical(0) : Def_B_Critical(4) = Def_B_Critical(0)

        '特防ランク補正
        If (Rank_D_2.SelectedIndex = 0) Then Def_D(0) = Math.Floor(Def_D(0) * 8 / 2) : If (Critical_CheckBox_1.Checked = False) Then Def_B_D(1) *= 8 / 2
        If (Rank_D_2.SelectedIndex = 1) Then Def_D(0) = Math.Floor(Def_D(0) * 7 / 2) : If (Critical_CheckBox_1.Checked = False) Then Def_B_D(1) *= 7 / 2
        If (Rank_D_2.SelectedIndex = 2) Then Def_D(0) = Math.Floor(Def_D(0) * 6 / 2) : If (Critical_CheckBox_1.Checked = False) Then Def_B_D(1) *= 6 / 2
        If (Rank_D_2.SelectedIndex = 3) Then Def_D(0) = Math.Floor(Def_D(0) * 5 / 2) : If (Critical_CheckBox_1.Checked = False) Then Def_B_D(1) *= 5 / 2
        If (Rank_D_2.SelectedIndex = 4) Then Def_D(0) = Math.Floor(Def_D(0) * 4 / 2) : If (Critical_CheckBox_1.Checked = False) Then Def_B_D(1) *= 4 / 2
        If (Rank_D_2.SelectedIndex = 5) Then Def_D(0) = Math.Floor(Def_D(0) * 3 / 2) : If (Critical_CheckBox_1.Checked = False) Then Def_B_D(1) *= 3 / 2
        If (Rank_D_2.SelectedIndex = 7) Then Def_D(0) = Math.Floor(Def_D(0) * 2 / 3) : Def_D_Critical(0) = Def_D(0) : Def_B_D(1) *= 2 / 3
        If (Rank_D_2.SelectedIndex = 8) Then Def_D(0) = Math.Floor(Def_D(0) * 2 / 4) : Def_D_Critical(0) = Def_D(0) : Def_B_D(1) *= 2 / 4
        If (Rank_D_2.SelectedIndex = 9) Then Def_D(0) = Math.Floor(Def_D(0) * 2 / 5) : Def_D_Critical(0) = Def_D(0) : Def_B_D(1) *= 2 / 5
        If (Rank_D_2.SelectedIndex = 10) Then Def_D(0) = Math.Floor(Def_D(0) * 2 / 6) : Def_D_Critical(0) = Def_D(0) : Def_B_D(1) *= 2 / 6
        If (Rank_D_2.SelectedIndex = 11) Then Def_D(0) = Math.Floor(Def_D(0) * 2 / 7) : Def_D_Critical(0) = Def_D(0) : Def_B_D(1) *= 2 / 7
        If (Rank_D_2.SelectedIndex = 12) Then Def_D(0) = Math.Floor(Def_D(0) * 2 / 8) : Def_D_Critical(0) = Def_D(0) : Def_B_D(1) *= 2 / 8
        Def_D(1) = Def_D(0) : Def_D(2) = Def_D(0) : Def_D(3) = Def_D(0) : Def_D(4) = Def_D(0)
        Def_D_Critical(1) = Def_D_Critical(0) : Def_D_Critical(2) = Def_D_Critical(0) : Def_D_Critical(3) = Def_D_Critical(0) : Def_D_Critical(4) = Def_D_Critical(0)

        'だいばくはつ補正 / じばく補正 #SelfDestruct / #Explosion
        If (Move_Input_1.Text = "だいばくはつ" Or Move_Input_1.Text = "じばく") Then
            Def_B(0) = Math.Floor(Def_B(0) * 0.5)
            Def_B_Critical(0) = Math.Floor(Def_B_Critical(0) * 0.5)
            Def_B_D(0) *= 0.5
        End If
        If (Move_Input_2.Text = "だいばくはつ" Or Move_Input_2.Text = "じばく") Then
            Def_B(1) = Math.Floor(Def_B(1) * 0.5)
            Def_B_Critical(1) = Math.Floor(Def_B_Critical(1) * 0.5)
            Def_B_D(0) *= 0.5
        End If
        If (Move_Input_3.Text = "だいばくはつ" Or Move_Input_3.Text = "じばく") Then
            Def_B(2) = Math.Floor(Def_B(2) * 0.5)
            Def_B_Critical(2) = Math.Floor(Def_B_Critical(2) * 0.5)
            Def_B_D(0) *= 0.5
        End If
        If (Move_Input_4.Text = "だいばくはつ" Or Move_Input_4.Text = "じばく") Then
            Def_B(3) = Math.Floor(Def_B(3) * 0.5)
            Def_B_Critical(3) = Math.Floor(Def_B_Critical(3) * 0.5)
            Def_B_D(0) *= 0.5
        End If

        'メタルパウダー #Metal Powder
        For N = 0 To 4
            If (Item_Display_2.Text = "メタルパウダー" And Name_2.Text = "メタモン") Then
                Def_B(N) = Math.Floor(Def_B(N) * 2)
                Def_B_Critical(N) = Math.Floor(Def_B_Critical(N) * 2)
                Def_D(N) = Math.Floor(Def_D(N) * 2)
                Def_D_Critical(N) = Math.Floor(Def_D_Critical(N) * 2)
                If (N = 0) Then Def_B_D(0) *= 2 : Def_B_D(1) *= 2
            End If
        Next

        'ふしぎなうろこ補正 #Marval Scale
        For N = 0 To 4
            If (Ability_Display_2.Text = "ふしぎなうろこ") Then
                Def_B(N) = Math.Floor(Def_B(N) * 1.5)
                Def_B_Critical(N) = Math.Floor(Def_B_Critical(N) * 1.5)
                If (N = 0) Then Def_B_D(0) *= 1.5
            End If
        Next

        'すなあらし補正 #Sandstorm
        For N = 0 To 4
            If (Weather_Display.Text = "すなあらし" And (Types_2(0) = "いわ" Or Types_2(1) = "いわ")) Then
                Def_D(N) = Math.Floor(Def_D(N) * 1.5)
                Def_D_Critical(N) = Math.Floor(Def_D_Critical(N) * 1.5)
                If (N = 0) Then Def_B_D(1) *= 1.5
            End If
        Next

        'こころのしずく補正 #Soul Dew
        For N = 0 To 4
            If (Item_Display_2.Text = "こころのしずく" And (Name_2.Text = "ラティアス" Or Name_2.Text = "ラティオス")) Then
                Def_D(N) = Math.Floor(Def_D(N) * 1.5)
                Def_D_Critical(N) = Math.Floor(Def_D_Critical(N) * 1.5)
                If (N = 0) Then Def_B_D(1) *= 1.5
            End If
        Next

        'しんかいのウロコ #Deepseascale
        For N = 0 To 4
            If (Item_Display_2.Text = "しんかいのウロコ" And Name_2.Text = "パールル") Then
                Def_D(N) = Math.Floor(Def_D(N) * 2)
                Def_D_Critical(N) = Math.Floor(Def_D_Critical(N) * 2)
                If (N = 0) Then Def_B_D(1) *= 2
            End If
        Next

        'フラワーギフト補正 #Flower Gift
        For N = 0 To 4
            If (Ability_Display_2.Text = "フラワーギフト" And Weather_Display.Text = "はれ") Then
                Def_D(N) = Math.Floor(Def_D(N) * 1.5)
                Def_D_Critical(N) = Math.Floor(Def_D_Critical(N) * 1.5)
                If (N = 0) Then Def_B_D(1) *= 1.5
            End If
        Next


        '--------------------------------------------------------------------------------

        'Section5 #Mod1 [The First Modifier to the Damage Formula]

        '--------------------------------------------------------------------------------

        Mod1 = {1, 1, 1, 1, 1}


        'ソーラービーム補正 #Solar Beam
        If (Move_Input_1.Text = "ソーラービーム" And (Weather_Display.Text = "あめ" Or Weather_Display.Text = "すなあらし" Or Weather_Display.Text = "あられ" Or Weather_Display.Text = "きり")) Then Mod1(0) *= 0.5
        If (Move_Input_2.Text = "ソーラービーム" And (Weather_Display.Text = "あめ" Or Weather_Display.Text = "すなあらし" Or Weather_Display.Text = "あられ" Or Weather_Display.Text = "きり")) Then Mod1(1) *= 0.5
        If (Move_Input_3.Text = "ソーラービーム" And (Weather_Display.Text = "あめ" Or Weather_Display.Text = "すなあらし" Or Weather_Display.Text = "あられ" Or Weather_Display.Text = "きり")) Then Mod1(2) *= 0.5
        If (Move_Input_4.Text = "ソーラービーム" And (Weather_Display.Text = "あめ" Or Weather_Display.Text = "すなあらし" Or Weather_Display.Text = "あられ" Or Weather_Display.Text = "きり")) Then Mod1(3) *= 0.5

        'やけど補正 #BRN
        If (Burn_CheckBox_1.Checked = True And Move_Data(Array.IndexOf(Move_Data, Move_Input_1.Text) + 3) = 0 And Move_Input_1.Text <> "からげんき*2" And Ability_Display_1.Text <> "こんじょう") Then Mod1(0) *= 0.5
        If (Burn_CheckBox_1.Checked = True And Move_Data(Array.IndexOf(Move_Data, Move_Input_2.Text) + 3) = 0 And Move_Input_2.Text <> "からげんき*2" And Ability_Display_1.Text <> "こんじょう") Then Mod1(1) *= 0.5
        If (Burn_CheckBox_1.Checked = True And Move_Data(Array.IndexOf(Move_Data, Move_Input_3.Text) + 3) = 0 And Move_Input_3.Text <> "からげんき*2" And Ability_Display_1.Text <> "こんじょう") Then Mod1(2) *= 0.5
        If (Burn_CheckBox_1.Checked = True And Move_Data(Array.IndexOf(Move_Data, Move_Input_4.Text) + 3) = 0 And Move_Input_4.Text <> "からげんき*2" And Ability_Display_1.Text <> "こんじょう") Then Mod1(3) *= 0.5
        If (Burn_CheckBox_1.Checked = True And Physical_Special_Display.Text = "物理") Then Mod1(4) *= 0.5

        'リフレクター補正 #R
        If (Reflect_CheckBox_2.Checked = True And Move_Data(Array.IndexOf(Move_Data, Move_Input_1.Text) + 3) = 0) Then Mod1(0) *= 0.5
        If (Reflect_CheckBox_2.Checked = True And Move_Data(Array.IndexOf(Move_Data, Move_Input_2.Text) + 3) = 0) Then Mod1(1) *= 0.5
        If (Reflect_CheckBox_2.Checked = True And Move_Data(Array.IndexOf(Move_Data, Move_Input_3.Text) + 3) = 0) Then Mod1(2) *= 0.5
        If (Reflect_CheckBox_2.Checked = True And Move_Data(Array.IndexOf(Move_Data, Move_Input_4.Text) + 3) = 0) Then Mod1(3) *= 0.5
        If (Reflect_CheckBox_2.Checked = True And Physical_Special_Display.Text = "物理") Then Mod1(4) *= 0.5

        'ひかりのかべ補正 #L
        If (Light_Screen_CheckBox_2.Checked = True And Move_Data(Array.IndexOf(Move_Data, Move_Input_1.Text) + 3) = 1) Then Mod1(0) *= 0.5
        If (Light_Screen_CheckBox_2.Checked = True And Move_Data(Array.IndexOf(Move_Data, Move_Input_2.Text) + 3) = 1) Then Mod1(1) *= 0.5
        If (Light_Screen_CheckBox_2.Checked = True And Move_Data(Array.IndexOf(Move_Data, Move_Input_3.Text) + 3) = 1) Then Mod1(2) *= 0.5
        If (Light_Screen_CheckBox_2.Checked = True And Move_Data(Array.IndexOf(Move_Data, Move_Input_4.Text) + 3) = 1) Then Mod1(3) *= 0.5
        If (Light_Screen_CheckBox_2.Checked = True And Physical_Special_Display.Text = "特殊") Then Mod1(4) *= 0.5

        '範囲補正 #TVT
        If (Double_CheckBox_1.Checked = True) Then
            '現在、範囲技に技データが対応していない
        End If

        '天候補正 #SR
        If (Weather_Display.Text = "あめ" And Move_Type(0) = "みず") Then Mod1(0) *= 1.5
        If (Weather_Display.Text = "あめ" And Move_Type(0) = "ほのお") Then Mod1(0) *= 0.5
        If (Weather_Display.Text = "はれ" And Move_Type(0) = "みず") Then Mod1(0) *= 0.5
        If (Weather_Display.Text = "はれ" And Move_Type(0) = "ほのお") Then Mod1(0) *= 1.5

        If (Weather_Display.Text = "あめ" And Move_Type(1) = "みず") Then Mod1(1) *= 1.5
        If (Weather_Display.Text = "あめ" And Move_Type(1) = "ほのお") Then Mod1(1) *= 0.5
        If (Weather_Display.Text = "はれ" And Move_Type(1) = "みず") Then Mod1(1) *= 0.5
        If (Weather_Display.Text = "はれ" And Move_Type(1) = "ほのお") Then Mod1(1) *= 1.5

        If (Weather_Display.Text = "あめ" And Move_Type(2) = "みず") Then Mod1(2) *= 1.5
        If (Weather_Display.Text = "あめ" And Move_Type(2) = "ほのお") Then Mod1(2) *= 0.5
        If (Weather_Display.Text = "はれ" And Move_Type(2) = "みず") Then Mod1(2) *= 0.5
        If (Weather_Display.Text = "はれ" And Move_Type(2) = "ほのお") Then Mod1(2) *= 1.5

        If (Weather_Display.Text = "あめ" And Move_Type(3) = "みず") Then Mod1(3) *= 1.5
        If (Weather_Display.Text = "あめ" And Move_Type(3) = "ほのお") Then Mod1(3) *= 0.5
        If (Weather_Display.Text = "はれ" And Move_Type(3) = "みず") Then Mod1(3) *= 0.5
        If (Weather_Display.Text = "はれ" And Move_Type(3) = "ほのお") Then Mod1(3) *= 1.5

        If (Weather_Display.Text = "あめ" And Move_Type(4) = "みず") Then Mod1(4) *= 1.5
        If (Weather_Display.Text = "あめ" And Move_Type(4) = "ほのお") Then Mod1(4) *= 0.5
        If (Weather_Display.Text = "はれ" And Move_Type(4) = "みず") Then Mod1(4) *= 0.5
        If (Weather_Display.Text = "はれ" And Move_Type(4) = "ほのお") Then Mod1(4) *= 1.5

        'もらいび補正 #Flash Fire
        If (Ability_Display_1.Text = "もらいび" And Move_Data(Array.IndexOf(Move_Data, Move_Input_1.Text) + 1) = "ほのお") Then Mod1(0) *= 1.5
        If (Ability_Display_1.Text = "もらいび" And Move_Data(Array.IndexOf(Move_Data, Move_Input_2.Text) + 1) = "ほのお") Then Mod1(1) *= 1.5
        If (Ability_Display_1.Text = "もらいび" And Move_Data(Array.IndexOf(Move_Data, Move_Input_3.Text) + 1) = "ほのお") Then Mod1(2) *= 1.5
        If (Ability_Display_1.Text = "もらいび" And Move_Data(Array.IndexOf(Move_Data, Move_Input_4.Text) + 1) = "ほのお") Then Mod1(3) *= 1.5
        If (Ability_Display_1.Text = "もらいび" And Type_Display.Text = "ほのお") Then Mod1(4) *= 1.5


        '--------------------------------------------------------------------------------

        'Section6 #Mod2 [The Second Modifier to the Damage Formula]

        '--------------------------------------------------------------------------------

        '#Mod2
        Mod2 = {1, 1, 1, 1, 1}

        'いのちのたま補正 #Life Orb
        If (Item_Display_1.Text = "いのちのたま" And Move_Input_1.Text <> "みらいよち" And Move_Input_1.Text <> "はめつのねがい") Then Mod2(0) *= 1.3
        If (Item_Display_1.Text = "いのちのたま" And Move_Input_2.Text <> "みらいよち" And Move_Input_2.Text <> "はめつのねがい") Then Mod2(1) *= 1.3
        If (Item_Display_1.Text = "いのちのたま" And Move_Input_3.Text <> "みらいよち" And Move_Input_3.Text <> "はめつのねがい") Then Mod2(2) *= 1.3
        If (Item_Display_1.Text = "いのちのたま" And Move_Input_4.Text <> "みらいよち" And Move_Input_4.Text <> "はめつのねがい") Then Mod2(3) *= 1.3
        If (Item_Display_1.Text = "いのちのたま") Then Mod2(4) *= 1.3

        'メトロノーム補正 #Metronome
        For N = 0 To 4
            If (Item_Display_1.Text = "メトロノーム+2") Then Mod2(N) *= 1.1
            If (Item_Display_1.Text = "メトロノーム+3") Then Mod2(N) *= 1.2
            If (Item_Display_1.Text = "メトロノーム+4") Then Mod2(N) *= 1.3
            If (Item_Display_1.Text = "メトロノーム+5") Then Mod2(N) *= 1.4
            If (Item_Display_1.Text = "メトロノーム+6") Then Mod2(N) *= 1.5
            If (Item_Display_1.Text = "メトロノーム+7") Then Mod2(N) *= 1.6
            If (Item_Display_1.Text = "メトロノーム+8") Then Mod2(N) *= 1.7
            If (Item_Display_1.Text = "メトロノーム+9") Then Mod2(N) *= 1.8
            If (Item_Display_1.Text = "メトロノーム+10") Then Mod2(N) *= 1.9
            If (Item_Display_1.Text = "メトロノーム+11") Then Mod2(N) *= 2.0
        Next

        'さきどり補正 #Me First
        For N = 0 To 4
            If (Me_First_CheckBox_1.Checked = True) Then Mod2(N) *= 1.5
        Next


        '--------------------------------------------------------------------------------

        'Section7 #Mod3 [The Third Modifier to the Damage Formula]

        '-------------------------------------------------------------------------------

        Mod3 = {1, 1, 1, 1, 1}

        'ハードロック/フィルター補正
        For N = 0 To 4
            If (2 <= Calced_Type_Compatibility(N, 0) * Calced_Type_Compatibility(N, 1) And (Ability_Display_2.Text = "ハードロック" Or Ability_Display_2.Text = "フィルター")) Then Mod3(N) *= 0.75
        Next

        'たつじんのおび補正
        For N = 0 To 4
            If (2 <= Calced_Type_Compatibility(N, 0) * Calced_Type_Compatibility(N, 1) And (Item_Display_1.Text = "たつじんのおび")) Then Mod3(N) *= 1.2
        Next

        'いろめがね補正
        For N = 0 To 4
            If (0.5 >= Calced_Type_Compatibility(N, 0) * Calced_Type_Compatibility(N, 1) And (Ability_Display_1.Text = "いろめがね")) Then Mod3(N) *= 2
        Next

        '半減きのみ補正
        For N = 0 To 4
            If (2 <= Calced_Type_Compatibility(N, 0) * Calced_Type_Compatibility(N, 1) And (Item_Display_2.Text = "半減きのみ")) Then Mod3(N) *= 0.5
        Next


        '--------------------------------------------------------------------------------

        'Section2 (Anchor) #BasePower [The Base Power and its Modifiers]

        '--------------------------------------------------------------------------------

        '連続技のループ回数設定
        Dim C_Loop() As Integer = {1, 1, 1, 1, 1}
        Dim C_T_Loop() As Integer = {1, 1, 1, 1, 1}

        '2回
        If (Move_Input_1.Text = "つららばり2" Or Move_Input_1.Text = "ロックブラスト2" Or Move_Input_1.Text = "タネマシンガン2" Or Move_Input_1.Text = "みだれづき2" Or Move_Input_1.Text = "みだれひっかき2" Or Move_Input_1.Text = "おうふくビンタ2" Or Move_Input_1.Text = "たまなげ2" Or Move_Input_1.Text = "つっぱり2" Or Move_Input_1.Text = "れんぞくパンチ2" Or Move_Input_1.Text = "とげキャノン2" Or Move_Input_1.Text = "ミサイルばり2" Or Move_Input_1.Text = "ボーンラッシュ2" Or Move_Input_1.Text = "ダブルニードル2" Or Move_Input_1.Text = "にどげき2" Or Move_Input_1.Text = "ダブルアタック2" Or Move_Input_1.Text = "ホネブーメラン2") Then C_Loop(0) = 2
        If (Move_Input_2.Text = "つららばり2" Or Move_Input_2.Text = "ロックブラスト2" Or Move_Input_2.Text = "タネマシンガン2" Or Move_Input_2.Text = "みだれづき2" Or Move_Input_2.Text = "みだれひっかき2" Or Move_Input_2.Text = "おうふくビンタ2" Or Move_Input_2.Text = "たまなげ2" Or Move_Input_2.Text = "つっぱり2" Or Move_Input_2.Text = "れんぞくパンチ2" Or Move_Input_2.Text = "とげキャノン2" Or Move_Input_2.Text = "ミサイルばり2" Or Move_Input_2.Text = "ボーンラッシュ2" Or Move_Input_2.Text = "ダブルニードル2" Or Move_Input_2.Text = "にどげき2" Or Move_Input_2.Text = "ダブルアタック2" Or Move_Input_2.Text = "ホネブーメラン2") Then C_Loop(1) = 2
        If (Move_Input_3.Text = "つららばり2" Or Move_Input_3.Text = "ロックブラスト2" Or Move_Input_3.Text = "タネマシンガン2" Or Move_Input_3.Text = "みだれづき2" Or Move_Input_3.Text = "みだれひっかき2" Or Move_Input_3.Text = "おうふくビンタ2" Or Move_Input_3.Text = "たまなげ2" Or Move_Input_3.Text = "つっぱり2" Or Move_Input_3.Text = "れんぞくパンチ2" Or Move_Input_3.Text = "とげキャノン2" Or Move_Input_3.Text = "ミサイルばり2" Or Move_Input_3.Text = "ボーンラッシュ2" Or Move_Input_3.Text = "ダブルニードル2" Or Move_Input_3.Text = "にどげき2" Or Move_Input_3.Text = "ダブルアタック2" Or Move_Input_3.Text = "ホネブーメラン2") Then C_Loop(2) = 2
        If (Move_Input_4.Text = "つららばり2" Or Move_Input_4.Text = "ロックブラスト2" Or Move_Input_4.Text = "タネマシンガン2" Or Move_Input_4.Text = "みだれづき2" Or Move_Input_4.Text = "みだれひっかき2" Or Move_Input_4.Text = "おうふくビンタ2" Or Move_Input_4.Text = "たまなげ2" Or Move_Input_4.Text = "つっぱり2" Or Move_Input_4.Text = "れんぞくパンチ2" Or Move_Input_4.Text = "とげキャノン2" Or Move_Input_4.Text = "ミサイルばり2" Or Move_Input_4.Text = "ボーンラッシュ2" Or Move_Input_4.Text = "ダブルニードル2" Or Move_Input_4.Text = "にどげき2" Or Move_Input_4.Text = "ダブルアタック2" Or Move_Input_4.Text = "ホネブーメラン2") Then C_Loop(3) = 2

        '3回
        If (Move_Input_1.Text = "つららばり3" Or Move_Input_1.Text = "ロックブラスト3" Or Move_Input_1.Text = "タネマシンガン3" Or Move_Input_1.Text = "みだれづき3" Or Move_Input_1.Text = "みだれひっかき3" Or Move_Input_1.Text = "おうふくビンタ3" Or Move_Input_1.Text = "たまなげ3" Or Move_Input_1.Text = "つっぱり3" Or Move_Input_1.Text = "れんぞくパンチ3" Or Move_Input_1.Text = "とげキャノン3" Or Move_Input_1.Text = "ミサイルばり3" Or Move_Input_1.Text = "ボーンラッシュ3" Or Move_Input_1.Text = "ダブルニードル3" Or Move_Input_1.Text = "にどげき3" Or Move_Input_1.Text = "ダブルアタック3" Or Move_Input_1.Text = "ホネブーメラン3") Then C_Loop(0) = 3
        If (Move_Input_2.Text = "つららばり3" Or Move_Input_2.Text = "ロックブラスト3" Or Move_Input_2.Text = "タネマシンガン3" Or Move_Input_2.Text = "みだれづき3" Or Move_Input_2.Text = "みだれひっかき3" Or Move_Input_2.Text = "おうふくビンタ3" Or Move_Input_2.Text = "たまなげ3" Or Move_Input_2.Text = "つっぱり3" Or Move_Input_2.Text = "れんぞくパンチ3" Or Move_Input_2.Text = "とげキャノン3" Or Move_Input_2.Text = "ミサイルばり3" Or Move_Input_2.Text = "ボーンラッシュ3" Or Move_Input_2.Text = "ダブルニードル3" Or Move_Input_2.Text = "にどげき3" Or Move_Input_2.Text = "ダブルアタック3" Or Move_Input_2.Text = "ホネブーメラン3") Then C_Loop(1) = 3
        If (Move_Input_3.Text = "つららばり3" Or Move_Input_3.Text = "ロックブラスト3" Or Move_Input_3.Text = "タネマシンガン3" Or Move_Input_3.Text = "みだれづき3" Or Move_Input_3.Text = "みだれひっかき3" Or Move_Input_3.Text = "おうふくビンタ3" Or Move_Input_3.Text = "たまなげ3" Or Move_Input_3.Text = "つっぱり3" Or Move_Input_3.Text = "れんぞくパンチ3" Or Move_Input_3.Text = "とげキャノン3" Or Move_Input_3.Text = "ミサイルばり3" Or Move_Input_3.Text = "ボーンラッシュ3" Or Move_Input_3.Text = "ダブルニードル3" Or Move_Input_3.Text = "にどげき3" Or Move_Input_3.Text = "ダブルアタック3" Or Move_Input_3.Text = "ホネブーメラン3") Then C_Loop(2) = 3
        If (Move_Input_4.Text = "つららばり3" Or Move_Input_4.Text = "ロックブラスト3" Or Move_Input_4.Text = "タネマシンガン3" Or Move_Input_4.Text = "みだれづき2" Or Move_Input_4.Text = "みだれひっかき3" Or Move_Input_4.Text = "おうふくビンタ3" Or Move_Input_4.Text = "たまなげ3" Or Move_Input_4.Text = "つっぱり3" Or Move_Input_4.Text = "れんぞくパンチ3" Or Move_Input_4.Text = "とげキャノン3" Or Move_Input_4.Text = "ミサイルばり3" Or Move_Input_4.Text = "ボーンラッシュ3" Or Move_Input_4.Text = "ダブルニードル3" Or Move_Input_4.Text = "にどげき3" Or Move_Input_4.Text = "ダブルアタック3" Or Move_Input_4.Text = "ホネブーメラン3") Then C_Loop(3) = 3

        '4回
        If (Move_Input_1.Text = "つららばり4" Or Move_Input_1.Text = "ロックブラスト4" Or Move_Input_1.Text = "タネマシンガン4" Or Move_Input_1.Text = "みだれづき4" Or Move_Input_1.Text = "みだれひっかき4" Or Move_Input_1.Text = "おうふくビンタ4" Or Move_Input_1.Text = "たまなげ4" Or Move_Input_1.Text = "つっぱり4" Or Move_Input_1.Text = "れんぞくパンチ4" Or Move_Input_1.Text = "とげキャノン4" Or Move_Input_1.Text = "ミサイルばり4" Or Move_Input_1.Text = "ボーンラッシュ4" Or Move_Input_1.Text = "ダブルニードル4" Or Move_Input_1.Text = "にどげき4" Or Move_Input_1.Text = "ダブルアタック4" Or Move_Input_1.Text = "ホネブーメラン4") Then C_Loop(0) = 4
        If (Move_Input_2.Text = "つららばり4" Or Move_Input_2.Text = "ロックブラスト4" Or Move_Input_2.Text = "タネマシンガン4" Or Move_Input_2.Text = "みだれづき4" Or Move_Input_2.Text = "みだれひっかき4" Or Move_Input_2.Text = "おうふくビンタ4" Or Move_Input_2.Text = "たまなげ4" Or Move_Input_2.Text = "つっぱり4" Or Move_Input_2.Text = "れんぞくパンチ4" Or Move_Input_2.Text = "とげキャノン4" Or Move_Input_2.Text = "ミサイルばり4" Or Move_Input_2.Text = "ボーンラッシュ4" Or Move_Input_2.Text = "ダブルニードル4" Or Move_Input_2.Text = "にどげき4" Or Move_Input_2.Text = "ダブルアタック4" Or Move_Input_2.Text = "ホネブーメラン4") Then C_Loop(1) = 4
        If (Move_Input_3.Text = "つららばり4" Or Move_Input_3.Text = "ロックブラスト4" Or Move_Input_3.Text = "タネマシンガン4" Or Move_Input_3.Text = "みだれづき4" Or Move_Input_3.Text = "みだれひっかき4" Or Move_Input_3.Text = "おうふくビンタ4" Or Move_Input_3.Text = "たまなげ4" Or Move_Input_3.Text = "つっぱり4" Or Move_Input_3.Text = "れんぞくパンチ4" Or Move_Input_3.Text = "とげキャノン4" Or Move_Input_3.Text = "ミサイルばり4" Or Move_Input_3.Text = "ボーンラッシュ4" Or Move_Input_3.Text = "ダブルニードル4" Or Move_Input_3.Text = "にどげき4" Or Move_Input_3.Text = "ダブルアタック4" Or Move_Input_3.Text = "ホネブーメラン4") Then C_Loop(2) = 4
        If (Move_Input_4.Text = "つららばり4" Or Move_Input_4.Text = "ロックブラスト4" Or Move_Input_4.Text = "タネマシンガン4" Or Move_Input_4.Text = "みだれづき4" Or Move_Input_4.Text = "みだれひっかき4" Or Move_Input_4.Text = "おうふくビンタ4" Or Move_Input_4.Text = "たまなげ4" Or Move_Input_4.Text = "つっぱり4" Or Move_Input_4.Text = "れんぞくパンチ4" Or Move_Input_4.Text = "とげキャノン4" Or Move_Input_4.Text = "ミサイルばり4" Or Move_Input_4.Text = "ボーンラッシュ4" Or Move_Input_4.Text = "ダブルニードル4" Or Move_Input_4.Text = "にどげき4" Or Move_Input_4.Text = "ダブルアタック4" Or Move_Input_4.Text = "ホネブーメラン4") Then C_Loop(3) = 4

        '5回
        If (Move_Input_1.Text = "つららばり5" Or Move_Input_1.Text = "ロックブラスト5" Or Move_Input_1.Text = "タネマシンガン5" Or Move_Input_1.Text = "みだれづき5" Or Move_Input_1.Text = "みだれひっかき5" Or Move_Input_1.Text = "おうふくビンタ5" Or Move_Input_1.Text = "たまなげ5" Or Move_Input_1.Text = "つっぱり5" Or Move_Input_1.Text = "れんぞくパンチ5" Or Move_Input_1.Text = "とげキャノン5" Or Move_Input_1.Text = "ミサイルばり5" Or Move_Input_1.Text = "ボーンラッシュ5" Or Move_Input_1.Text = "ダブルニードル5" Or Move_Input_1.Text = "にどげき5" Or Move_Input_1.Text = "ダブルアタック5" Or Move_Input_1.Text = "ホネブーメラン5") Then C_Loop(0) = 5
        If (Move_Input_2.Text = "つららばり5" Or Move_Input_2.Text = "ロックブラスト5" Or Move_Input_2.Text = "タネマシンガン5" Or Move_Input_2.Text = "みだれづき5" Or Move_Input_2.Text = "みだれひっかき5" Or Move_Input_2.Text = "おうふくビンタ5" Or Move_Input_2.Text = "たまなげ5" Or Move_Input_2.Text = "つっぱり5" Or Move_Input_2.Text = "れんぞくパンチ5" Or Move_Input_2.Text = "とげキャノン5" Or Move_Input_2.Text = "ミサイルばり5" Or Move_Input_2.Text = "ボーンラッシュ5" Or Move_Input_2.Text = "ダブルニードル5" Or Move_Input_2.Text = "にどげき5" Or Move_Input_2.Text = "ダブルアタック5" Or Move_Input_2.Text = "ホネブーメラン5") Then C_Loop(1) = 5
        If (Move_Input_3.Text = "つららばり5" Or Move_Input_3.Text = "ロックブラスト5" Or Move_Input_3.Text = "タネマシンガン5" Or Move_Input_3.Text = "みだれづき5" Or Move_Input_3.Text = "みだれひっかき5" Or Move_Input_3.Text = "おうふくビンタ5" Or Move_Input_3.Text = "たまなげ5" Or Move_Input_3.Text = "つっぱり5" Or Move_Input_3.Text = "れんぞくパンチ5" Or Move_Input_3.Text = "とげキャノン5" Or Move_Input_3.Text = "ミサイルばり5" Or Move_Input_3.Text = "ボーンラッシュ5" Or Move_Input_3.Text = "ダブルニードル5" Or Move_Input_3.Text = "にどげき5" Or Move_Input_3.Text = "ダブルアタック5" Or Move_Input_3.Text = "ホネブーメラン5") Then C_Loop(2) = 5
        If (Move_Input_4.Text = "つららばり5" Or Move_Input_4.Text = "ロックブラスト5" Or Move_Input_4.Text = "タネマシンガン5" Or Move_Input_4.Text = "みだれづき5" Or Move_Input_4.Text = "みだれひっかき5" Or Move_Input_4.Text = "おうふくビンタ5" Or Move_Input_4.Text = "たまなげ5" Or Move_Input_4.Text = "つっぱり5" Or Move_Input_4.Text = "れんぞくパンチ5" Or Move_Input_4.Text = "とげキャノン5" Or Move_Input_4.Text = "ミサイルばり5" Or Move_Input_4.Text = "ボーンラッシュ5" Or Move_Input_4.Text = "ダブルニードル5" Or Move_Input_4.Text = "にどげき5" Or Move_Input_4.Text = "ダブルアタック5" Or Move_Input_4.Text = "ホネブーメラン5") Then C_Loop(3) = 5

        'トリプルキック
        '2回
        If (Move_Input_1.Text = "トリプルキック2") Then C_T_Loop(0) = 2
        If (Move_Input_2.Text = "トリプルキック2") Then C_T_Loop(1) = 2
        If (Move_Input_3.Text = "トリプルキック2") Then C_T_Loop(2) = 2
        If (Move_Input_4.Text = "トリプルキック2") Then C_T_Loop(3) = 2

        '3回
        If (Move_Input_1.Text = "トリプルキック3") Then C_T_Loop(0) = 3
        If (Move_Input_2.Text = "トリプルキック3") Then C_T_Loop(1) = 3
        If (Move_Input_3.Text = "トリプルキック3") Then C_T_Loop(2) = 3
        If (Move_Input_4.Text = "トリプルキック3") Then C_T_Loop(3) = 3


        '##Calculation（計算）
        If (-1 <> Array.IndexOf(Move_Data, Move_Input_1.Text)) Then Power_1.Text = Move_Data(Array.IndexOf(Move_Data, Move_Input_1.Text) + 2)
        If (-1 <> Array.IndexOf(Move_Data, Move_Input_2.Text)) Then Power_2.Text = Move_Data(Array.IndexOf(Move_Data, Move_Input_2.Text) + 2)
        If (-1 <> Array.IndexOf(Move_Data, Move_Input_3.Text)) Then Power_3.Text = Move_Data(Array.IndexOf(Move_Data, Move_Input_3.Text) + 2)
        If (-1 <> Array.IndexOf(Move_Data, Move_Input_4.Text)) Then Power_4.Text = Move_Data(Array.IndexOf(Move_Data, Move_Input_4.Text) + 2)

        '威力の変動する技
        'ジャイロボールの威力
        Dim Gyro_Ball As Integer = 1
        Gyro_Ball = Math.Floor((25 * S_2 / S_1) + 1)
        If (150 <= Gyro_Ball) Then Gyro_Ball = 150
        If (Move_Input_1.Text = "ジャイロボール") Then Power_1.Text = Gyro_Ball
        If (Move_Input_2.Text = "ジャイロボール") Then Power_2.Text = Gyro_Ball
        If (Move_Input_3.Text = "ジャイロボール") Then Power_3.Text = Gyro_Ball
        If (Move_Input_4.Text = "ジャイロボール") Then Power_4.Text = Gyro_Ball

        'おしおきの威力
        Dim Punishment As Integer = 60
        If (7 > Rank_A_1.SelectedIndex) Then Punishment += 20 * Math.Abs(Rank_A_1.SelectedIndex - 6)
        If (7 > Rank_B_1) Then Punishment += 20 * Math.Abs(Rank_B_1 - 6)
        If (7 > Rank_C_1.SelectedIndex) Then Punishment += 20 * Math.Abs(Rank_C_1.SelectedIndex - 6)
        If (7 > Rank_D_1) Then Punishment += 20 * Math.Abs(Rank_D_1 - 6)
        If (7 > Rank_S_1.SelectedIndex) Then Punishment += 20 * Math.Abs(Rank_S_1.SelectedIndex - 6)
        If (200 <= Punishment) Then Punishment = 200
        If (Move_Input_1.Text = "おしおき") Then Power_1.Text = Punishment
        If (Move_Input_2.Text = "おしおき") Then Power_2.Text = Punishment
        If (Move_Input_3.Text = "おしおき") Then Power_3.Text = Punishment
        If (Move_Input_4.Text = "おしおき") Then Power_4.Text = Punishment


        Dim Move_1_Power As Decimal = Power_1.Text
        Dim Move_2_Power As Decimal = Power_2.Text
        Dim Move_3_Power As Decimal = Power_3.Text
        Dim Move_4_Power As Decimal = Power_4.Text
        Dim Move_5_Power As Decimal = Power_Input_1.Text

        Power_C = {1, 1, 1, 1, 1}

        For L = 0 To 4
            For Ran = 0 To 15
                Damage_Formula(L, Ran) = 0
            Next
            For N = 1 To C_T_Loop(L)
                Power_C = {1, 1, 1, 1, 1}

                'トリプルキック
                '2回
                If (Move_Input_1.Text = "トリプルキック2") Then Move_1_Power = N * 10
                If (Move_Input_2.Text = "トリプルキック2") Then Move_2_Power = N * 10
                If (Move_Input_3.Text = "トリプルキック2") Then Move_3_Power = N * 10
                If (Move_Input_4.Text = "トリプルキック2") Then Move_4_Power = N * 10

                '3回
                If (Move_Input_1.Text = "トリプルキック3") Then Move_1_Power = N * 10
                If (Move_Input_2.Text = "トリプルキック3") Then Move_2_Power = N * 10
                If (Move_Input_3.Text = "トリプルキック3") Then Move_3_Power = N * 10
                If (Move_Input_4.Text = "トリプルキック3") Then Move_4_Power = N * 10

                '基本威力 #BP
                BasePower = {Move_1_Power, Move_2_Power, Move_3_Power, Move_4_Power, Move_5_Power}

                'ウェザーボール補正 (#BP)
                If (Move_Input_1.Text = "ウェザーボール" And (Weather_Display.Text = "はれ" Or Weather_Display.Text = "あめ" Or Weather_Display.Text = "すなあらし" Or Weather_Display.Text = "あられ" Or Weather_Display.Text = "きり")) Then BasePower(0) = 100
                If (Move_Input_2.Text = "ウェザーボール" And (Weather_Display.Text = "はれ" Or Weather_Display.Text = "あめ" Or Weather_Display.Text = "すなあらし" Or Weather_Display.Text = "あられ" Or Weather_Display.Text = "きり")) Then BasePower(1) = 100
                If (Move_Input_3.Text = "ウェザーボール" And (Weather_Display.Text = "はれ" Or Weather_Display.Text = "あめ" Or Weather_Display.Text = "すなあらし" Or Weather_Display.Text = "あられ" Or Weather_Display.Text = "きり")) Then BasePower(2) = 100
                If (Move_Input_4.Text = "ウェザーボール" And (Weather_Display.Text = "はれ" Or Weather_Display.Text = "あめ" Or Weather_Display.Text = "すなあらし" Or Weather_Display.Text = "あられ" Or Weather_Display.Text = "きり")) Then BasePower(3) = 100

                'てだすけ補正 #HH
                If (Helping_Hand_CheckBox_1.Checked = True) Then
                    If (Move_Input_1.Text = "みらいよち" Or Move_Input_1.Text = "はめつのねがい") Then
                        BasePower(0) = Math.Floor(BasePower(0) * 2.25)
                        Power_C(0) *= 2.25
                    ElseIf (Move_Input_1.Text <> "おいうち*2") Then
                        BasePower(0) = Math.Floor(BasePower(0) * 1.5)
                        Power_C(0) *= 1.5
                    End If

                    If (Move_Input_2.Text = "みらいよち" Or Move_Input_2.Text = "はめつのねがい") Then
                        BasePower(1) = Math.Floor(BasePower(1) * 2.25)
                        Power_C(1) *= 2.25
                    ElseIf (Move_Input_2.Text <> "おいうち*2") Then
                        BasePower(1) = Math.Floor(BasePower(1) * 1.5)
                        Power_C(1) *= 1.5
                    End If

                    If (Move_Input_3.Text = "みらいよち" Or Move_Input_3.Text = "はめつのねがい") Then
                        BasePower(2) = Math.Floor(BasePower(2) * 2.25)
                        Power_C(2) *= 2.25
                    ElseIf (Move_Input_3.Text <> "おいうち*2") Then
                        BasePower(2) = Math.Floor(BasePower(2) * 1.5)
                        Power_C(2) *= 1.5
                    End If

                    If (Move_Input_4.Text = "みらいよち" Or Move_Input_4.Text = "はめつのねがい") Then
                        BasePower(3) = Math.Floor(BasePower(3) * 2.25)
                        Power_C(3) *= 2.25
                    ElseIf (Move_Input_1.Text <> "おいうち*2") Then
                        BasePower(3) = Math.Floor(BasePower(3) * 1.5)
                        Power_C(3) *= 1.5
                    End If

                    BasePower(4) = Math.Floor(BasePower(4) * 1.5) : Power_C(4) *= 1.5
                End If

                'ちからのハチマキ補正 #Muscle Band
                If (Item_Display_1.Text = "ちからのハチマキ" And Move_Data(Array.IndexOf(Move_Data, Move_Input_1.Text) + 3) = 0) Then BasePower(0) = Math.Floor(BasePower(0) * 1.1) : Power_C(0) *= 1.1
                If (Item_Display_1.Text = "ちからのハチマキ" And Move_Data(Array.IndexOf(Move_Data, Move_Input_2.Text) + 3) = 0) Then BasePower(1) = Math.Floor(BasePower(1) * 1.1) : Power_C(1) *= 1.1
                If (Item_Display_1.Text = "ちからのハチマキ" And Move_Data(Array.IndexOf(Move_Data, Move_Input_3.Text) + 3) = 0) Then BasePower(2) = Math.Floor(BasePower(2) * 1.1) : Power_C(2) *= 1.1
                If (Item_Display_1.Text = "ちからのハチマキ" And Move_Data(Array.IndexOf(Move_Data, Move_Input_4.Text) + 3) = 0) Then BasePower(3) = Math.Floor(BasePower(3) * 1.1) : Power_C(3) *= 1.1
                If (Item_Display_1.Text = "ちからのハチマキ" And Physical_Special_Display.Text = "物理") Then BasePower(4) = Math.Floor(BasePower(4) * 1.1) : Power_C(4) *= 1.1

                'ものしりメガネ補正 #Wise Glasses0
                If (Item_Display_1.Text = "ものしりメガネ" And Move_Data(Array.IndexOf(Move_Data, Move_Input_1.Text) + 3) = 1) Then BasePower(0) = Math.Floor(BasePower(0) * 1.1) : Power_C(0) *= 1.1
                If (Item_Display_1.Text = "ものしりメガネ" And Move_Data(Array.IndexOf(Move_Data, Move_Input_2.Text) + 3) = 1) Then BasePower(1) = Math.Floor(BasePower(1) * 1.1) : Power_C(1) *= 1.1
                If (Item_Display_1.Text = "ものしりメガネ" And Move_Data(Array.IndexOf(Move_Data, Move_Input_3.Text) + 3) = 1) Then BasePower(2) = Math.Floor(BasePower(2) * 1.1) : Power_C(2) *= 1.1
                If (Item_Display_1.Text = "ものしりメガネ" And Move_Data(Array.IndexOf(Move_Data, Move_Input_4.Text) + 3) = 1) Then BasePower(3) = Math.Floor(BasePower(3) * 1.1) : Power_C(3) *= 1.1
                If (Item_Display_1.Text = "ものしりメガネ" And Physical_Special_Display.Text = "特殊") Then BasePower(4) = Math.Floor(BasePower(4) * 1.1) : Power_C(L) *= 1.1

                'タイプ強化系補正 #Type-Boosting items
                If (Item_Display_1.Text = "タイプ強化系") Then
                    BasePower(0) = Math.Floor(BasePower(0) * 1.2) : Power_C(0) *= 1.2
                    BasePower(1) = Math.Floor(BasePower(1) * 1.2) : Power_C(1) *= 1.2
                    BasePower(2) = Math.Floor(BasePower(2) * 1.2) : Power_C(2) *= 1.2
                    BasePower(3) = Math.Floor(BasePower(3) * 1.2) : Power_C(3) *= 1.2
                End If

                'タイプ強化系補正（個別）
                For I = 0 To 4
                    If (Move_Type(I) = "ノーマル" And (Item_Display_1.Text = "シルクのスカーフ" Or Item_Display_1.Text = "まっさらプレート")) Then BasePower(I) = Math.Floor(BasePower(I) * 1.2) : Power_C(I) *= 1.2
                    If (Move_Type(I) = "ほのお" And (Item_Display_1.Text = "もくたん" Or Item_Display_1.Text = "ひのたまプレート")) Then BasePower(I) = Math.Floor(BasePower(I) * 1.2) : Power_C(I) *= 1.2
                    If (Move_Type(I) = "みず" And (Item_Display_1.Text = "しんぴのしずく" Or Item_Display_1.Text = "うしおのおこう" Or Item_Display_1.Text = "さざなみのおこう" Or Item_Display_1.Text = "しずくプレート")) Then BasePower(I) = Math.Floor(BasePower(I) * 1.2) : Power_C(I) *= 1.2
                    If (Move_Type(I) = "くさ" And (Item_Display_1.Text = "きせきのタネ" Or Item_Display_1.Text = "おはなのおこう" Or Item_Display_1.Text = "みどりのプレート")) Then BasePower(I) = Math.Floor(BasePower(I) * 1.2) : Power_C(I) *= 1.2
                    If (Move_Type(I) = "でんき" And (Item_Display_1.Text = "じしゃく" Or Item_Display_1.Text = "いかずちプレート")) Then BasePower(I) = Math.Floor(BasePower(I) * 1.2) : Power_C(I) *= 1.2
                    If (Move_Type(I) = "こおり" And (Item_Display_1.Text = "とけないこおり" Or Item_Display_1.Text = "つららのプレート")) Then BasePower(I) = Math.Floor(BasePower(I) * 1.2) : Power_C(I) *= 1.2
                    If (Move_Type(I) = "かくとう" And (Item_Display_1.Text = "くろおび" Or Item_Display_1.Text = "こぶしのプレート")) Then BasePower(I) = Math.Floor(BasePower(I) * 1.2) : Power_C(I) *= 1.2
                    If (Move_Type(I) = "どく" And (Item_Display_1.Text = "どくバリ" Or Item_Display_1.Text = "もうどくプレート")) Then BasePower(I) = Math.Floor(BasePower(I) * 1.2) : Power_C(I) *= 1.2
                    If (Move_Type(I) = "じめん" And (Item_Display_1.Text = "やらわかいすな" Or Item_Display_1.Text = "だいちのプレート")) Then BasePower(I) = Math.Floor(BasePower(I) * 1.2) : Power_C(I) *= 1.2
                    If (Move_Type(I) = "ひこう" And (Item_Display_1.Text = "するどいくちばし" Or Item_Display_1.Text = "あおぞらプレート")) Then BasePower(I) = Math.Floor(BasePower(I) * 1.2) : Power_C(I) *= 1.2
                    If (Move_Type(I) = "エスパー" And (Item_Display_1.Text = "まがったスプーン" Or Item_Display_1.Text = "あやしいおこう" Or Item_Display_1.Text = "ふしぎのプレート")) Then BasePower(I) = Math.Floor(BasePower(I) * 1.2) : Power_C(I) *= 1.2
                    If (Move_Type(I) = "むし" And (Item_Display_1.Text = "ぎんのこな" Or Item_Display_1.Text = "たまむしプレート")) Then BasePower(I) = Math.Floor(BasePower(I) * 1.2) : Power_C(I) *= 1.2
                    If (Move_Type(I) = "いわ" And (Item_Display_1.Text = "かたいいし" Or Item_Display_1.Text = "がんせきおこう" Or Item_Display_1.Text = "がんせきプレート")) Then BasePower(I) = Math.Floor(BasePower(I) * 1.2) : Power_C(I) *= 1.2
                    If (Move_Type(I) = "ゴースト" And (Item_Display_1.Text = "のろいのおふだ" Or Item_Display_1.Text = "もののけプレート")) Then BasePower(I) = Math.Floor(BasePower(I) * 1.2) : Power_C(I) *= 1.2
                    If (Move_Type(I) = "ドラゴン" And (Item_Display_1.Text = "りゅうのキバ" Or Item_Display_1.Text = "りゅうのプレート")) Then BasePower(I) = Math.Floor(BasePower(I) * 1.2) : Power_C(I) *= 1.2
                    If (Move_Type(I) = "あく" And (Item_Display_1.Text = "くろいメガネ" Or Item_Display_1.Text = "こわもてプレート")) Then BasePower(I) = Math.Floor(BasePower(I) * 1.2) : Power_C(I) *= 1.2
                    If (Move_Type(I) = "はがね" And (Item_Display_1.Text = "メタルコート" Or Item_Display_1.Text = "こうてつプレート")) Then BasePower(I) = Math.Floor(BasePower(I) * 1.2) : Power_C(I) *= 1.2
                Next

                'こんごうだま補正 #Adamant Orb
                If (Item_Display_1.Text = "こんごうだま" And (Move_Type(0) = "はがね" Or Move_Type(0) = "ドラゴン")) Then BasePower(0) = Math.Floor(BasePower(0) * 1.2) : Power_C(0) *= 1.2
                If (Item_Display_1.Text = "こんごうだま" And (Move_Type(1) = "はがね" Or Move_Type(1) = "ドラゴン")) Then BasePower(1) = Math.Floor(BasePower(1) * 1.2) : Power_C(1) *= 1.2
                If (Item_Display_1.Text = "こんごうだま" And (Move_Type(2) = "はがね" Or Move_Type(2) = "ドラゴン")) Then BasePower(2) = Math.Floor(BasePower(2) * 1.2) : Power_C(2) *= 1.2
                If (Item_Display_1.Text = "こんごうだま" And (Move_Type(3) = "はがね" Or Move_Type(3) = "ドラゴン")) Then BasePower(3) = Math.Floor(BasePower(3) * 1.2) : Power_C(3) *= 1.2
                If (Item_Display_1.Text = "こんごうだま" And (Move_Type(4) = "はがね" Or Move_Type(4) = "ドラゴン")) Then BasePower(4) = Math.Floor(BasePower(4) * 1.2) : Power_C(4) *= 1.2

                'しらたま補正 #Lustrous Orb
                If (Item_Display_1.Text = "しらたま" And (Move_Type(0) = "みず" Or Move_Type(0) = "ドラゴン")) Then BasePower(0) = Math.Floor(BasePower(0) * 1.2) : Power_C(0) *= 1.2
                If (Item_Display_1.Text = "しらたま" And (Move_Type(1) = "みず" Or Move_Type(1) = "ドラゴン")) Then BasePower(1) = Math.Floor(BasePower(1) * 1.2) : Power_C(1) *= 1.2
                If (Item_Display_1.Text = "しらたま" And (Move_Type(2) = "みず" Or Move_Type(2) = "ドラゴン")) Then BasePower(2) = Math.Floor(BasePower(2) * 1.2) : Power_C(2) *= 1.2
                If (Item_Display_1.Text = "しらたま" And (Move_Type(3) = "みず" Or Move_Type(3) = "ドラゴン")) Then BasePower(3) = Math.Floor(BasePower(3) * 1.2) : Power_C(3) *= 1.2
                If (Item_Display_1.Text = "しらたま" And (Move_Type(4) = "みず" Or Move_Type(4) = "ドラゴン")) Then BasePower(4) = Math.Floor(BasePower(4) * 1.2) : Power_C(5) *= 1.2

                'はっきんだま補正 #Griseous Orb
                If (Item_Display_1.Text = "はっきんだま" And (Move_Type(0) = "ゴースト" Or Move_Type(0) = "ドラゴン")) Then BasePower(0) = Math.Floor(BasePower(0) * 1.2) : Power_C(0) *= 1.2
                If (Item_Display_1.Text = "はっきんだま" And (Move_Type(1) = "ゴースト" Or Move_Type(1) = "ドラゴン")) Then BasePower(1) = Math.Floor(BasePower(1) * 1.2) : Power_C(1) *= 1.2
                If (Item_Display_1.Text = "はっきんだま" And (Move_Type(2) = "ゴースト" Or Move_Type(2) = "ドラゴン")) Then BasePower(2) = Math.Floor(BasePower(2) * 1.2) : Power_C(2) *= 1.2
                If (Item_Display_1.Text = "はっきんだま" And (Move_Type(3) = "ゴースト" Or Move_Type(3) = "ドラゴン")) Then BasePower(3) = Math.Floor(BasePower(3) * 1.2) : Power_C(3) *= 1.2
                If (Item_Display_1.Text = "はっきんだま" And (Move_Type(4) = "ゴースト" Or Move_Type(4) = "ドラゴン")) Then BasePower(4) = Math.Floor(BasePower(4) * 1.2) : Power_C(4) *= 1.2

                'じゅうでん補正 #CHG
                If (Charge_CheckBox_1.Checked = True And Move_Type(0) = "でんき") Then BasePower(0) = Math.Floor(BasePower(0) * 2) : Power_C(0) *= 2
                If (Charge_CheckBox_1.Checked = True And Move_Type(1) = "でんき") Then BasePower(1) = Math.Floor(BasePower(1) * 2) : Power_C(1) *= 2
                If (Charge_CheckBox_1.Checked = True And Move_Type(2) = "でんき") Then BasePower(2) = Math.Floor(BasePower(2) * 2) : Power_C(2) *= 2
                If (Charge_CheckBox_1.Checked = True And Move_Type(3) = "でんき") Then BasePower(3) = Math.Floor(BasePower(3) * 2) : Power_C(3) *= 2
                If (Charge_CheckBox_1.Checked = True And Move_Type(4) = "でんき") Then BasePower(4) = Math.Floor(BasePower(4) * 2) : Power_C(4) *= 2

                'どろあそび補正 #MS
                If (Mud_Sport_CheckBox_2.Checked = True And Move_Type(0) = "でんき") Then BasePower(0) = Math.Floor(BasePower(0) * 0.5) : Power_C(0) *= 0.5
                If (Mud_Sport_CheckBox_2.Checked = True And Move_Type(1) = "でんき") Then BasePower(1) = Math.Floor(BasePower(1) * 0.5) : Power_C(1) *= 0.5
                If (Mud_Sport_CheckBox_2.Checked = True And Move_Type(2) = "でんき") Then BasePower(2) = Math.Floor(BasePower(2) * 0.5) : Power_C(2) *= 0.5
                If (Mud_Sport_CheckBox_2.Checked = True And Move_Type(3) = "でんき") Then BasePower(3) = Math.Floor(BasePower(3) * 0.5) : Power_C(3) *= 0.5
                If (Mud_Sport_CheckBox_2.Checked = True And Move_Type(4) = "でんき") Then BasePower(4) = Math.Floor(BasePower(4) * 0.5) : Power_C(4) *= 0.5

                'みずあそび補正 #WS
                If (Water_Sport_CheckBox_2.Checked = True And Move_Type(0) = "ほのお") Then BasePower(0) = Math.Floor(BasePower(0) * 0.5) : Power_C(0) *= 0.5
                If (Water_Sport_CheckBox_2.Checked = True And Move_Type(1) = "ほのお") Then BasePower(1) = Math.Floor(BasePower(1) * 0.5) : Power_C(1) *= 0.5
                If (Water_Sport_CheckBox_2.Checked = True And Move_Type(2) = "ほのお") Then BasePower(2) = Math.Floor(BasePower(2) * 0.5) : Power_C(2) *= 0.5
                If (Water_Sport_CheckBox_2.Checked = True And Move_Type(3) = "ほのお") Then BasePower(3) = Math.Floor(BasePower(3) * 0.5) : Power_C(3) *= 0.5
                If (Water_Sport_CheckBox_2.Checked = True And Move_Type(4) = "ほのお") Then BasePower(4) = Math.Floor(BasePower(4) * 0.5) : Power_C(4) *= 0.5

                'とうそうしん補正 #Rivalry
                If (Ability_Display_1.Text = "とうそうしん同性") Then
                    BasePower(0) = Math.Floor(BasePower(0) * 1.25) : Power_C(0) *= 1.25
                    BasePower(1) = Math.Floor(BasePower(1) * 1.25) : Power_C(1) *= 1.25
                    BasePower(2) = Math.Floor(BasePower(2) * 1.25) : Power_C(2) *= 1.25
                    BasePower(3) = Math.Floor(BasePower(3) * 1.25) : Power_C(3) *= 1.25
                    BasePower(4) = Math.Floor(BasePower(4) * 1.25) : Power_C(4) *= 1.25
                End If
                If (Ability_Display_1.Text = "とうそうしん異性") Then
                    BasePower(0) = Math.Floor(BasePower(0) * 0.75) : Power_C(0) *= 0.75
                    BasePower(1) = Math.Floor(BasePower(1) * 0.75) : Power_C(1) *= 0.75
                    BasePower(2) = Math.Floor(BasePower(2) * 0.75) : Power_C(2) *= 0.75
                    BasePower(3) = Math.Floor(BasePower(3) * 0.75) : Power_C(3) *= 0.75
                    BasePower(4) = Math.Floor(BasePower(4) * 0.75) : Power_C(4) *= 0.75
                End If

                'すてみ補正 #Reckless
                If (Ability_Display_1.Text = "すてみ" And Move_Input_1.Text = "じごくぐるま" And Move_Input_1.Text = "とっしん" And Move_Input_1.Text = "ウッドハンマー" And Move_Input_1.Text = "すてみタックル" And Move_Input_1.Text = "ボルテッカー" And Move_Input_1.Text = "フレアドライブ" And Move_Input_1.Text = "ブレイブバード" And Move_Input_1.Text = "もろはのずつき" And Move_Input_1.Text = "とびげり" And Move_Input_1.Text = "とびひざげり") Then BasePower(0) = Math.Floor(BasePower(0) * 1.2) : Power_C(0) *= 1.2
                If (Ability_Display_1.Text = "すてみ" And Move_Input_2.Text = "じごくぐるま" And Move_Input_2.Text = "とっしん" And Move_Input_2.Text = "ウッドハンマー" And Move_Input_2.Text = "すてみタックル" And Move_Input_2.Text = "ボルテッカー" And Move_Input_2.Text = "フレアドライブ" And Move_Input_2.Text = "ブレイブバード" And Move_Input_2.Text = "もろはのずつき" And Move_Input_2.Text = "とびげり" And Move_Input_2.Text = "とびひざげり") Then BasePower(1) = Math.Floor(BasePower(1) * 1.2) : Power_C(1) *= 1.2
                If (Ability_Display_1.Text = "すてみ" And Move_Input_3.Text = "じごくぐるま" And Move_Input_3.Text = "とっしん" And Move_Input_3.Text = "ウッドハンマー" And Move_Input_3.Text = "すてみタックル" And Move_Input_3.Text = "ボルテッカー" And Move_Input_3.Text = "フレアドライブ" And Move_Input_3.Text = "ブレイブバード" And Move_Input_3.Text = "もろはのずつき" And Move_Input_3.Text = "とびげり" And Move_Input_3.Text = "とびひざげり") Then BasePower(2) = Math.Floor(BasePower(2) * 1.2) : Power_C(2) *= 1.2
                If (Ability_Display_1.Text = "すてみ" And Move_Input_4.Text = "じごくぐるま" And Move_Input_4.Text = "とっしん" And Move_Input_4.Text = "ウッドハンマー" And Move_Input_4.Text = "すてみタックル" And Move_Input_4.Text = "ボルテッカー" And Move_Input_4.Text = "フレアドライブ" And Move_Input_4.Text = "ブレイブバード" And Move_Input_4.Text = "もろはのずつき" And Move_Input_4.Text = "とびげり" And Move_Input_4.Text = "とびひざげり") Then BasePower(3) = Math.Floor(BasePower(3) * 1.2) : Power_C(3) *= 1.2

                'てつのこぶし補正 #Iron Fist
                If (Ability_Display_1.Text = "てつのこぶし" And Move_Input_1.Text = "アームハンマー" And Move_Input_1.Text = "かみなりパンチ" And Move_Input_1.Text = "きあいパンチ" And Move_Input_1.Text = "コメットパンチ" And Move_Input_1.Text = "シャドーパンチ" And Move_Input_1.Text = "スカイアッパー" And Move_Input_1.Text = "ドレインパンチ" And Move_Input_1.Text = "ばくれつパンチ" And Move_Input_1.Text = "バレットパンチ" And Move_Input_1.Text = "ピヨピヨパンチ" And Move_Input_1.Text = "ほのおのパンチ" And Move_Input_1.Text = "マッハパンチ" And Move_Input_1.Text = "メガトンパンチ" And Move_Input_1.Text = "れいとうパンチ" And Move_Input_1.Text = "れんぞくパンチ") Then BasePower(0) = Math.Floor(BasePower(0) * 1.2) : Power_C(0) *= 1.2
                If (Ability_Display_1.Text = "てつのこぶし" And Move_Input_2.Text = "アームハンマー" And Move_Input_2.Text = "かみなりパンチ" And Move_Input_2.Text = "きあいパンチ" And Move_Input_2.Text = "コメットパンチ" And Move_Input_2.Text = "シャドーパンチ" And Move_Input_2.Text = "スカイアッパー" And Move_Input_2.Text = "ドレインパンチ" And Move_Input_2.Text = "ばくれつパンチ" And Move_Input_2.Text = "バレットパンチ" And Move_Input_2.Text = "ピヨピヨパンチ" And Move_Input_2.Text = "ほのおのパンチ" And Move_Input_2.Text = "マッハパンチ" And Move_Input_2.Text = "メガトンパンチ" And Move_Input_2.Text = "れいとうパンチ" And Move_Input_2.Text = "れんぞくパンチ") Then BasePower(1) = Math.Floor(BasePower(1) * 1.2) : Power_C(1) *= 1.2
                If (Ability_Display_1.Text = "てつのこぶし" And Move_Input_3.Text = "アームハンマー" And Move_Input_3.Text = "かみなりパンチ" And Move_Input_3.Text = "きあいパンチ" And Move_Input_3.Text = "コメットパンチ" And Move_Input_3.Text = "シャドーパンチ" And Move_Input_3.Text = "スカイアッパー" And Move_Input_3.Text = "ドレインパンチ" And Move_Input_3.Text = "ばくれつパンチ" And Move_Input_3.Text = "バレットパンチ" And Move_Input_3.Text = "ピヨピヨパンチ" And Move_Input_3.Text = "ほのおのパンチ" And Move_Input_3.Text = "マッハパンチ" And Move_Input_3.Text = "メガトンパンチ" And Move_Input_3.Text = "れいとうパンチ" And Move_Input_3.Text = "れんぞくパンチ") Then BasePower(2) = Math.Floor(BasePower(2) * 1.2) : Power_C(2) *= 1.2
                If (Ability_Display_1.Text = "てつのこぶし" And Move_Input_4.Text = "アームハンマー" And Move_Input_4.Text = "かみなりパンチ" And Move_Input_4.Text = "きあいパンチ" And Move_Input_4.Text = "コメットパンチ" And Move_Input_4.Text = "シャドーパンチ" And Move_Input_4.Text = "スカイアッパー" And Move_Input_4.Text = "ドレインパンチ" And Move_Input_4.Text = "ばくれつパンチ" And Move_Input_4.Text = "バレットパンチ" And Move_Input_4.Text = "ピヨピヨパンチ" And Move_Input_4.Text = "ほのおのパンチ" And Move_Input_4.Text = "マッハパンチ" And Move_Input_4.Text = "メガトンパンチ" And Move_Input_4.Text = "れいとうパンチ" And Move_Input_4.Text = "れんぞくパンチ") Then BasePower(3) = Math.Floor(BasePower(3) * 1.2) : Power_C(3) *= 1.2

                'もうか補正 #Blaze
                If (Ability_Display_1.Text = "もうか" And Move_Type(0) = "ほのお") Then BasePower(0) = Math.Floor(BasePower(0) * 1.5) : Power_C(0) *= 1.5
                If (Ability_Display_1.Text = "もうか" And Move_Type(1) = "ほのお") Then BasePower(1) = Math.Floor(BasePower(1) * 1.5) : Power_C(1) *= 1.5
                If (Ability_Display_1.Text = "もうか" And Move_Type(2) = "ほのお") Then BasePower(2) = Math.Floor(BasePower(2) * 1.5) : Power_C(2) *= 1.5
                If (Ability_Display_1.Text = "もうか" And Move_Type(3) = "ほのお") Then BasePower(3) = Math.Floor(BasePower(3) * 1.5) : Power_C(3) *= 1.5
                If (Ability_Display_1.Text = "もうか" And Move_Type(4) = "ほのお") Then BasePower(4) = Math.Floor(BasePower(4) * 1.5) : Power_C(4) *= 1.5

                'げきりゅう補正 #Overgrow
                If (Ability_Display_1.Text = "げきりゅう" And Move_Type(0) = "みず") Then BasePower(0) = Math.Floor(BasePower(0) * 1.5) : Power_C(0) *= 1.5
                If (Ability_Display_1.Text = "げきりゅう" And Move_Type(1) = "みず") Then BasePower(1) = Math.Floor(BasePower(1) * 1.5) : Power_C(1) *= 1.5
                If (Ability_Display_1.Text = "げきりゅう" And Move_Type(2) = "みず") Then BasePower(2) = Math.Floor(BasePower(2) * 1.5) : Power_C(2) *= 1.5
                If (Ability_Display_1.Text = "げきりゅう" And Move_Type(3) = "みず") Then BasePower(3) = Math.Floor(BasePower(3) * 1.5) : Power_C(3) *= 1.5
                If (Ability_Display_1.Text = "げきりゅう" And Move_Type(4) = "みず") Then BasePower(4) = Math.Floor(BasePower(4) * 1.5) : Power_C(4) *= 1.5

                'しんりょく補正 #Torrent
                If (Ability_Display_1.Text = "しんりょく" And Move_Type(0) = "くさ") Then BasePower(0) = Math.Floor(BasePower(0) * 1.5) : Power_C(0) *= 1.5
                If (Ability_Display_1.Text = "しんりょく" And Move_Type(1) = "くさ") Then BasePower(1) = Math.Floor(BasePower(1) * 1.5) : Power_C(1) *= 1.5
                If (Ability_Display_1.Text = "しんりょく" And Move_Type(2) = "くさ") Then BasePower(2) = Math.Floor(BasePower(2) * 1.5) : Power_C(2) *= 1.5
                If (Ability_Display_1.Text = "しんりょく" And Move_Type(3) = "くさ") Then BasePower(3) = Math.Floor(BasePower(3) * 1.5) : Power_C(3) *= 1.5
                If (Ability_Display_1.Text = "しんりょく" And Move_Type(4) = "くさ") Then BasePower(4) = Math.Floor(BasePower(4) * 1.5) : Power_C(4) *= 1.5

                'むしのしらせ補正 #Swarm
                If (Ability_Display_1.Text = "むしのしらせ" And Move_Type(0) = "むし") Then BasePower(0) = Math.Floor(BasePower(0) * 1.5) : Power_C(0) *= 1.5
                If (Ability_Display_1.Text = "むしのしらせ" And Move_Type(1) = "むし") Then BasePower(1) = Math.Floor(BasePower(1) * 1.5) : Power_C(1) *= 1.5
                If (Ability_Display_1.Text = "むしのしらせ" And Move_Type(2) = "むし") Then BasePower(2) = Math.Floor(BasePower(2) * 1.5) : Power_C(2) *= 1.5
                If (Ability_Display_1.Text = "むしのしらせ" And Move_Type(3) = "むし") Then BasePower(3) = Math.Floor(BasePower(3) * 1.5) : Power_C(3) *= 1.5
                If (Ability_Display_1.Text = "むしのしらせ" And Move_Type(4) = "むし") Then BasePower(4) = Math.Floor(BasePower(4) * 1.5) : Power_C(4) *= 1.5

                'テクニシャン補正 #Technician
                If (Ability_Display_1.Text = "テクニシャン" And Power_1.Text <= 60 And Move_Input_1.Text <> "わるあがき") Then BasePower(0) = Math.Floor(BasePower(0) * 1.5) : Power_C(0) *= 1.5
                If (Ability_Display_1.Text = "テクニシャン" And Power_2.Text <= 60 And Move_Input_2.Text <> "わるあがき") Then BasePower(1) = Math.Floor(BasePower(1) * 1.5) : Power_C(1) *= 1.5
                If (Ability_Display_1.Text = "テクニシャン" And Power_3.Text <= 60 And Move_Input_3.Text <> "わるあがき") Then BasePower(2) = Math.Floor(BasePower(2) * 1.5) : Power_C(2) *= 1.5
                If (Ability_Display_1.Text = "テクニシャン" And Power_4.Text <= 60 And Move_Input_4.Text <> "わるあがき") Then BasePower(3) = Math.Floor(BasePower(3) * 1.5) : Power_C(3) *= 1.5
                If (Ability_Display_1.Text = "テクニシャン" And Power_Input_1.Text <= 60) Then BasePower(4) = Math.Floor(BasePower(4) * 1.5) : Power_C(4) *= 1.5

                'あついしぼう補正 #Thick Fat
                If (Ability_Display_2.Text = "あついしぼう" And (Move_Type(0) = "ほのお" Or Move_Type(0) = "こおり")) Then BasePower(0) = Math.Floor(BasePower(0) * 0.5) : Power_C(0) *= 0.5
                If (Ability_Display_2.Text = "あついしぼう" And (Move_Type(1) = "ほのお" Or Move_Type(1) = "こおり")) Then BasePower(1) = Math.Floor(BasePower(1) * 0.5) : Power_C(1) *= 0.5
                If (Ability_Display_2.Text = "あついしぼう" And (Move_Type(2) = "ほのお" Or Move_Type(2) = "こおり")) Then BasePower(2) = Math.Floor(BasePower(2) * 0.5) : Power_C(2) *= 0.5
                If (Ability_Display_2.Text = "あついしぼう" And (Move_Type(3) = "ほのお" Or Move_Type(3) = "こおり")) Then BasePower(3) = Math.Floor(BasePower(3) * 0.5) : Power_C(3) *= 0.5
                If (Ability_Display_2.Text = "あついしぼう" And (Move_Type(4) = "ほのお" Or Move_Type(4) = "こおり")) Then BasePower(4) = Math.Floor(BasePower(4) * 0.5) : Power_C(4) *= 0.5

                'たいねつ補正 #Heatproof
                If (Ability_Display_2.Text = "たいねつ" And Move_Type(0) = "ほのお") Then BasePower(0) = Math.Floor(BasePower(0) * 0.5) : Power_C(0) *= 0.5
                If (Ability_Display_2.Text = "たいねつ" And Move_Type(1) = "ほのお") Then BasePower(1) = Math.Floor(BasePower(1) * 0.5) : Power_C(1) *= 0.5
                If (Ability_Display_2.Text = "たいねつ" And Move_Type(2) = "ほのお") Then BasePower(2) = Math.Floor(BasePower(2) * 0.5) : Power_C(2) *= 0.5
                If (Ability_Display_2.Text = "たいねつ" And Move_Type(3) = "ほのお") Then BasePower(3) = Math.Floor(BasePower(3) * 0.5) : Power_C(3) *= 0.5
                If (Ability_Display_2.Text = "たいねつ" And Move_Type(4) = "ほのお") Then BasePower(4) = Math.Floor(BasePower(4) * 0.5) : Power_C(4) *= 0.5

                'かんそうはだ補正 #Dry Skin
                If (Ability_Display_2.Text = "かんそうはだ" And Move_Type(0) = "ほのお") Then BasePower(0) = Math.Floor(BasePower(0) * 1.25) : Power_C(0) *= 1.25
                If (Ability_Display_2.Text = "かんそうはだ" And Move_Type(1) = "ほのお") Then BasePower(1) = Math.Floor(BasePower(1) * 1.25) : Power_C(1) *= 1.25
                If (Ability_Display_2.Text = "かんそうはだ" And Move_Type(2) = "ほのお") Then BasePower(2) = Math.Floor(BasePower(2) * 1.25) : Power_C(2) *= 1.25
                If (Ability_Display_2.Text = "かんそうはだ" And Move_Type(3) = "ほのお") Then BasePower(3) = Math.Floor(BasePower(3) * 1.25) : Power_C(3) *= 1.25
                If (Ability_Display_2.Text = "かんそうはだ" And Move_Type(4) = "ほのお") Then BasePower(4) = Math.Floor(BasePower(4) * 1.25) : Power_C(4) *= 1.25


                '---------------------------------------------------------------------------------------------------------------------------------------------------------

                '計算

                '---------------------------------------------------------------------------------------------------------------------------------------------------------

                'スナイパー補正 / 急所補正 #Sniper / #Critical
                CH = {1, 1, 1, 1, 1}
                If (Critical_CheckBox_1.Checked = True) Then
                    Atk_A = {Atk_A_Critical, Atk_A_Critical, Atk_A_Critical, Atk_A_Critical, Atk_A_Critical}
                    If (Move_Input_1.Text <> "みらいよち" And Move_Input_1.Text <> "はめつのねがい") Then Atk_C(0) = Atk_C_Critical : Def_B(0) = Def_B_Critical(0) : CH(0) = 2
                    If (Move_Input_2.Text <> "みらいよち" And Move_Input_2.Text <> "はめつのねがい") Then Atk_C(1) = Atk_C_Critical : Def_B(1) = Def_B_Critical(1) : CH(1) = 2
                    If (Move_Input_3.Text <> "みらいよち" And Move_Input_3.Text <> "はめつのねがい") Then Atk_C(2) = Atk_C_Critical : Def_B(2) = Def_B_Critical(2) : CH(2) = 2
                    If (Move_Input_4.Text <> "みらいよち" And Move_Input_4.Text <> "はめつのねがい") Then Atk_C(3) = Atk_C_Critical : Def_B(3) = Def_B_Critical(3) : CH(3) = 2
                    Atk_C(4) = Atk_C_Critical : Def_B(4) = Def_B_Critical(4) : CH(4) = 2
                End If
                If (Critical_CheckBox_1.Checked = True And Ability_Display_1.Text = "スナイパー" And Move_Input_1.Text <> "みらいよち" And Move_Input_1.Text <> "はめつのねがい") Then CH(0) = 3
                If (Critical_CheckBox_1.Checked = True And Ability_Display_1.Text = "スナイパー" And Move_Input_2.Text <> "みらいよち" And Move_Input_2.Text <> "はめつのねがい") Then CH(1) = 3
                If (Critical_CheckBox_1.Checked = True And Ability_Display_1.Text = "スナイパー" And Move_Input_3.Text <> "みらいよち" And Move_Input_3.Text <> "はめつのねがい") Then CH(2) = 3
                If (Critical_CheckBox_1.Checked = True And Ability_Display_1.Text = "スナイパー" And Move_Input_4.Text <> "みらいよち" And Move_Input_4.Text <> "はめつのねがい") Then CH(3) = 3
                If (Critical_CheckBox_1.Checked = True And Ability_Display_1.Text = "スナイパー") Then CH(4) = 3

                '連続技
                For C = 1 To C_Loop(L)

                    '乱数
                    For Ran = 0 To 15
                        '技1
                        If (L = 0 And -1 <> Array.IndexOf(Move_Data, Move_Input_1.Text) And Move_Data(Array.IndexOf(Move_Data, Move_Input_1.Text) + 3) = 0) Then
                            Damage_Formula(0, Ran) += Math.Floor(Math.Floor(Math.Floor(Math.Floor((Math.Floor(Math.Floor(Math.Floor(((Math.Floor((Math.Floor((Math.Floor(Math.Floor(Math.Floor(((Math.Floor(Level_Input_1.Text * 2 / 5)) + 2) * BasePower(0)) * Atk_A(0)) / 50)) / Def_B(0))) * Mod1(0))) + 2) * CH(0) * Mod2(0)) * (Ran + 85)) / 100)) * STAB(0)) * Calced_Type_Compatibility(0, 0)) * Calced_Type_Compatibility(0, 1)) * Mod3(0))
                            Move_Calced_1.Text = (Damage_Formula(0, 0) / RSs_Input_HP_2.Text * 100).ToString("0.00") & "% ～ " & (Damage_Formula(0, 15) / RSs_Input_HP_2.Text * 100).ToString("0.00") & "%"
                        End If
                        If (L = 0 And -1 <> Array.IndexOf(Move_Data, Move_Input_1.Text) And Move_Data(Array.IndexOf(Move_Data, Move_Input_1.Text) + 3) = 1) Then
                            Damage_Formula(0, Ran) += Math.Floor(Math.Floor(Math.Floor(Math.Floor((Math.Floor(Math.Floor(Math.Floor(((Math.Floor((Math.Floor((Math.Floor(Math.Floor(Math.Floor(((Math.Floor(Level_Input_1.Text * 2 / 5)) + 2) * BasePower(0)) * Atk_C(0)) / 50)) / Def_D(0))) * Mod1(0))) + 2) * CH(0) * Mod2(0)) * (Ran + 85)) / 100)) * STAB(0)) * Calced_Type_Compatibility(0, 0)) * Calced_Type_Compatibility(0, 1)) * Mod3(0))
                            Move_Calced_1.Text = (Damage_Formula(0, 0) / RSs_Input_HP_2.Text * 100).ToString("0.00") & "% ～ " & (Damage_Formula(0, 15) / RSs_Input_HP_2.Text * 100).ToString("0.00") & "%"
                        End If

                        '技2
                        If (L = 1 And -1 <> Array.IndexOf(Move_Data, Move_Input_2.Text) And Move_Data(Array.IndexOf(Move_Data, Move_Input_2.Text) + 3) = 0) Then
                            Damage_Formula(1, Ran) += Math.Floor(Math.Floor(Math.Floor(Math.Floor((Math.Floor(Math.Floor(Math.Floor(((Math.Floor((Math.Floor((Math.Floor(Math.Floor(Math.Floor(((Math.Floor(Level_Input_1.Text * 2 / 5)) + 2) * BasePower(1)) * Atk_A(1)) / 50)) / Def_B(1))) * Mod1(1))) + 2) * CH(1) * Mod2(1)) * (Ran + 85)) / 100)) * STAB(1)) * Calced_Type_Compatibility(1, 0)) * Calced_Type_Compatibility(1, 1)) * Mod3(1))
                            Move_Calced_2.Text = (Damage_Formula(1, 0) / RSs_Input_HP_2.Text * 100).ToString("0.00") & "% ～ " & (Damage_Formula(1, 15) / RSs_Input_HP_2.Text * 100).ToString("0.00") & "%"
                        End If
                        If (L = 1 And -1 <> Array.IndexOf(Move_Data, Move_Input_2.Text) And Move_Data(Array.IndexOf(Move_Data, Move_Input_2.Text) + 3) = 1) Then
                            Damage_Formula(1, Ran) += Math.Floor(Math.Floor(Math.Floor(Math.Floor((Math.Floor(Math.Floor(Math.Floor(((Math.Floor((Math.Floor((Math.Floor(Math.Floor(Math.Floor(((Math.Floor(Level_Input_1.Text * 2 / 5)) + 2) * BasePower(1)) * Atk_C(1)) / 50)) / Def_D(1))) * Mod1(1))) + 2) * CH(1) * Mod2(1)) * (Ran + 85)) / 100)) * STAB(1)) * Calced_Type_Compatibility(1, 0)) * Calced_Type_Compatibility(1, 1)) * Mod3(1))
                            Move_Calced_2.Text = (Damage_Formula(1, 0) / RSs_Input_HP_2.Text * 100).ToString("0.00") & "% ～ " & (Damage_Formula(1, 15) / RSs_Input_HP_2.Text * 100).ToString("0.00") & "%"
                        End If

                        '技3
                        If (L = 2 And -1 <> Array.IndexOf(Move_Data, Move_Input_3.Text) And Move_Data(Array.IndexOf(Move_Data, Move_Input_3.Text) + 3) = 0) Then
                            Damage_Formula(2, Ran) += Math.Floor(Math.Floor(Math.Floor(Math.Floor((Math.Floor(Math.Floor(Math.Floor(((Math.Floor((Math.Floor((Math.Floor(Math.Floor(Math.Floor(((Math.Floor(Level_Input_1.Text * 2 / 5)) + 2) * BasePower(2)) * Atk_A(2)) / 50)) / Def_B(2))) * Mod1(2))) + 2) * CH(2) * Mod2(2)) * (Ran + 85)) / 100)) * STAB(2)) * Calced_Type_Compatibility(2, 0)) * Calced_Type_Compatibility(2, 1)) * Mod3(2))
                            Move_Calced_3.Text = (Damage_Formula(2, 0) / RSs_Input_HP_2.Text * 100).ToString("0.00") & "% ～ " & (Damage_Formula(2, 15) / RSs_Input_HP_2.Text * 100).ToString("0.00") & "%"
                        End If
                        If (L = 2 And -1 <> Array.IndexOf(Move_Data, Move_Input_3.Text) And Move_Data(Array.IndexOf(Move_Data, Move_Input_3.Text) + 3) = 1) Then
                            Damage_Formula(2, Ran) += Math.Floor(Math.Floor(Math.Floor(Math.Floor((Math.Floor(Math.Floor(Math.Floor(((Math.Floor((Math.Floor((Math.Floor(Math.Floor(Math.Floor(((Math.Floor(Level_Input_1.Text * 2 / 5)) + 2) * BasePower(2)) * Atk_C(2)) / 50)) / Def_D(2))) * Mod1(2))) + 2) * CH(2) * Mod2(2)) * (Ran + 85)) / 100)) * STAB(2)) * Calced_Type_Compatibility(2, 0)) * Calced_Type_Compatibility(2, 1)) * Mod3(2))
                            Move_Calced_3.Text = (Damage_Formula(2, 0) / RSs_Input_HP_2.Text * 100).ToString("0.00") & "% ～ " & (Damage_Formula(2, 15) / RSs_Input_HP_2.Text * 100).ToString("0.00") & "%"
                        End If

                        '技4
                        If (L = 3 And -1 <> Array.IndexOf(Move_Data, Move_Input_4.Text) And Move_Data(Array.IndexOf(Move_Data, Move_Input_4.Text) + 3) = 0) Then
                            Damage_Formula(3, Ran) += Math.Floor(Math.Floor(Math.Floor(Math.Floor((Math.Floor(Math.Floor(Math.Floor(((Math.Floor((Math.Floor((Math.Floor(Math.Floor(Math.Floor(((Math.Floor(Level_Input_1.Text * 2 / 5)) + 2) * BasePower(3)) * Atk_A(3)) / 50)) / Def_B(3))) * Mod1(3))) + 2) * CH(3) * Mod2(3)) * (Ran + 85)) / 100)) * STAB(3)) * Calced_Type_Compatibility(3, 0)) * Calced_Type_Compatibility(3, 1)) * Mod3(3))
                            Move_Calced_4.Text = (Damage_Formula(3, 0) / RSs_Input_HP_2.Text * 100).ToString("0.00") & "% ～ " & (Damage_Formula(3, 15) / RSs_Input_HP_2.Text * 100).ToString("0.00") & "%"
                        End If
                        If (L = 3 And -1 <> Array.IndexOf(Move_Data, Move_Input_4.Text) And Move_Data(Array.IndexOf(Move_Data, Move_Input_4.Text) + 3) = 1) Then
                            Damage_Formula(3, Ran) += Math.Floor(Math.Floor(Math.Floor(Math.Floor((Math.Floor(Math.Floor(Math.Floor(((Math.Floor((Math.Floor((Math.Floor(Math.Floor(Math.Floor(((Math.Floor(Level_Input_1.Text * 2 / 5)) + 2) * BasePower(3)) * Atk_C(3)) / 50)) / Def_D(3))) * Mod1(3))) + 2) * CH(3) * Mod2(3)) * (Ran + 85)) / 100)) * STAB(3)) * Calced_Type_Compatibility(3, 0)) * Calced_Type_Compatibility(3, 1)) * Mod3(3))
                            Move_Calced_4.Text = (Damage_Formula(3, 0) / RSs_Input_HP_2.Text * 100).ToString("0.00") & "% ～ " & (Damage_Formula(3, 15) / RSs_Input_HP_2.Text * 100).ToString("0.00") & "%"
                        End If

                        '技5
                        If (L = 4 And Physical_Special_Display.Text = "物理") Then
                            Damage_Formula(4, Ran) += Math.Floor(Math.Floor(Math.Floor(Math.Floor((Math.Floor(Math.Floor(Math.Floor(((Math.Floor((Math.Floor((Math.Floor(Math.Floor(Math.Floor(((Math.Floor(Level_Input_1.Text * 2 / 5)) + 2) * BasePower(4)) * Atk_A(4)) / 50)) / Def_B(4))) * Mod1(4))) + 2) * CH(4) * Mod2(4)) * (Ran + 85)) / 100)) * STAB(4)) * Calced_Type_Compatibility(4, 0)) * Calced_Type_Compatibility(4, 1)) * Mod3(4))
                            Move_Calced_5.Text = (Damage_Formula(4, 0) / RSs_Input_HP_2.Text * 100).ToString("0.00") & "% ～ " & (Damage_Formula(4, 15) / RSs_Input_HP_2.Text * 100).ToString("0.00") & "%"
                        End If
                        If (L = 4 And Physical_Special_Display.Text = "特殊") Then
                            Damage_Formula(4, Ran) += Math.Floor(Math.Floor(Math.Floor(Math.Floor((Math.Floor(Math.Floor(Math.Floor(((Math.Floor((Math.Floor((Math.Floor(Math.Floor(Math.Floor(((Math.Floor(Level_Input_1.Text * 2 / 5)) + 2) * BasePower(4)) * Atk_C(4)) / 50)) / Def_D(4))) * Mod1(4))) + 2) * CH(4) * Mod2(4)) * (Ran + 85)) / 100)) * STAB(4)) * Calced_Type_Compatibility(4, 0)) * Calced_Type_Compatibility(4, 1)) * Mod3(4))
                            Move_Calced_5.Text = (Damage_Formula(4, 0) / RSs_Input_HP_2.Text * 100).ToString("0.00") & "% ～ " & (Damage_Formula(4, 15) / RSs_Input_HP_2.Text * 100).ToString("0.00") & "%"
                        End If




                    Next




                Next
            Next

        Next

        Calced_Datas(0, 0)
        Calced_Datas(1, 0)
        Calced_Datas(2, 0)
        Calced_Datas(3, 0)
        Calced_Datas(4, 0)

    End Function





    '====================================================================================================================================================================

    'めざパチェッカー      

    '====================================================================================================================================================================

    'レベル入力
    Private Sub Level_Input_Hidden_Power_KeyPress(sender As Object, e As KeyPressEventArgs) Handles Level_Input_Hidden_Power.KeyPress
        'キーが [0]～[9] または [BackSpace] 以外の場合イベントをキャンセル
        If Not (("0"c <= e.KeyChar And e.KeyChar <= "9"c) Or e.KeyChar = ControlChars.Back) Then
            'コントロールの既定の処理を省略する場合は true
            e.Handled = True
        End If
    End Sub
    Private Sub Level_Input_Hidden_Power_TextChanged(sender As Object, e As EventArgs) Handles Level_Input_Hidden_Power.TextChanged
        If ("" <> Level_Input_Hidden_Power.Text) Then
            If (100 <= Level_Input_Hidden_Power.Text) Then Level_Input_Hidden_Power.Text = 100
        End If
    End Sub

    '個体値入力
    Private Sub HP_IVs_Input_Hidden_Power_KeyPress(sender As Object, e As KeyPressEventArgs) Handles HP_IVs_Input_Hidden_Power.KeyPress
        'キーが [0]～[9] または [BackSpace] 以外の場合イベントをキャンセル
        If Not (("0"c <= e.KeyChar And e.KeyChar <= "9"c) Or e.KeyChar = ControlChars.Back) Then
            'コントロールの既定の処理を省略する場合は true
            e.Handled = True
        End If
    End Sub
    Private Sub HP_IVs_Input_Hidden_Power_TextChanged(sender As Object, e As EventArgs) Handles HP_IVs_Input_Hidden_Power.TextChanged
        If ("" <> HP_IVs_Input_Hidden_Power.Text) Then
            If (31 <= HP_IVs_Input_Hidden_Power.Text) Then HP_IVs_Input_Hidden_Power.Text = 31
        End If
    End Sub

    Private Sub A_IVs_Input_Hidden_Power_KeyPress(sender As Object, e As KeyPressEventArgs) Handles A_IVs_Input_Hidden_Power.KeyPress
        'キーが [0]～[9] または [BackSpace] 以外の場合イベントをキャンセル
        If Not (("0"c <= e.KeyChar And e.KeyChar <= "9"c) Or e.KeyChar = ControlChars.Back) Then
            'コントロールの既定の処理を省略する場合は true
            e.Handled = True
        End If
    End Sub
    Private Sub A_IVs_Input_Hidden_Power_TextChanged(sender As Object, e As EventArgs) Handles A_IVs_Input_Hidden_Power.TextChanged
        If ("" <> A_IVs_Input_Hidden_Power.Text) Then
            If (31 <= A_IVs_Input_Hidden_Power.Text) Then A_IVs_Input_Hidden_Power.Text = 31
        End If
    End Sub

    Private Sub B_IVs_Input_Hidden_Power_KeyPress(sender As Object, e As KeyPressEventArgs) Handles B_IVs_Input_Hidden_Power.KeyPress
        'キーが [0]～[9] または [BackSpace] 以外の場合イベントをキャンセル
        If Not (("0"c <= e.KeyChar And e.KeyChar <= "9"c) Or e.KeyChar = ControlChars.Back) Then
            'コントロールの既定の処理を省略する場合は true
            e.Handled = True
        End If
    End Sub
    Private Sub B_IVs_Input_Hidden_Power_TextChanged(sender As Object, e As EventArgs) Handles B_IVs_Input_Hidden_Power.TextChanged
        If ("" <> B_IVs_Input_Hidden_Power.Text) Then
            If (31 <= B_IVs_Input_Hidden_Power.Text) Then B_IVs_Input_Hidden_Power.Text = 31
        End If
    End Sub

    Private Sub C_IVs_Input_Hidden_Power_KeyPress(sender As Object, e As KeyPressEventArgs) Handles C_IVs_Input_Hidden_Power.KeyPress
        'キーが [0]～[9] または [BackSpace] 以外の場合イベントをキャンセル
        If Not (("0"c <= e.KeyChar And e.KeyChar <= "9"c) Or e.KeyChar = ControlChars.Back) Then
            'コントロールの既定の処理を省略する場合は true
            e.Handled = True
        End If
    End Sub
    Private Sub C_IVs_Input_Hidden_Power_TextChanged(sender As Object, e As EventArgs) Handles C_IVs_Input_Hidden_Power.TextChanged
        If ("" <> C_IVs_Input_Hidden_Power.Text) Then
            If (31 <= C_IVs_Input_Hidden_Power.Text) Then C_IVs_Input_Hidden_Power.Text = 31
        End If
    End Sub

    Private Sub D_IVs_Input_Hidden_Power_KeyPress(sender As Object, e As KeyPressEventArgs) Handles D_IVs_Input_Hidden_Power.KeyPress
        'キーが [0]～[9] または [BackSpace] 以外の場合イベントをキャンセル
        If Not (("0"c <= e.KeyChar And e.KeyChar <= "9"c) Or e.KeyChar = ControlChars.Back) Then
            'コントロールの既定の処理を省略する場合は true
            e.Handled = True
        End If
    End Sub
    Private Sub D_IVs_Input_Hidden_Power_TextChanged(sender As Object, e As EventArgs) Handles D_IVs_Input_Hidden_Power.TextChanged
        If ("" <> D_IVs_Input_Hidden_Power.Text) Then
            If (31 <= D_IVs_Input_Hidden_Power.Text) Then D_IVs_Input_Hidden_Power.Text = 31
        End If
    End Sub

    Private Sub S_IVs_Input_Hidden_Power_KeyPress(sender As Object, e As KeyPressEventArgs) Handles S_IVs_Input_Hidden_Power.KeyPress
        'キーが [0]～[9] または [BackSpace] 以外の場合イベントをキャンセル
        If Not (("0"c <= e.KeyChar And e.KeyChar <= "9"c) Or e.KeyChar = ControlChars.Back) Then
            'コントロールの既定の処理を省略する場合は true
            e.Handled = True
        End If
    End Sub
    Private Sub S_IVs_Input_Hidden_Power_TextChanged(sender As Object, e As EventArgs) Handles S_IVs_Input_Hidden_Power.TextChanged
        If ("" <> S_IVs_Input_Hidden_Power.Text) Then
            If (31 <= S_IVs_Input_Hidden_Power.Text) Then S_IVs_Input_Hidden_Power.Text = 31
        End If
    End Sub

    Private Sub HP_IVs_minus1_Hidden_Power_Click(sender As Object, e As EventArgs) Handles HP_IVs_minus1_Hidden_Power.Click
        HP_IVs_Input_Hidden_Power.Text = Minus1(HP_IVs_Input_Hidden_Power.Text)
    End Sub

    Private Sub HP_IVs_Plus1_Hidden_Power_Click(sender As Object, e As EventArgs) Handles HP_IVs_Plus1_Hidden_Power.Click
        HP_IVs_Input_Hidden_Power.Text = Plus1(HP_IVs_Input_Hidden_Power.Text)
    End Sub

    Private Sub A_IVs_minus1_Hidden_Power_Click(sender As Object, e As EventArgs) Handles A_IVs_minus1_Hidden_Power.Click
        A_IVs_Input_Hidden_Power.Text = Minus1(A_IVs_Input_Hidden_Power.Text)
    End Sub

    Private Sub A_IVs_Plus1_Hidden_Power_Click(sender As Object, e As EventArgs) Handles A_IVs_Plus1_Hidden_Power.Click
        A_IVs_Input_Hidden_Power.Text = Plus1(A_IVs_Input_Hidden_Power.Text)
    End Sub

    Private Sub B_IVs_minus1_Hidden_Power_Click(sender As Object, e As EventArgs) Handles B_IVs_minus1_Hidden_Power.Click
        B_IVs_Input_Hidden_Power.Text = Minus1(B_IVs_Input_Hidden_Power.Text)
    End Sub

    Private Sub B_IVs_Plus1_Hidden_Power_Click(sender As Object, e As EventArgs) Handles B_IVs_Plus1_Hidden_Power.Click
        B_IVs_Input_Hidden_Power.Text = Plus1(B_IVs_Input_Hidden_Power.Text)
    End Sub

    Private Sub C_IVs_minus1_Hidden_Power_Click(sender As Object, e As EventArgs) Handles C_IVs_minus1_Hidden_Power.Click
        C_IVs_Input_Hidden_Power.Text = Minus1(C_IVs_Input_Hidden_Power.Text)
    End Sub

    Private Sub C_IVs_Plus1_Hidden_Power_Click(sender As Object, e As EventArgs) Handles C_IVs_Plus1_Hidden_Power.Click
        C_IVs_Input_Hidden_Power.Text = Plus1(C_IVs_Input_Hidden_Power.Text)
    End Sub

    Private Sub D_IVs_minus1_Hidden_Power_Click(sender As Object, e As EventArgs) Handles D_IVs_minus1_Hidden_Power.Click
        D_IVs_Input_Hidden_Power.Text = Minus1(D_IVs_Input_Hidden_Power.Text)
    End Sub

    Private Sub D_IVs_Plus1_Hidden_Power_Click(sender As Object, e As EventArgs) Handles D_IVs_Plus1_Hidden_Power.Click
        D_IVs_Input_Hidden_Power.Text = Plus1(D_IVs_Input_Hidden_Power.Text)
    End Sub
    Private Sub S_IVs_minus1_Hidden_Power_Click(sender As Object, e As EventArgs) Handles S_IVs_minus1_Hidden_Power.Click
        S_IVs_Input_Hidden_Power.Text = Minus1(S_IVs_Input_Hidden_Power.Text)
    End Sub

    Private Sub S_IVs_Plus1_Hidden_Power_Click(sender As Object, e As EventArgs) Handles S_IVs_Plus1_Hidden_Power.Click
        S_IVs_Input_Hidden_Power.Text = Plus1(S_IVs_Input_Hidden_Power.Text)
    End Sub

    '実数値入力
    Private Sub HP_Real_Status_Input_Hidden_Power_KeyPress(sender As Object, e As KeyPressEventArgs) Handles HP_Real_Status_Input_Hidden_Power.KeyPress
        'キーが [0]～[9] または [BackSpace] 以外の場合イベントをキャンセル
        If Not (("0"c <= e.KeyChar And e.KeyChar <= "9"c) Or e.KeyChar = ControlChars.Back) Then
            'コントロールの既定の処理を省略する場合は true
            e.Handled = True
        End If
    End Sub

    Private Sub A_Real_Status_Input_Hidden_Power_KeyPress(sender As Object, e As KeyPressEventArgs) Handles A_Real_Status_Input_Hidden_Power.KeyPress
        'キーが [0]～[9] または [BackSpace] 以外の場合イベントをキャンセル
        If Not (("0"c <= e.KeyChar And e.KeyChar <= "9"c) Or e.KeyChar = ControlChars.Back) Then
            'コントロールの既定の処理を省略する場合は true
            e.Handled = True
        End If
    End Sub

    Private Sub B_Real_Status_Input_Hidden_Power_KeyPress(sender As Object, e As KeyPressEventArgs) Handles B_Real_Status_Input_Hidden_Power.KeyPress
        'キーが [0]～[9] または [BackSpace] 以外の場合イベントをキャンセル
        If Not (("0"c <= e.KeyChar And e.KeyChar <= "9"c) Or e.KeyChar = ControlChars.Back) Then
            'コントロールの既定の処理を省略する場合は true
            e.Handled = True
        End If
    End Sub

    Private Sub C_Real_Status_Input_Hidden_Power_KeyPress(sender As Object, e As KeyPressEventArgs) Handles C_Real_Status_Input_Hidden_Power.KeyPress
        'キーが [0]～[9] または [BackSpace] 以外の場合イベントをキャンセル
        If Not (("0"c <= e.KeyChar And e.KeyChar <= "9"c) Or e.KeyChar = ControlChars.Back) Then
            'コントロールの既定の処理を省略する場合は true
            e.Handled = True
        End If
    End Sub

    Private Sub D_Real_Status_Input_Hidden_Power_KeyPress(sender As Object, e As KeyPressEventArgs) Handles D_Real_Status_Input_Hidden_Power.KeyPress
        'キーが [0]～[9] または [BackSpace] 以外の場合イベントをキャンセル
        If Not (("0"c <= e.KeyChar And e.KeyChar <= "9"c) Or e.KeyChar = ControlChars.Back) Then
            'コントロールの既定の処理を省略する場合は true
            e.Handled = True
        End If
    End Sub

    Private Sub S_Real_Status_Input_Hidden_Power_KeyPress(sender As Object, e As KeyPressEventArgs) Handles S_Real_Status_Input_Hidden_Power.KeyPress
        'キーが [0]～[9] または [BackSpace] 以外の場合イベントをキャンセル
        If Not (("0"c <= e.KeyChar And e.KeyChar <= "9"c) Or e.KeyChar = ControlChars.Back) Then
            'コントロールの既定の処理を省略する場合は true
            e.Handled = True
        End If
    End Sub

    '努力値入力
    Private Sub HP_EVs_Input_Hidden_Power_KeyPress(sender As Object, e As KeyPressEventArgs) Handles HP_EVs_Input_Hidden_Power.KeyPress
        'キーが [0]～[9] または [BackSpace] 以外の場合イベントをキャンセル
        If Not (("0"c <= e.KeyChar And e.KeyChar <= "9"c) Or e.KeyChar = ControlChars.Back) Then
            'コントロールの既定の処理を省略する場合は true
            e.Handled = True
        End If
    End Sub
    Private Sub HP_EVs_Input_Hidden_Power_TextChanged(sender As Object, e As EventArgs) Handles HP_EVs_Input_Hidden_Power.TextChanged
        If ("" <> HP_EVs_Input_Hidden_Power.Text) Then
            If (252 <= HP_EVs_Input_Hidden_Power.Text) Then HP_EVs_Input_Hidden_Power.Text = 252
        End If
    End Sub

    Private Sub A_EVs_Input_Hidden_Power_KeyPress(sender As Object, e As KeyPressEventArgs) Handles A_EVs_Input_Hidden_Power.KeyPress
        'キーが [0]～[9] または [BackSpace] 以外の場合イベントをキャンセル
        If Not (("0"c <= e.KeyChar And e.KeyChar <= "9"c) Or e.KeyChar = ControlChars.Back) Then
            'コントロールの既定の処理を省略する場合は true
            e.Handled = True
        End If
    End Sub
    Private Sub A_EVs_Input_Hidden_Power_TextChanged(sender As Object, e As EventArgs) Handles A_EVs_Input_Hidden_Power.TextChanged
        If ("" <> A_EVs_Input_Hidden_Power.Text) Then
            If (252 <= A_EVs_Input_Hidden_Power.Text) Then A_EVs_Input_Hidden_Power.Text = 252
        End If
    End Sub

    Private Sub B_EVs_Input_Hidden_Power_KeyPress(sender As Object, e As KeyPressEventArgs) Handles B_EVs_Input_Hidden_Power.KeyPress
        'キーが [0]～[9] または [BackSpace] 以外の場合イベントをキャンセル
        If Not (("0"c <= e.KeyChar And e.KeyChar <= "9"c) Or e.KeyChar = ControlChars.Back) Then
            'コントロールの既定の処理を省略する場合は true
            e.Handled = True
        End If
    End Sub
    Private Sub B_EVs_Input_Hidden_Power_TextChanged(sender As Object, e As EventArgs) Handles B_EVs_Input_Hidden_Power.TextChanged
        If ("" <> B_EVs_Input_Hidden_Power.Text) Then
            If (252 <= B_EVs_Input_Hidden_Power.Text) Then B_EVs_Input_Hidden_Power.Text = 252
        End If
    End Sub

    Private Sub C_EVs_Input_Hidden_Power_KeyPress(sender As Object, e As KeyPressEventArgs) Handles C_EVs_Input_Hidden_Power.KeyPress
        'キーが [0]～[9] または [BackSpace] 以外の場合イベントをキャンセル
        If Not (("0"c <= e.KeyChar And e.KeyChar <= "9"c) Or e.KeyChar = ControlChars.Back) Then
            'コントロールの既定の処理を省略する場合は true
            e.Handled = True
        End If
    End Sub
    Private Sub C_EVs_Input_Hidden_Power_TextChanged(sender As Object, e As EventArgs) Handles C_EVs_Input_Hidden_Power.TextChanged
        If ("" <> C_EVs_Input_Hidden_Power.Text) Then
            If (252 <= C_EVs_Input_Hidden_Power.Text) Then C_EVs_Input_Hidden_Power.Text = 252
        End If
    End Sub

    Private Sub D_EVs_Input_Hidden_Power_KeyPress(sender As Object, e As KeyPressEventArgs) Handles D_EVs_Input_Hidden_Power.KeyPress
        'キーが [0]～[9] または [BackSpace] 以外の場合イベントをキャンセル
        If Not (("0"c <= e.KeyChar And e.KeyChar <= "9"c) Or e.KeyChar = ControlChars.Back) Then
            'コントロールの既定の処理を省略する場合は true
            e.Handled = True
        End If
    End Sub
    Private Sub D_EVs_Input_Hidden_Power_TextChanged(sender As Object, e As EventArgs) Handles D_EVs_Input_Hidden_Power.TextChanged
        If ("" <> D_EVs_Input_Hidden_Power.Text) Then
            If (252 <= D_EVs_Input_Hidden_Power.Text) Then D_EVs_Input_Hidden_Power.Text = 252
        End If
    End Sub

    Private Sub S_EVs_Input_Hidden_Power_KeyPress(sender As Object, e As KeyPressEventArgs) Handles S_EVs_Input_Hidden_Power.KeyPress
        'キーが [0]～[9] または [BackSpace] 以外の場合イベントをキャンセル
        If Not (("0"c <= e.KeyChar And e.KeyChar <= "9"c) Or e.KeyChar = ControlChars.Back) Then
            'コントロールの既定の処理を省略する場合は true
            e.Handled = True
        End If
    End Sub
    Private Sub S_EVs_Input_Hidden_Power_TextChanged(sender As Object, e As EventArgs) Handles S_EVs_Input_Hidden_Power.TextChanged
        If ("" <> S_EVs_Input_Hidden_Power.Text) Then
            If (252 <= S_EVs_Input_Hidden_Power.Text) Then S_EVs_Input_Hidden_Power.Text = 252
        End If
    End Sub

    '個体値ショートカット
    Private Sub HP_EVs_0_Hidden_Power_Click(sender As Object, e As EventArgs) Handles HP_EVs_0_Hidden_Power.Click
        HP_EVs_Input_Hidden_Power.Text = 0
    End Sub

    Private Sub A_EVs_0_Hidden_Power_Click(sender As Object, e As EventArgs) Handles A_EVs_0_Hidden_Power.Click
        A_EVs_Input_Hidden_Power.Text = 0
    End Sub

    Private Sub B_EVs_0_Hidden_Power_Click(sender As Object, e As EventArgs) Handles B_EVs_0_Hidden_Power.Click
        B_EVs_Input_Hidden_Power.Text = 0
    End Sub

    Private Sub C_EVs_0_Hidden_Power_Click(sender As Object, e As EventArgs) Handles C_EVs_0_Hidden_Power.Click
        C_EVs_Input_Hidden_Power.Text = 0
    End Sub

    Private Sub D_EVs_0_Hidden_Power_Click(sender As Object, e As EventArgs) Handles D_EVs_0_Hidden_Power.Click
        D_EVs_Input_Hidden_Power.Text = 0
    End Sub

    Private Sub S_EVs_0_Hidden_Power_Click(sender As Object, e As EventArgs) Handles S_EVs_0_Hidden_Power.Click
        S_EVs_Input_Hidden_Power.Text = 0
    End Sub


    Private Sub HP_EVs_4_Hidden_Power_Click(sender As Object, e As EventArgs) Handles HP_EVs_4_Hidden_Power.Click
        HP_EVs_Input_Hidden_Power.Text = 4
    End Sub

    Private Sub A_EVs_4_Hidden_Power_Click(sender As Object, e As EventArgs) Handles A_EVs_4_Hidden_Power.Click
        A_EVs_Input_Hidden_Power.Text = 4
    End Sub

    Private Sub B_EVs_4_Hidden_Power_Click(sender As Object, e As EventArgs) Handles B_EVs_4_Hidden_Power.Click
        B_EVs_Input_Hidden_Power.Text = 4
    End Sub
    Private Sub C_EVs_4_Hidden_Power_Click(sender As Object, e As EventArgs) Handles C_EVs_4_Hidden_Power.Click
        C_EVs_Input_Hidden_Power.Text = 4
    End Sub

    Private Sub D_EVs_4_Hidden_Power_Click(sender As Object, e As EventArgs) Handles D_EVs_4_Hidden_Power.Click
        D_EVs_Input_Hidden_Power.Text = 4
    End Sub

    Private Sub S_EVs_4_Hidden_Power_Click(sender As Object, e As EventArgs) Handles S_EVs_4_Hidden_Power.Click
        S_EVs_Input_Hidden_Power.Text = 4
    End Sub


    Private Sub Hp_EVs_252_Hidden_Power_Click(sender As Object, e As EventArgs) Handles HP_EVs_252_Hidden_Power.Click
        HP_EVs_Input_Hidden_Power.Text = 252
    End Sub

    Private Sub A_EVs_252_Hidden_Power_Click(sender As Object, e As EventArgs) Handles A_EVs_252_Hidden_Power.Click
        A_EVs_Input_Hidden_Power.Text = 252
    End Sub

    Private Sub B_EVs_252_Hidden_Power_Click(sender As Object, e As EventArgs) Handles B_EVs_252_Hidden_Power.Click
        B_EVs_Input_Hidden_Power.Text = 252
    End Sub

    Private Sub C_EVs_252_Hidden_Power_Click(sender As Object, e As EventArgs) Handles C_EVs_252_Hidden_Power.Click
        C_EVs_Input_Hidden_Power.Text = 252
    End Sub

    Private Sub D_EVs_252_Hidden_Power_Click(sender As Object, e As EventArgs) Handles D_EVs_252_Hidden_Power.Click
        D_EVs_Input_Hidden_Power.Text = 252
    End Sub

    Private Sub S_EVs_252_Hidden_Power_Click(sender As Object, e As EventArgs) Handles S_EVs_252_Hidden_Power.Click
        S_EVs_Input_Hidden_Power.Text = 252
    End Sub


    '個体値を参照
    Private Sub Refer_to_IVs_Load(sender As Object, e As EventArgs) Handles MyBase.Load
        Refer_to_IVs.Checked = True
    End Sub

    'RadioBottun
    Private Sub Calculate_and_refer_to_IVs_CheckedChanged(sender As Object, e As EventArgs) Handles Calculate_and_refer_to_IVs.CheckedChanged
        If (Calculate_and_refer_to_IVs.Checked = True) Then
            Refer_to_IVs.Checked = False
        End If
    End Sub

    Private Sub Refer_to_IVs_CheckedChanged(sender As Object, e As EventArgs) Handles Refer_to_IVs.CheckedChanged
        If (Refer_to_IVs.Checked = True) Then
            Calculate_and_refer_to_IVs.Checked = False
        End If
    End Sub

    '--------------------------------------------------------------------------------------------------------------------------------------------------------------------

    '計算

    '--------------------------------------------------------------------------------------------------------------------------------------------------------------------

    Private Sub Calc_Hidden_Power_Click(sender As Object, e As EventArgs) Handles Calc_Hidden_Power.Click

        Dim Type_Total As Integer = 0
        Dim Power_Total As Integer = 0

        Calced_Hidden_Power_Type_Power.Items.Clear()

        Calced_HP_IVs_Display_Hidden_Power.Text = "---"
        Calced_A_IVs_Display_Hidden_Power.Text = "---"
        Calced_B_IVs_Display_Hidden_Power.Text = "---"
        Calced_C_IVs_Display_Hidden_Power.Text = "---"
        Calced_D_IVs_Display_Hidden_Power.Text = "---"
        Calced_S_IVs_Display_Hidden_Power.Text = "---"


        If (Refer_to_IVs.Checked = True) Then

            If (HP_IVs_Input_Hidden_Power.Text Mod 2 = 1) Then Type_Total += 1
            If (A_IVs_Input_Hidden_Power.Text Mod 2 = 1) Then Type_Total += 2
            If (B_IVs_Input_Hidden_Power.Text Mod 2 = 1) Then Type_Total += 4
            If (S_IVs_Input_Hidden_Power.Text Mod 2 = 1) Then Type_Total += 8
            If (C_IVs_Input_Hidden_Power.Text Mod 2 = 1) Then Type_Total += 16
            If (D_IVs_Input_Hidden_Power.Text Mod 2 = 1) Then Type_Total += 32

            If (HP_IVs_Input_Hidden_Power.Text Mod 4 = 2 Or HP_IVs_Input_Hidden_Power.Text Mod 4 = 3) Then Power_Total += 1
            If (A_IVs_Input_Hidden_Power.Text Mod 4 = 2 Or A_IVs_Input_Hidden_Power.Text Mod 4 = 3) Then Power_Total += 2
            If (B_IVs_Input_Hidden_Power.Text Mod 4 = 2 Or B_IVs_Input_Hidden_Power.Text Mod 4 = 3) Then Power_Total += 4
            If (S_IVs_Input_Hidden_Power.Text Mod 4 = 2 Or S_IVs_Input_Hidden_Power.Text Mod 4 = 3) Then Power_Total += 8
            If (C_IVs_Input_Hidden_Power.Text Mod 4 = 2 Or C_IVs_Input_Hidden_Power.Text Mod 4 = 3) Then Power_Total += 16
            If (D_IVs_Input_Hidden_Power.Text Mod 4 = 2 Or D_IVs_Input_Hidden_Power.Text Mod 4 = 3) Then Power_Total += 32

            Dim Type_Correspondence_table() As String = {"[かくとう]： ", "[ひこう]： ", "[どく]： ", "[じめん]： ", "[いわ]： ", "[むし]： ", "[ゴースト]： ", "[はがね]： ", "[ほのお]： ", "[みず]： ", "[くさ]： ", "[でんき]： ", "[エスパー]： ", "[こおり]： ", "[ドラゴン]： ", "[あく]： "}
            Calced_Hidden_Power_Type_Power.Items.Add(Type_Correspondence_table(Math.Floor(Type_Total * 15 / 63)) & Math.Floor(Power_Total * 40 / 63 + 30))

        Else

            Dim Name_Index As Integer = Array.IndexOf(Pokemon_Basics, Name_Select_Hidden_Power.Text)

            If (Name_Index = -1 Or Name_Index Mod 11 <> 1) Then GoTo Hidden_Power_Calc_End

            Dim BSs(5) As Integer
            For L = 0 To 5
                BSs(L) = Pokemon_Basics(Name_Index + L + 1)
            Next

            '------------------------------------------
            '可能性のある個体値の最小値と最大値を求める
            '------------------------------------------
            If (Level_Input_Hidden_Power.Text = "") Then Level_Input_Hidden_Power.Text = 1

            If (HP_Real_Status_Input_Hidden_Power.Text = "") Then HP_Real_Status_Input_Hidden_Power.Text = 0
            If (HP_EVs_Input_Hidden_Power.Text = "") Then HP_EVs_Input_Hidden_Power.Text = 0

            If (A_Real_Status_Input_Hidden_Power.Text = "") Then A_Real_Status_Input_Hidden_Power.Text = 0
            If (A_EVs_Input_Hidden_Power.Text = "") Then A_EVs_Input_Hidden_Power.Text = 0

            If (B_Real_Status_Input_Hidden_Power.Text = "") Then B_Real_Status_Input_Hidden_Power.Text = 0
            If (B_EVs_Input_Hidden_Power.Text = "") Then B_EVs_Input_Hidden_Power.Text = 0

            If (C_Real_Status_Input_Hidden_Power.Text = "") Then C_Real_Status_Input_Hidden_Power.Text = 0
            If (C_EVs_Input_Hidden_Power.Text = "") Then C_EVs_Input_Hidden_Power.Text = 0

            If (D_Real_Status_Input_Hidden_Power.Text = "") Then D_Real_Status_Input_Hidden_Power.Text = 0
            If (D_EVs_Input_Hidden_Power.Text = "") Then D_EVs_Input_Hidden_Power.Text = 0

            If (S_Real_Status_Input_Hidden_Power.Text = "") Then S_Real_Status_Input_Hidden_Power.Text = 0
            If (S_EVs_Input_Hidden_Power.Text = "") Then S_EVs_Input_Hidden_Power.Text = 0


            Dim Lv As Integer = Level_Input_Hidden_Power.Text

            Dim HP_RSs As Integer = HP_Real_Status_Input_Hidden_Power.Text
            Dim HP_EVs As Integer = HP_EVs_Input_Hidden_Power.Text

            Dim A_RSs As Integer = A_Real_Status_Input_Hidden_Power.Text
            Dim A_EVs As Integer = A_EVs_Input_Hidden_Power.Text

            Dim B_RSs As Integer = B_Real_Status_Input_Hidden_Power.Text
            Dim B_EVs As Integer = B_EVs_Input_Hidden_Power.Text

            Dim C_RSs As Integer = C_Real_Status_Input_Hidden_Power.Text
            Dim C_EVs As Integer = C_EVs_Input_Hidden_Power.Text

            Dim D_RSs As Integer = D_Real_Status_Input_Hidden_Power.Text
            Dim D_EVs As Integer = D_EVs_Input_Hidden_Power.Text

            Dim S_RSs As Integer = S_Real_Status_Input_Hidden_Power.Text
            Dim S_EVs As Integer = S_EVs_Input_Hidden_Power.Text

            If (510 <= HP_EVs + A_EVs + B_EVs + C_EVs + D_EVs + S_EVs) Then
                If MessageBox.Show("努力値の合計が510を超えていますが、この状態で計算しますか", "努力値が不正です", MessageBoxButtons.YesNo, MessageBoxIcon.Exclamation) = DialogResult.No Then GoTo Hidden_Power_Calc_End
            End If


            Dim HP_IVs_Min As Integer = 99
            Dim HP_IVs_Max As Integer = 99

            Dim A_IVs_Min As Integer = 99
            Dim A_IVs_Max As Integer = 99

            Dim B_IVs_Min As Integer = 99
            Dim B_IVs_Max As Integer = 99

            Dim C_IVs_Min As Integer = 99
            Dim C_IVs_Max As Integer = 99

            Dim D_IVs_Min As Integer = 99
            Dim D_IVs_Max As Integer = 99

            Dim S_IVs_Min As Integer = 99
            Dim S_IVs_Max As Integer = 99


            Dim A_Nature As Double = 1
            Dim B_Nature As Double = 1
            Dim C_Nature As Double = 1
            Dim D_Nature As Double = 1
            Dim S_Nature As Double = 1


            '性格補正の適応
            If (Nature_Select_Hidden_Power.SelectedIndex = 0) Then
                A_Nature = 1.1
                B_Nature = 0.9
            End If

            If (Nature_Select_Hidden_Power.SelectedIndex = 1) Then
                A_Nature = 1.1
                C_Nature = 0.9
            End If

            If (Nature_Select_Hidden_Power.SelectedIndex = 2) Then
                A_Nature = 1.1
                D_Nature = 0.9
            End If

            If (Nature_Select_Hidden_Power.SelectedIndex = 3) Then
                A_Nature = 1.1
                S_Nature = 0.9
            End If

            If (Nature_Select_Hidden_Power.SelectedIndex = 4) Then
                B_Nature = 1.1
                A_Nature = 0.9
            End If

            If (Nature_Select_Hidden_Power.SelectedIndex = 5) Then
                B_Nature = 1.1
                C_Nature = 0.9
            End If

            If (Nature_Select_Hidden_Power.SelectedIndex = 6) Then
                B_Nature = 1.1
                D_Nature = 0.9
            End If

            If (Nature_Select_Hidden_Power.SelectedIndex = 7) Then
                B_Nature = 1.1
                S_Nature = 0.9
            End If

            If (Nature_Select_Hidden_Power.SelectedIndex = 8) Then
                C_Nature = 1.1
                A_Nature = 0.9
            End If

            If (Nature_Select_Hidden_Power.SelectedIndex = 9) Then
                C_Nature = 1.1
                B_Nature = 0.9
            End If

            If (Nature_Select_Hidden_Power.SelectedIndex = 10) Then
                C_Nature = 1.1
                D_Nature = 0.9
            End If

            If (Nature_Select_Hidden_Power.SelectedIndex = 11) Then
                C_Nature = 1.1
                S_Nature = 0.9
            End If

            If (Nature_Select_Hidden_Power.SelectedIndex = 12) Then
                D_Nature = 1.1
                A_Nature = 0.9
            End If

            If (Nature_Select_Hidden_Power.SelectedIndex = 13) Then
                D_Nature = 1.1
                B_Nature = 0.9
            End If

            If (Nature_Select_Hidden_Power.SelectedIndex = 14) Then
                D_Nature = 1.1
                C_Nature = 0.9
            End If

            If (Nature_Select_Hidden_Power.SelectedIndex = 15) Then
                D_Nature = 1.1
                S_Nature = 0.9
            End If

            If (Nature_Select_Hidden_Power.SelectedIndex = 16) Then
                S_Nature = 1.1
                A_Nature = 0.9
            End If

            If (Nature_Select_Hidden_Power.SelectedIndex = 17) Then
                S_Nature = 1.1
                B_Nature = 0.9
            End If

            If (Nature_Select_Hidden_Power.SelectedIndex = 18) Then
                S_Nature = 1.1
                C_Nature = 0.9
            End If

            If (Nature_Select_Hidden_Power.SelectedIndex = 19) Then
                S_Nature = 1.1
                D_Nature = 0.9
            End If


            '可能性のある個体値の最小値と最大値を求める
            For L = 0 To 31
                If (HP_Real_Value(BSs(0), L, HP_EVs, Lv) = HP_RSs) Then
                    HP_IVs_Min = Math.Min(HP_IVs_Min, L)
                    HP_IVs_Max = Math.Max(HP_IVs_Min, L)
                End If
            Next

            For L = 0 To 31
                If (A_S_Real_Value(BSs(1), L, A_EVs, Lv, A_Nature) = A_RSs) Then
                    A_IVs_Min = Math.Min(A_IVs_Min, L)
                    A_IVs_Max = Math.Max(A_IVs_Min, L)
                End If
            Next

            For L = 0 To 31
                If (A_S_Real_Value(BSs(2), L, B_EVs, Lv, B_Nature) = B_RSs) Then
                    B_IVs_Min = Math.Min(B_IVs_Min, L)
                    B_IVs_Max = Math.Max(B_IVs_Min, L)
                End If
            Next

            For L = 0 To 31
                If (A_S_Real_Value(BSs(3), L, C_EVs, Lv, C_Nature) = C_RSs) Then
                    C_IVs_Min = Math.Min(C_IVs_Min, L)
                    C_IVs_Max = Math.Max(C_IVs_Min, L)
                End If
            Next

            For L = 0 To 31
                If (A_S_Real_Value(BSs(4), L, D_EVs, Lv, D_Nature) = D_RSs) Then
                    D_IVs_Min = Math.Min(D_IVs_Min, L)
                    D_IVs_Max = Math.Max(D_IVs_Min, L)
                End If
            Next

            For L = 0 To 31
                If (A_S_Real_Value(BSs(5), L, S_EVs, Lv, S_Nature) = S_RSs) Then
                    S_IVs_Min = Math.Min(S_IVs_Min, L)
                    S_IVs_Max = Math.Max(S_IVs_Min, L)
                End If
            Next


            'ヌケニンの場合、可能性のあるHP個体値を0~31にする
            If (Pokemon_Basics(Name_Index) = "ヌケニン") Then
                HP_IVs_Min = 0
                HP_IVs_Max = 31
            End If


            '実数値が不正な場合、計算をスキップする
            If (HP_IVs_Min = 99 Or A_IVs_Min = 99 Or B_IVs_Min = 99 Or C_IVs_Min = 99 Or D_IVs_Min = 99 Or S_IVs_Min = 99 Or (Pokemon_Basics(Name_Index) = "ヌケニン" And HP_RSs <> 1)) Then
                MessageBox.Show("実数値が不正です", "個体値を判断できません", MessageBoxButtons.OK, MessageBoxIcon.Error)
                GoTo Hidden_Power_Calc_End
            End If


            Dim Hidden_Power_type_0 As New List(Of String)
            Dim Hidden_Power_type_1 As New List(Of String)
            Dim Hidden_Power_type_2 As New List(Of String)
            Dim Hidden_Power_type_3 As New List(Of String)
            Dim Hidden_Power_type_4 As New List(Of String)
            Dim Hidden_Power_type_5 As New List(Of String)
            Dim Hidden_Power_type_6 As New List(Of String)
            Dim Hidden_Power_type_7 As New List(Of String)
            Dim Hidden_Power_type_8 As New List(Of String)
            Dim Hidden_Power_type_9 As New List(Of String)
            Dim Hidden_Power_type_10 As New List(Of String)
            Dim Hidden_Power_type_11 As New List(Of String)
            Dim Hidden_Power_type_12 As New List(Of String)
            Dim Hidden_Power_type_13 As New List(Of String)
            Dim Hidden_Power_type_14 As New List(Of String)
            Dim Hidden_Power_type_15 As New List(Of String)


            Dim Hiiden_Power_Power_Calced_Count() As Integer = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}

            '可能性のある個体値の組み合わせを全て計算する
            For HL = HP_IVs_Min To HP_IVs_Max
                For AL = A_IVs_Min To A_IVs_Max
                    For BL = B_IVs_Min To B_IVs_Max
                        For CL = C_IVs_Min To C_IVs_Max
                            For DL = D_IVs_Min To D_IVs_Max
                                For SL = S_IVs_Min To S_IVs_Max

                                    Type_Total = 0
                                    If (HL Mod 2 = 1) Then Type_Total += 1
                                    If (AL Mod 2 = 1) Then Type_Total += 2
                                    If (BL Mod 2 = 1) Then Type_Total += 4
                                    If (SL Mod 2 = 1) Then Type_Total += 8
                                    If (CL Mod 2 = 1) Then Type_Total += 16
                                    If (DL Mod 2 = 1) Then Type_Total += 32


                                    Power_Total = 0
                                    If (HL Mod 4 = 2 Or HL Mod 4 = 3) Then Power_Total += 1
                                    If (AL Mod 4 = 2 Or AL Mod 4 = 3) Then Power_Total += 2
                                    If (BL Mod 4 = 2 Or BL Mod 4 = 3) Then Power_Total += 4
                                    If (SL Mod 4 = 2 Or SL Mod 4 = 3) Then Power_Total += 8
                                    If (CL Mod 4 = 2 Or CL Mod 4 = 3) Then Power_Total += 16
                                    If (DL Mod 4 = 2 Or DL Mod 4 = 3) Then Power_Total += 32


                                    If Math.Floor(Type_Total * 15 / 63) = 0 And Hidden_Power_type_0.Contains(Math.Floor(Power_Total * 40 / 63 + 30)) = False Then
                                        Hidden_Power_type_0.Add(Math.Floor(Power_Total * 40 / 63 + 30))
                                        Hiiden_Power_Power_Calced_Count(0) += 1
                                    End If

                                    If Math.Floor(Type_Total * 15 / 63) = 1 And Hidden_Power_type_1.Contains(Math.Floor(Power_Total * 40 / 63 + 30)) = False Then
                                        Hidden_Power_type_1.Add(Math.Floor(Power_Total * 40 / 63 + 30))
                                        Hiiden_Power_Power_Calced_Count(1) += 1
                                    End If

                                    If Math.Floor(Type_Total * 15 / 63) = 2 And Hidden_Power_type_2.Contains(Math.Floor(Power_Total * 40 / 63 + 30)) = False Then
                                        Hidden_Power_type_2.Add(Math.Floor(Power_Total * 40 / 63 + 30))
                                        Hiiden_Power_Power_Calced_Count(2) += 1
                                    End If

                                    If Math.Floor(Type_Total * 15 / 63) = 3 And Hidden_Power_type_3.Contains(Math.Floor(Power_Total * 40 / 63 + 30)) = False Then
                                        Hidden_Power_type_3.Add(Math.Floor(Power_Total * 40 / 63 + 30))
                                        Hiiden_Power_Power_Calced_Count(3) += 1
                                    End If

                                    If Math.Floor(Type_Total * 15 / 63) = 4 And Hidden_Power_type_4.Contains(Math.Floor(Power_Total * 40 / 63 + 30)) = False Then
                                        Hidden_Power_type_4.Add(Math.Floor(Power_Total * 40 / 63 + 30))
                                        Hiiden_Power_Power_Calced_Count(4) += 1
                                    End If

                                    If Math.Floor(Type_Total * 15 / 63) = 5 And Hidden_Power_type_5.Contains(Math.Floor(Power_Total * 40 / 63 + 30)) = False Then
                                        Hidden_Power_type_5.Add(Math.Floor(Power_Total * 40 / 63 + 30))
                                        Hiiden_Power_Power_Calced_Count(5) += 1
                                    End If

                                    If Math.Floor(Type_Total * 15 / 63) = 6 And Hidden_Power_type_6.Contains(Math.Floor(Power_Total * 40 / 63 + 30)) = False Then
                                        Hidden_Power_type_6.Add(Math.Floor(Power_Total * 40 / 63 + 30))
                                        Hiiden_Power_Power_Calced_Count(6) += 1
                                    End If

                                    If Math.Floor(Type_Total * 15 / 63) = 7 And Hidden_Power_type_7.Contains(Math.Floor(Power_Total * 40 / 63 + 30)) = False Then
                                        Hidden_Power_type_7.Add(Math.Floor(Power_Total * 40 / 63 + 30))
                                        Hiiden_Power_Power_Calced_Count(7) += 1
                                    End If

                                    If Math.Floor(Type_Total * 15 / 63) = 8 And Hidden_Power_type_8.Contains(Math.Floor(Power_Total * 40 / 63 + 30)) = False Then
                                        Hidden_Power_type_8.Add(Math.Floor(Power_Total * 40 / 63 + 30))
                                        Hiiden_Power_Power_Calced_Count(8) += 1
                                    End If

                                    If Math.Floor(Type_Total * 15 / 63) = 9 And Hidden_Power_type_9.Contains(Math.Floor(Power_Total * 40 / 63 + 30)) = False Then
                                        Hidden_Power_type_9.Add(Math.Floor(Power_Total * 40 / 63 + 30))
                                        Hiiden_Power_Power_Calced_Count(9) += 1
                                    End If

                                    If Math.Floor(Type_Total * 15 / 63) = 10 And Hidden_Power_type_10.Contains(Math.Floor(Power_Total * 40 / 63 + 30)) = False Then
                                        Hidden_Power_type_10.Add(Math.Floor(Power_Total * 40 / 63 + 30))
                                        Hiiden_Power_Power_Calced_Count(10) += 1
                                    End If

                                    If Math.Floor(Type_Total * 15 / 63) = 11 And Hidden_Power_type_11.Contains(Math.Floor(Power_Total * 40 / 63 + 30)) = False Then
                                        Hidden_Power_type_11.Add(Math.Floor(Power_Total * 40 / 63 + 30))
                                        Hiiden_Power_Power_Calced_Count(11) += 1
                                    End If

                                    If Math.Floor(Type_Total * 15 / 63) = 12 And Hidden_Power_type_12.Contains(Math.Floor(Power_Total * 40 / 63 + 30)) = False Then
                                        Hidden_Power_type_12.Add(Math.Floor(Power_Total * 40 / 63 + 30))
                                        Hiiden_Power_Power_Calced_Count(12) += 1
                                    End If

                                    If Math.Floor(Type_Total * 15 / 63) = 13 And Hidden_Power_type_13.Contains(Math.Floor(Power_Total * 40 / 63 + 30)) = False Then
                                        Hidden_Power_type_13.Add(Math.Floor(Power_Total * 40 / 63 + 30))
                                        Hiiden_Power_Power_Calced_Count(13) += 1
                                    End If

                                    If Math.Floor(Type_Total * 15 / 63) = 14 And Hidden_Power_type_14.Contains(Math.Floor(Power_Total * 40 / 63 + 30)) = False Then
                                        Hidden_Power_type_14.Add(Math.Floor(Power_Total * 40 / 63 + 30))
                                        Hiiden_Power_Power_Calced_Count(14) += 1
                                    End If

                                    If Math.Floor(Type_Total * 15 / 63) = 15 And Hidden_Power_type_15.Contains(Math.Floor(Power_Total * 40 / 63 + 30)) = False Then
                                        Hidden_Power_type_15.Add(Math.Floor(Power_Total * 40 / 63 + 30))
                                        Hiiden_Power_Power_Calced_Count(15) += 1
                                    End If

                                    Dim Hiiden_Power_Found_Power_Count As Integer = 0
                                    For L = 0 To 15
                                        If (Hiiden_Power_Power_Calced_Count(L)) = 41 Then Hiiden_Power_Found_Power_Count += 1
                                        If (Hiiden_Power_Found_Power_Count = 16) Then GoTo Hidden_Power_Calc_Break
                                    Next

                                Next
                            Next
                        Next
                    Next
                Next
            Next

Hidden_Power_Calc_Break:

            '計算結果をソートする
            Hidden_Power_type_0.Sort()
            Hidden_Power_type_1.Sort()
            Hidden_Power_type_2.Sort()
            Hidden_Power_type_3.Sort()
            Hidden_Power_type_4.Sort()
            Hidden_Power_type_5.Sort()
            Hidden_Power_type_6.Sort()
            Hidden_Power_type_7.Sort()
            Hidden_Power_type_8.Sort()
            Hidden_Power_type_9.Sort()
            Hidden_Power_type_10.Sort()
            Hidden_Power_type_11.Sort()
            Hidden_Power_type_12.Sort()
            Hidden_Power_type_13.Sort()
            Hidden_Power_type_14.Sort()
            Hidden_Power_type_15.Sort()


            Dim Calced_Hidden_Power_Powers() As String = {"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""}

            For L = 0 To Hidden_Power_type_0.Count - 1
                Calced_Hidden_Power_Powers(0) += Hidden_Power_type_0(L)
                If (L <> Hidden_Power_type_0.Count - 1) Then Calced_Hidden_Power_Powers(0) += ", "
            Next

            For L = 0 To Hidden_Power_type_1.Count - 1
                Calced_Hidden_Power_Powers(1) += Hidden_Power_type_1(L)
                If (L <> Hidden_Power_type_1.Count - 1) Then Calced_Hidden_Power_Powers(1) += ", "
            Next

            For L = 0 To Hidden_Power_type_2.Count - 1
                Calced_Hidden_Power_Powers(2) += Hidden_Power_type_2(L)
                If (L <> Hidden_Power_type_2.Count - 1) Then Calced_Hidden_Power_Powers(2) += ", "
            Next

            For L = 0 To Hidden_Power_type_3.Count - 1
                Calced_Hidden_Power_Powers(3) += Hidden_Power_type_3(L)
                If (L <> Hidden_Power_type_3.Count - 1) Then Calced_Hidden_Power_Powers(3) += ", "
            Next

            For L = 0 To Hidden_Power_type_4.Count - 1
                Calced_Hidden_Power_Powers(4) += Hidden_Power_type_4(L)
                If (L <> Hidden_Power_type_4.Count - 1) Then Calced_Hidden_Power_Powers(4) += ", "
            Next

            For L = 0 To Hidden_Power_type_5.Count - 1
                Calced_Hidden_Power_Powers(5) += Hidden_Power_type_5(L)
                If (L <> Hidden_Power_type_5.Count - 1) Then Calced_Hidden_Power_Powers(5) += ", "
            Next

            For L = 0 To Hidden_Power_type_6.Count - 1
                Calced_Hidden_Power_Powers(6) += Hidden_Power_type_6(L)
                If (L <> Hidden_Power_type_6.Count - 1) Then Calced_Hidden_Power_Powers(6) += ", "
            Next

            For L = 0 To Hidden_Power_type_7.Count - 1
                Calced_Hidden_Power_Powers(7) += Hidden_Power_type_7(L)
                If (L <> Hidden_Power_type_7.Count - 1) Then Calced_Hidden_Power_Powers(7) += ", "
            Next

            For L = 0 To Hidden_Power_type_8.Count - 1
                Calced_Hidden_Power_Powers(8) += Hidden_Power_type_8(L)
                If (L <> Hidden_Power_type_8.Count - 1) Then Calced_Hidden_Power_Powers(8) += ", "
            Next

            For L = 0 To Hidden_Power_type_9.Count - 1
                Calced_Hidden_Power_Powers(9) += Hidden_Power_type_9(L)
                If (L <> Hidden_Power_type_9.Count - 1) Then Calced_Hidden_Power_Powers(9) += ", "
            Next

            For L = 0 To Hidden_Power_type_10.Count - 1
                Calced_Hidden_Power_Powers(10) += Hidden_Power_type_10(L)
                If (L <> Hidden_Power_type_10.Count - 1) Then Calced_Hidden_Power_Powers(10) += ", "
            Next

            For L = 0 To Hidden_Power_type_11.Count - 1
                Calced_Hidden_Power_Powers(11) += Hidden_Power_type_11(L)
                If (L <> Hidden_Power_type_11.Count - 1) Then Calced_Hidden_Power_Powers(11) += ", "
            Next

            For L = 0 To Hidden_Power_type_12.Count - 1
                Calced_Hidden_Power_Powers(12) += Hidden_Power_type_12(L)
                If (L <> Hidden_Power_type_12.Count - 1) Then Calced_Hidden_Power_Powers(12) += ", "
            Next

            For L = 0 To Hidden_Power_type_13.Count - 1
                Calced_Hidden_Power_Powers(13) += Hidden_Power_type_13(L)
                If (L <> Hidden_Power_type_13.Count - 1) Then Calced_Hidden_Power_Powers(13) += ", "
            Next

            For L = 0 To Hidden_Power_type_14.Count - 1
                Calced_Hidden_Power_Powers(14) += Hidden_Power_type_14(L)
                If (L <> Hidden_Power_type_14.Count - 1) Then Calced_Hidden_Power_Powers(14) += ", "
            Next

            For L = 0 To Hidden_Power_type_15.Count - 1
                Calced_Hidden_Power_Powers(15) += Hidden_Power_type_15(L)
                If (L <> Hidden_Power_type_15.Count - 1) Then Calced_Hidden_Power_Powers(15) += ", "
            Next


            Dim Type_Correspondence_table() As String = {"[かくとう]： ", "[ひこう]： ", "[どく]： ", "[じめん]： ", "[いわ]： ", "[むし]： ", "[ゴースト]： ", "[はがね]： ", "[ほのお]： ", "[みず]： ", "[くさ]： ", "[でんき]： ", "[エスパー]： ", "[こおり]： ", "[ドラゴン]： ", "[あく]： "}
            For L = 0 To 15
                If (Calced_Hidden_Power_Powers(L).Length <> False) Then Calced_Hidden_Power_Type_Power.Items.Add(Type_Correspondence_table(L) & Calced_Hidden_Power_Powers(L))
            Next


            '可能性のある個体値の最小値と最大値（表示用）
            If (HP_IVs_Min = HP_IVs_Max) Then
                Calced_HP_IVs_Display_Hidden_Power.Text = HP_IVs_Min
            Else
                Calced_HP_IVs_Display_Hidden_Power.Text = HP_IVs_Min & " ~ " & HP_IVs_Max
            End If

            If (A_IVs_Min = A_IVs_Max) Then
                Calced_A_IVs_Display_Hidden_Power.Text = A_IVs_Min
            Else
                Calced_A_IVs_Display_Hidden_Power.Text = A_IVs_Min & " ~ " & A_IVs_Max
            End If

            If (B_IVs_Min = B_IVs_Max) Then
                Calced_B_IVs_Display_Hidden_Power.Text = B_IVs_Min
            Else
                Calced_B_IVs_Display_Hidden_Power.Text = B_IVs_Min & " ~ " & B_IVs_Max
            End If

            If (C_IVs_Min = C_IVs_Max) Then
                Calced_C_IVs_Display_Hidden_Power.Text = C_IVs_Min
            Else
                Calced_C_IVs_Display_Hidden_Power.Text = C_IVs_Min & " ~ " & C_IVs_Max
            End If

            If (D_IVs_Min = D_IVs_Max) Then
                Calced_D_IVs_Display_Hidden_Power.Text = D_IVs_Min
            Else
                Calced_D_IVs_Display_Hidden_Power.Text = D_IVs_Min & " ~ " & D_IVs_Max
            End If

            If (S_IVs_Min = S_IVs_Max) Then
                Calced_S_IVs_Display_Hidden_Power.Text = S_IVs_Min
            Else
                Calced_S_IVs_Display_Hidden_Power.Text = S_IVs_Min & " ~ " & S_IVs_Max
            End If

        End If

Hidden_Power_Calc_End:

    End Sub


    '可能性のある個体値をクリップボードにコピー
    Private Sub Calced_Clipboard_Copy_Potential_IVs_Click(sender As Object, e As EventArgs) Handles Calced_Clipboard_Copy_Potential_IVs.Click
        If (Calced_HP_IVs_Display_Hidden_Power.Text <> "---") Then
            Clipboard.Clear()
            Dim Potential_IVs As String = "[" & Calced_HP_IVs_Display_Hidden_Power.Text & "]-[" & Calced_A_IVs_Display_Hidden_Power.Text & "]-[" & Calced_B_IVs_Display_Hidden_Power.Text & "]-[" & Calced_C_IVs_Display_Hidden_Power.Text & "]-[" & Calced_D_IVs_Display_Hidden_Power.Text & "]-[" & Calced_S_IVs_Display_Hidden_Power.Text & "]"
            Clipboard.SetText(Potential_IVs.Replace(" ", ""))
        End If
    End Sub

    '選択中の計算結果をクリップボードにコピー
    Private Sub Button1_Click(sender As Object, e As EventArgs) Handles Calced_Clipboard_Copy_Hidden_Power.Click
        If (Calced_Hidden_Power_Type_Power.SelectedIndex <> -1) Then
            Clipboard.Clear()
            Clipboard.SetText(Calced_Hidden_Power_Type_Power.SelectedItems(0))
        End If
    End Sub



    '====================================================================================================================================================================

    'Functions

    '====================================================================================================================================================================

    'プラス/マイナスボタン
    Public Function Minus1(N As String) As Integer
        If (N = "") Then N = 0
        N -= 1
        If (N = -1) Then N = 0
        Return N
    End Function

    Public Function Plus1(N As String) As Integer
        If (N = "") Then N = 0
        N += 1
        Return N
    End Function

    '実数値を取得
    Public Function HP_Real_Value(BSs As Integer, IVs As Integer, EVs As Integer, Lv As Integer) As Integer
        Dim N As Integer = Math.Floor(Math.Floor(((BSs * 2 + IVs + EVs / 4)) * Lv / 100) + Lv + 10)
        Return N
    End Function

    Public Function A_S_Real_Value(BSs As Integer, IVs As Integer, EVs As Integer, Lv As Integer, Nature As Double) As Integer
        Dim N As Integer = Math.Floor((Math.Floor(Math.Floor(BSs * 2 + IVs + EVs / 4) * Lv / 100) + 5) * Nature)
        Return N
    End Function

    '性格補正を取得
    Public Function Nature_Conversion(Nature As String) As Double()
        Dim N() As Double = {1, 1, 1, 1, 1}
        If (Nature = "さみしがり") Then
            N(0) = 1.1
            N(1) = 0.9
        End If
        If (Nature = "いじっぱり") Then
            N(0) = 1.1
            N(2) = 0.9
        End If
        If (Nature = "やんちゃ") Then
            N(0) = 1.1
            N(3) = 0.9
        End If
        If (Nature = "ゆうかん") Then
            N(0) = 1.1
            N(4) = 0.9
        End If
        If (Nature = "ずぶとい") Then
            N(1) = 1.1
            N(0) = 0.9
        End If
        If (Nature = "わんぱく") Then
            N(1) = 1.1
            N(2) = 0.9
        End If
        If (Nature = "のうてんき") Then
            N(1) = 1.1
            N(3) = 0.9
        End If
        If (Nature = "のんき") Then
            N(1) = 1.1
            N(4) = 0.9
        End If
        If (Nature = "ひかえめ") Then
            N(2) = 1.1
            N(0) = 0.9
        End If
        If (Nature = "おっとり") Then
            N(2) = 1.1
            N(1) = 0.9
        End If
        If (Nature = "うっかりや") Then
            N(2) = 1.1
            N(3) = 0.9
        End If
        If (Nature = "れいせい") Then
            N(2) = 1.1
            N(4) = 0.9
        End If
        If (Nature = "おだやか") Then
            N(3) = 1.1
            N(0) = 0.9
        End If
        If (Nature = "おとなしい") Then
            N(3) = 1.1
            N(1) = 0.9
        End If
        If (Nature = "しんちょう") Then
            N(3) = 1.1
            N(2) = 0.9
        End If
        If (Nature = "なまいき") Then
            N(3) = 1.1
            N(4) = 0.9
        End If
        If (Nature = "おくびょう") Then
            N(4) = 1.1
            N(0) = 0.9
        End If
        If (Nature = "せっかち") Then
            N(4) = 1.1
            N(1) = 0.9
        End If
        If (Nature = "ようき") Then
            N(4) = 1.1
            N(2) = 0.9
        End If
        If (Nature = "むじゃき") Then
            N(4) = 1.1
            N(3) = 0.9
        End If
        Return N
    End Function


    Public Function Tcc()
        If (Type_Compatibility_Chk = 1) Then
            Type_Compatibility_2 = Type_Compatibility
            Type_Compatibility_Chk = 2
        End If
        If (Type_Compatibility_Chk = 0) Then
            Type_Compatibility_1 = Type_Compatibility
            Type_Compatibility_Chk = 1
        End If
    End Function


    Public Function Calced_Datas(N As Integer, I As Integer)

        '--------------------------------------------------------------------------------

        '他フォームへの変数の渡し

        '--------------------------------------------------------------------------------

        Dim Name_Index As Integer
        Name_Index = Array.IndexOf(Pokemon_Basics, Name_1.Text)
        If (Name_Index = -1 Or Name_Index Mod 11 <> 1) Then Exit Function

        Name_Index = Array.IndexOf(Pokemon_Basics, Name_2.Text)
        If (Name_Index = -1 Or Name_Index Mod 11 <> 1) Then Exit Function

        '--------------------
        '技1
        '--------------------

        If (N = 0 And -1 <> Array.IndexOf(Move_Data, Move_Input_1.Text)) Then

            '乱数
            Calced_Move_1.Ran_Calced_Panel_Number_85.Text = Damage_Formula(0, 0)
            Calced_Move_1.Ran_Calced_Panel_Number_86.Text = Damage_Formula(0, 1)
            Calced_Move_1.Ran_Calced_Panel_Number_87.Text = Damage_Formula(0, 2)
            Calced_Move_1.Ran_Calced_Panel_Number_88.Text = Damage_Formula(0, 3)
            Calced_Move_1.Ran_Calced_Panel_Number_89.Text = Damage_Formula(0, 4)
            Calced_Move_1.Ran_Calced_Panel_Number_90.Text = Damage_Formula(0, 5)
            Calced_Move_1.Ran_Calced_Panel_Number_91.Text = Damage_Formula(0, 6)
            Calced_Move_1.Ran_Calced_Panel_Number_92.Text = Damage_Formula(0, 7)
            Calced_Move_1.Ran_Calced_Panel_Number_93.Text = Damage_Formula(0, 8)
            Calced_Move_1.Ran_Calced_Panel_Number_94.Text = Damage_Formula(0, 9)
            Calced_Move_1.Ran_Calced_Panel_Number_95.Text = Damage_Formula(0, 10)
            Calced_Move_1.Ran_Calced_Panel_Number_96.Text = Damage_Formula(0, 11)
            Calced_Move_1.Ran_Calced_Panel_Number_97.Text = Damage_Formula(0, 12)
            Calced_Move_1.Ran_Calced_Panel_Number_98.Text = Damage_Formula(0, 13)
            Calced_Move_1.Ran_Calced_Panel_Number_99.Text = Damage_Formula(0, 14)
            Calced_Move_1.Ran_Calced_Panel_Number_100.Text = Damage_Formula(0, 15)

            'ダメージ割合
            Dim Confirmed_Number As String = ""
            If (Damage_Formula(0, 0) / RSs_Input_HP_2.Text * 100 >= 100) Then Confirmed_Number = "確定1発"
            If (Damage_Formula(0, 0) / RSs_Input_HP_2.Text * 100 < 100 And Damage_Formula(0, 15) / RSs_Input_HP_2.Text * 100 >= 100) Then
                For L = 0 To 15
                    If (Damage_Formula(0, L) >= RSs_Input_HP_2.Text) Then Confirmed_Number = "乱数1発" & " (" & ((16 - L) / 16 * 100).ToString("0.00") & "%)" : Exit For
                Next
            End If
            If (Damage_Formula(0, 0) / RSs_Input_HP_2.Text * 100 >= 50 And Damage_Formula(0, 15) / RSs_Input_HP_2.Text * 100 < 100) Then Confirmed_Number = "確定2発"
            If (Damage_Formula(0, 0) / RSs_Input_HP_2.Text * 100 < 50 And Damage_Formula(0, 15) / RSs_Input_HP_2.Text * 100 >= 50) Then Confirmed_Number = "乱数2発"
            If (Damage_Formula(0, 0) / RSs_Input_HP_2.Text * 100 >= 33.34 And Damage_Formula(0, 15) / RSs_Input_HP_2.Text * 100 < 50) Then Confirmed_Number = "確定3発"
            If (Damage_Formula(0, 0) / RSs_Input_HP_2.Text * 100 < 33.34 And Damage_Formula(0, 15) / RSs_Input_HP_2.Text * 100 >= 33.34) Then Confirmed_Number = "乱数3発"
            If (Damage_Formula(0, 0) / RSs_Input_HP_2.Text * 100 >= 25 And Damage_Formula(0, 15) / RSs_Input_HP_2.Text * 100 < 33.4) Then Confirmed_Number = "確定4発"
            If (Damage_Formula(0, 0) / RSs_Input_HP_2.Text * 100 < 25 And Damage_Formula(0, 15) / RSs_Input_HP_2.Text * 100 >= 25) Then Confirmed_Number = "乱数4発"
            If (Damage_Formula(0, 15) / RSs_Input_HP_2.Text * 100 < 25) Then Confirmed_Number = "5発以上"
            Calced_Move_1.Damege.Text = (Damage_Formula(0, 0) / RSs_Input_HP_2.Text * 100).ToString("0.00") & "% ～ " & (Damage_Formula(0, 15) / RSs_Input_HP_2.Text * 100).ToString("0.00") & "%　" & Confirmed_Number

            '威力 / 威力補正 / 最終威力
            Calced_Move_1.Power.Text = Power_1.Text
            Calced_Move_1.Power_C.Text = Power_C(0).ToString("0.00")
            Calced_Move_1.Lasted_Power.Text = BasePower(0)
            '技タイプ
            Calced_Move_1.Move_Type.Text = Move_Type(0)

            '攻撃力
            If (Move_Data(Array.IndexOf(Move_Data, Move_Input_1.Text) + 3) = 0) Then
                Calced_Move_1.RSs_A_C_View.Text = "攻撃"
                Calced_Move_1.RSs_A_C.Text = RSs_Input_A_1.Text
            End If
            If (Move_Data(Array.IndexOf(Move_Data, Move_Input_1.Text) + 3) = 1) Then
                Calced_Move_1.RSs_A_C_View.Text = "特攻"
                Calced_Move_1.RSs_A_C.Text = RSs_Input_C_1.Text
            End If
            'ランク
            If (Move_Data(Array.IndexOf(Move_Data, Move_Input_1.Text) + 3) = 0) Then Calced_Move_1.Rank_A_C.Text = Rank_A_1.Text
            If (Move_Data(Array.IndexOf(Move_Data, Move_Input_1.Text) + 3) = 1) Then Calced_Move_1.Rank_A_C.Text = Rank_C_1.Text
            '攻撃力補正
            If (Move_Data(Array.IndexOf(Move_Data, Move_Input_1.Text) + 3) = 0) Then Calced_Move_1.Atk_A_C.Text = Atk_A_C(0).ToString("0.00")
            If (Move_Data(Array.IndexOf(Move_Data, Move_Input_1.Text) + 3) = 1) Then Calced_Move_1.Atk_A_C.Text = Atk_A_C(1).ToString("0.00")
            '最終攻撃力
            If (Move_Data(Array.IndexOf(Move_Data, Move_Input_1.Text) + 3) = 0) Then Calced_Move_1.Lasted_A_C.Text = Atk_A(0)
            If (Move_Data(Array.IndexOf(Move_Data, Move_Input_1.Text) + 3) = 1) Then Calced_Move_1.Lasted_A_C.Text = Atk_C(0)
            '攻撃側タイプ
            Dim Type_A_Dymmy As String = Types_1(0)
            If (Types_1.Length = 2 And Types_1(0) <> Types_1(1)) Then Type_A_Dymmy += " / " & Types_1(1)
            Calced_Move_1.Type_A.Text = Type_A_Dymmy

            '防御力
            If (Move_Data(Array.IndexOf(Move_Data, Move_Input_1.Text) + 3) = 0) Then
                Calced_Move_1.RSs_B_D_View.Text = "防御"
                Calced_Move_1.RSs_B_D.Text = RSs_Input_B_2.Text
            End If
            If (Move_Data(Array.IndexOf(Move_Data, Move_Input_1.Text) + 3) = 1) Then
                Calced_Move_1.RSs_B_D_View.Text = "特防"
                Calced_Move_1.RSs_B_D.Text = RSs_Input_D_2.Text
            End If
            'ランク
            If (Move_Data(Array.IndexOf(Move_Data, Move_Input_1.Text) + 3) = 0) Then Calced_Move_1.Rank_B_D.Text = Rank_B_2.Text
            If (Move_Data(Array.IndexOf(Move_Data, Move_Input_1.Text) + 3) = 1) Then Calced_Move_1.Rank_B_D.Text = Rank_D_2.Text
            '防御力補正
            If (Move_Data(Array.IndexOf(Move_Data, Move_Input_1.Text) + 3) = 0) Then Calced_Move_1.Def_B_D.Text = Def_B_D(0).ToString("0.00")
            If (Move_Data(Array.IndexOf(Move_Data, Move_Input_1.Text) + 3) = 1) Then Calced_Move_1.Def_B_D.Text = Def_B_D(1).ToString("0.00")
            '最終防御力
            If (Move_Data(Array.IndexOf(Move_Data, Move_Input_1.Text) + 3) = 0) Then Calced_Move_1.Lasted_B_D.Text = Def_B(0)
            If (Move_Data(Array.IndexOf(Move_Data, Move_Input_1.Text) + 3) = 1) Then Calced_Move_1.Lasted_B_D.Text = Def_D(0)
            '防御側タイプ
            Dim Type_D_Dymmy As String = Types_2(0)
            If (Types_2.Length = 2 And Types_2(0) <> Types_2(1)) Then Type_D_Dymmy += " / " & Types_2(1)
            Calced_Move_1.Type_D.Text = Type_D_Dymmy

            'ダメージ補正
            Calced_Move_1.Damage_C.Text = (Mod1(0) * Mod2(0) * Mod3(0)).ToString("0.00")
            '範囲補正
            'Calced_Move_1.Range.Text = Range
            'タイプ一致補正
            Calced_Move_1.STAB.Text = STAB(0)
            '相性補正
            Calced_Move_1.Type_Compatibility.Text = Calced_Type_Compatibility(0, 0) * Calced_Type_Compatibility(0, 1)
            '急所補正
            Calced_Move_1.Critical.Text = CH(0)

            '攻撃側素早さ
            Calced_Move_1.RSs_S_1.Text = RSs_Input_S_1.Text
            'ランク補正
            Calced_Move_1.Rank_S_1.Text = Rank_S_1.Text
            '素早さ補正
            Calced_Move_1.Atk_S.Text = Atk_S.ToString("0.00")
            '攻撃側最終素早さ
            Calced_Move_1.Lasted_S_1.Text = S_1

            '防御側素早さ
            Calced_Move_1.RSs_S_2.Text = RSs_Input_S_2.Text
            'ランク補正
            Calced_Move_1.Rank_S_2.Text = Rank_S_2.Text
            '素早さ補正
            Calced_Move_1.Def_S.Text = Def_S.ToString("0.00")
            '防御側最終素早さ
            Calced_Move_1.Lasted_S_2.Text = S_2

        End If


        '--------------------
        '技2
        '--------------------

        If (N = 1 And -1 <> Array.IndexOf(Move_Data, Move_Input_2.Text)) Then
            '乱数
            Calced_Move_2.Ran_Calced_Panel_Number_85.Text = Damage_Formula(1, 0)
            Calced_Move_2.Ran_Calced_Panel_Number_86.Text = Damage_Formula(1, 1)
            Calced_Move_2.Ran_Calced_Panel_Number_87.Text = Damage_Formula(1, 2)
            Calced_Move_2.Ran_Calced_Panel_Number_88.Text = Damage_Formula(1, 3)
            Calced_Move_2.Ran_Calced_Panel_Number_89.Text = Damage_Formula(1, 4)
            Calced_Move_2.Ran_Calced_Panel_Number_90.Text = Damage_Formula(1, 5)
            Calced_Move_2.Ran_Calced_Panel_Number_91.Text = Damage_Formula(1, 6)
            Calced_Move_2.Ran_Calced_Panel_Number_92.Text = Damage_Formula(1, 7)
            Calced_Move_2.Ran_Calced_Panel_Number_93.Text = Damage_Formula(1, 8)
            Calced_Move_2.Ran_Calced_Panel_Number_94.Text = Damage_Formula(1, 9)
            Calced_Move_2.Ran_Calced_Panel_Number_95.Text = Damage_Formula(1, 10)
            Calced_Move_2.Ran_Calced_Panel_Number_96.Text = Damage_Formula(1, 11)
            Calced_Move_2.Ran_Calced_Panel_Number_97.Text = Damage_Formula(1, 12)
            Calced_Move_2.Ran_Calced_Panel_Number_98.Text = Damage_Formula(1, 13)
            Calced_Move_2.Ran_Calced_Panel_Number_99.Text = Damage_Formula(1, 14)
            Calced_Move_2.Ran_Calced_Panel_Number_100.Text = Damage_Formula(1, 15)

            'ダメージ割合
            Dim Confirmed_Number As String = ""
            If (Damage_Formula(1, 0) / RSs_Input_HP_2.Text * 100 >= 100) Then Confirmed_Number = "確定1発"
            If (Damage_Formula(1, 0) / RSs_Input_HP_2.Text * 100 < 100 And Damage_Formula(1, 15) / RSs_Input_HP_2.Text * 100 >= 100) Then
                For L = 0 To 15
                    If (Damage_Formula(1, L) >= RSs_Input_HP_2.Text) Then Confirmed_Number = "乱数1発" & " (" & ((16 - L) / 16 * 100).ToString("0.00") & "%)" : Exit For
                Next
            End If
            If (Damage_Formula(1, 0) / RSs_Input_HP_2.Text * 100 >= 50 And Damage_Formula(1, 15) / RSs_Input_HP_2.Text * 100 < 100) Then Confirmed_Number = "確定2発"
            If (Damage_Formula(1, 0) / RSs_Input_HP_2.Text * 100 < 50 And Damage_Formula(1, 15) / RSs_Input_HP_2.Text * 100 >= 50) Then Confirmed_Number = "乱数2発"
            If (Damage_Formula(1, 0) / RSs_Input_HP_2.Text * 100 >= 33.34 And Damage_Formula(1, 15) / RSs_Input_HP_2.Text * 100 < 50) Then Confirmed_Number = "確定3発"
            If (Damage_Formula(1, 0) / RSs_Input_HP_2.Text * 100 < 33.34 And Damage_Formula(1, 15) / RSs_Input_HP_2.Text * 100 >= 33.34) Then Confirmed_Number = "乱数3発"
            If (Damage_Formula(1, 0) / RSs_Input_HP_2.Text * 100 >= 25 And Damage_Formula(1, 15) / RSs_Input_HP_2.Text * 100 < 33.4) Then Confirmed_Number = "確定4発"
            If (Damage_Formula(1, 0) / RSs_Input_HP_2.Text * 100 < 25 And Damage_Formula(1, 15) / RSs_Input_HP_2.Text * 100 >= 25) Then Confirmed_Number = "乱数4発"
            If (Damage_Formula(1, 15) / RSs_Input_HP_2.Text * 100 < 25) Then Confirmed_Number = "5発以上"
            Calced_Move_2.Damege.Text = (Damage_Formula(1, 0) / RSs_Input_HP_2.Text * 100).ToString("0.00") & "% ～ " & (Damage_Formula(1, 15) / RSs_Input_HP_2.Text * 100).ToString("0.00") & "%　" & Confirmed_Number

            '威力 / 威力補正 / 最終威力
            Calced_Move_2.Power.Text = Power_2.Text
            Calced_Move_2.Power_C.Text = Power_C(1).ToString("0.00")
            Calced_Move_2.Lasted_Power.Text = BasePower(1)
            '技タイプ
            Calced_Move_2.Move_Type.Text = Move_Type(1)

            '攻撃力
            If (Move_Data(Array.IndexOf(Move_Data, Move_Input_2.Text) + 3) = 0) Then
                Calced_Move_2.RSs_A_C_View.Text = "攻撃"
                Calced_Move_2.RSs_A_C.Text = RSs_Input_A_1.Text
            End If
            If (Move_Data(Array.IndexOf(Move_Data, Move_Input_2.Text) + 3) = 1) Then
                Calced_Move_2.RSs_A_C_View.Text = "特攻"
                Calced_Move_2.RSs_A_C.Text = RSs_Input_C_1.Text
            End If
            'ランク
            If (Move_Data(Array.IndexOf(Move_Data, Move_Input_2.Text) + 3) = 0) Then Calced_Move_2.Rank_A_C.Text = Rank_A_1.Text
            If (Move_Data(Array.IndexOf(Move_Data, Move_Input_2.Text) + 3) = 1) Then Calced_Move_2.Rank_A_C.Text = Rank_C_1.Text
            '攻撃力補正
            If (Move_Data(Array.IndexOf(Move_Data, Move_Input_2.Text) + 3) = 0) Then Calced_Move_2.Atk_A_C.Text = Atk_A_C(0).ToString("0.00")
            If (Move_Data(Array.IndexOf(Move_Data, Move_Input_2.Text) + 3) = 1) Then Calced_Move_2.Atk_A_C.Text = Atk_A_C(1).ToString("0.00")
            '最終攻撃力
            If (Move_Data(Array.IndexOf(Move_Data, Move_Input_2.Text) + 3) = 0) Then Calced_Move_2.Lasted_A_C.Text = Atk_A(1)
            If (Move_Data(Array.IndexOf(Move_Data, Move_Input_2.Text) + 3) = 1) Then Calced_Move_2.Lasted_A_C.Text = Atk_C(1)
            '攻撃側タイプ
            Dim Type_A_Dymmy As String = Types_1(0)
            If (Types_1.Length = 2 And Types_1(0) <> Types_1(1)) Then Type_A_Dymmy += " / " & Types_1(1)
            Calced_Move_2.Type_A.Text = Type_A_Dymmy

            '防御力
            If (Move_Data(Array.IndexOf(Move_Data, Move_Input_2.Text) + 3) = 0) Then
                Calced_Move_2.RSs_B_D_View.Text = "防御"
                Calced_Move_2.RSs_B_D.Text = RSs_Input_B_2.Text
            End If
            If (Move_Data(Array.IndexOf(Move_Data, Move_Input_2.Text) + 3) = 1) Then
                Calced_Move_2.RSs_B_D_View.Text = "特防"
                Calced_Move_2.RSs_B_D.Text = RSs_Input_D_2.Text
            End If
            'ランク
            If (Move_Data(Array.IndexOf(Move_Data, Move_Input_2.Text) + 3) = 0) Then Calced_Move_2.Rank_B_D.Text = Rank_B_2.Text
            If (Move_Data(Array.IndexOf(Move_Data, Move_Input_2.Text) + 3) = 1) Then Calced_Move_2.Rank_B_D.Text = Rank_D_2.Text
            '防御力補正
            If (Move_Data(Array.IndexOf(Move_Data, Move_Input_2.Text) + 3) = 0) Then Calced_Move_2.Def_B_D.Text = Def_B_D(0).ToString("0.00")
            If (Move_Data(Array.IndexOf(Move_Data, Move_Input_2.Text) + 3) = 1) Then Calced_Move_2.Def_B_D.Text = Def_B_D(1).ToString("0.00")
            '最終防御力
            If (Move_Data(Array.IndexOf(Move_Data, Move_Input_2.Text) + 3) = 0) Then Calced_Move_2.Lasted_B_D.Text = Def_B(0)
            If (Move_Data(Array.IndexOf(Move_Data, Move_Input_2.Text) + 3) = 1) Then Calced_Move_2.Lasted_B_D.Text = Def_D(0)
            '防御側タイプ
            Dim Type_D_Dymmy As String = Types_2(0)
            If (Types_2.Length = 2 And Types_2(0) <> Types_2(1)) Then Type_D_Dymmy += " / " & Types_2(1)
            Calced_Move_2.Type_D.Text = Type_D_Dymmy

            'ダメージ補正
            Calced_Move_2.Damage_C.Text = (Mod1(1) * Mod2(1) * Mod3(1)).ToString("0.00")
            '範囲補正
            'Calced_Move_2.Range.Text = Range
            'タイプ一致補正
            Calced_Move_2.STAB.Text = STAB(1)
            '相性補正
            Calced_Move_2.Type_Compatibility.Text = Calced_Type_Compatibility(1, 0) * Calced_Type_Compatibility(1, 1)
            '急所補正
            Calced_Move_2.Critical.Text = CH(1)

            '攻撃側素早さ
            Calced_Move_2.RSs_S_1.Text = RSs_Input_S_1.Text
            'ランク補正
            Calced_Move_2.Rank_S_1.Text = Rank_S_1.Text
            '素早さ補正
            Calced_Move_2.Atk_S.Text = Atk_S.ToString("0.00")
            '攻撃側最終素早さ
            Calced_Move_2.Lasted_S_1.Text = S_1

            '防御側素早さ
            Calced_Move_2.RSs_S_2.Text = RSs_Input_S_2.Text
            'ランク補正
            Calced_Move_2.Rank_S_2.Text = Rank_S_2.Text
            '素早さ補正
            Calced_Move_2.Def_S.Text = Def_S.ToString("0.00")
            '防御側最終素早さ
            Calced_Move_2.Lasted_S_2.Text = S_2

        End If


        '--------------------
        '技3
        '--------------------

        If (N = 2 And -1 <> Array.IndexOf(Move_Data, Move_Input_3.Text)) Then
            '乱数
            Calced_Move_3.Ran_Calced_Panel_Number_85.Text = Damage_Formula(2, 0)
            Calced_Move_3.Ran_Calced_Panel_Number_86.Text = Damage_Formula(2, 1)
            Calced_Move_3.Ran_Calced_Panel_Number_87.Text = Damage_Formula(2, 2)
            Calced_Move_3.Ran_Calced_Panel_Number_88.Text = Damage_Formula(2, 3)
            Calced_Move_3.Ran_Calced_Panel_Number_89.Text = Damage_Formula(2, 4)
            Calced_Move_3.Ran_Calced_Panel_Number_90.Text = Damage_Formula(2, 5)
            Calced_Move_3.Ran_Calced_Panel_Number_91.Text = Damage_Formula(2, 6)
            Calced_Move_3.Ran_Calced_Panel_Number_92.Text = Damage_Formula(2, 7)
            Calced_Move_3.Ran_Calced_Panel_Number_93.Text = Damage_Formula(2, 8)
            Calced_Move_3.Ran_Calced_Panel_Number_94.Text = Damage_Formula(2, 9)
            Calced_Move_3.Ran_Calced_Panel_Number_95.Text = Damage_Formula(2, 10)
            Calced_Move_3.Ran_Calced_Panel_Number_96.Text = Damage_Formula(2, 11)
            Calced_Move_3.Ran_Calced_Panel_Number_97.Text = Damage_Formula(2, 12)
            Calced_Move_3.Ran_Calced_Panel_Number_98.Text = Damage_Formula(2, 13)
            Calced_Move_3.Ran_Calced_Panel_Number_99.Text = Damage_Formula(2, 14)
            Calced_Move_3.Ran_Calced_Panel_Number_100.Text = Damage_Formula(2, 15)

            'ダメージ割合
            Dim Confirmed_Number As String = ""
            If (Damage_Formula(2, 0) / RSs_Input_HP_2.Text * 100 >= 100) Then Confirmed_Number = "確定1発"
            If (Damage_Formula(2, 0) / RSs_Input_HP_2.Text * 100 < 100 And Damage_Formula(2, 15) / RSs_Input_HP_2.Text * 100 >= 100) Then
                For L = 0 To 15
                    If (Damage_Formula(2, L) >= RSs_Input_HP_2.Text) Then Confirmed_Number = "乱数1発" & " (" & ((16 - L) / 16 * 100).ToString("0.00") & "%)" : Exit For
                Next
            End If
            If (Damage_Formula(2, 0) / RSs_Input_HP_2.Text * 100 >= 50 And Damage_Formula(2, 15) / RSs_Input_HP_2.Text * 100 < 100) Then Confirmed_Number = "確定2発"
            If (Damage_Formula(2, 0) / RSs_Input_HP_2.Text * 100 < 50 And Damage_Formula(2, 15) / RSs_Input_HP_2.Text * 100 >= 50) Then Confirmed_Number = "乱数2発"
            If (Damage_Formula(2, 0) / RSs_Input_HP_2.Text * 100 >= 33.34 And Damage_Formula(2, 15) / RSs_Input_HP_2.Text * 100 < 50) Then Confirmed_Number = "確定3発"
            If (Damage_Formula(2, 0) / RSs_Input_HP_2.Text * 100 < 33.34 And Damage_Formula(2, 15) / RSs_Input_HP_2.Text * 100 >= 33.34) Then Confirmed_Number = "乱数3発"
            If (Damage_Formula(2, 0) / RSs_Input_HP_2.Text * 100 >= 25 And Damage_Formula(2, 15) / RSs_Input_HP_2.Text * 100 < 33.4) Then Confirmed_Number = "確定4発"
            If (Damage_Formula(2, 0) / RSs_Input_HP_2.Text * 100 < 25 And Damage_Formula(2, 15) / RSs_Input_HP_2.Text * 100 >= 25) Then Confirmed_Number = "乱数4発"
            If (Damage_Formula(2, 15) / RSs_Input_HP_2.Text * 100 < 25) Then Confirmed_Number = "5発以上"
            Calced_Move_3.Damege.Text = (Damage_Formula(2, 0) / RSs_Input_HP_2.Text * 100).ToString("0.00") & "% ～ " & (Damage_Formula(2, 15) / RSs_Input_HP_2.Text * 100).ToString("0.00") & "%　" & Confirmed_Number

            '威力 / 威力補正 / 最終威力
            Calced_Move_3.Power.Text = Power_3.Text
            Calced_Move_3.Power_C.Text = Power_C(2).ToString("0.00")
            Calced_Move_3.Lasted_Power.Text = BasePower(2)
            '技タイプ
            Calced_Move_3.Move_Type.Text = Move_Type(2)

            '攻撃力
            If (Move_Data(Array.IndexOf(Move_Data, Move_Input_3.Text) + 3) = 0) Then
                Calced_Move_3.RSs_A_C_View.Text = "攻撃"
                Calced_Move_3.RSs_A_C.Text = RSs_Input_A_1.Text
            End If
            If (Move_Data(Array.IndexOf(Move_Data, Move_Input_2.Text) + 3) = 1) Then
                Calced_Move_3.RSs_A_C_View.Text = "特攻"
                Calced_Move_3.RSs_A_C.Text = RSs_Input_C_1.Text
            End If
            'ランク
            If (Move_Data(Array.IndexOf(Move_Data, Move_Input_3.Text) + 3) = 0) Then Calced_Move_3.Rank_A_C.Text = Rank_A_1.Text
            If (Move_Data(Array.IndexOf(Move_Data, Move_Input_3.Text) + 3) = 1) Then Calced_Move_3.Rank_A_C.Text = Rank_C_1.Text
            '攻撃力補正
            If (Move_Data(Array.IndexOf(Move_Data, Move_Input_3.Text) + 3) = 0) Then Calced_Move_3.Atk_A_C.Text = Atk_A_C(0).ToString("0.00")
            If (Move_Data(Array.IndexOf(Move_Data, Move_Input_3.Text) + 3) = 1) Then Calced_Move_3.Atk_A_C.Text = Atk_A_C(1).ToString("0.00")
            '最終攻撃力
            If (Move_Data(Array.IndexOf(Move_Data, Move_Input_3.Text) + 3) = 0) Then Calced_Move_3.Lasted_A_C.Text = Atk_A(2)
            If (Move_Data(Array.IndexOf(Move_Data, Move_Input_3.Text) + 3) = 1) Then Calced_Move_3.Lasted_A_C.Text = Atk_C(2)
            '攻撃側タイプ
            Dim Type_A_Dymmy As String = Types_1(0)
            If (Types_1.Length = 2 And Types_1(0) <> Types_1(1)) Then Type_A_Dymmy += " / " & Types_1(1)
            Calced_Move_3.Type_A.Text = Type_A_Dymmy

            '防御力
            If (Move_Data(Array.IndexOf(Move_Data, Move_Input_3.Text) + 3) = 0) Then
                Calced_Move_3.RSs_B_D_View.Text = "防御"
                Calced_Move_3.RSs_B_D.Text = RSs_Input_B_2.Text
            End If
            If (Move_Data(Array.IndexOf(Move_Data, Move_Input_3.Text) + 3) = 1) Then
                Calced_Move_3.RSs_B_D_View.Text = "特防"
                Calced_Move_3.RSs_B_D.Text = RSs_Input_D_2.Text
            End If
            'ランク
            If (Move_Data(Array.IndexOf(Move_Data, Move_Input_3.Text) + 3) = 0) Then Calced_Move_3.Rank_B_D.Text = Rank_B_2.Text
            If (Move_Data(Array.IndexOf(Move_Data, Move_Input_3.Text) + 3) = 1) Then Calced_Move_3.Rank_B_D.Text = Rank_D_2.Text
            '防御力補正
            If (Move_Data(Array.IndexOf(Move_Data, Move_Input_3.Text) + 3) = 0) Then Calced_Move_3.Def_B_D.Text = Def_B_D(0).ToString("0.00")
            If (Move_Data(Array.IndexOf(Move_Data, Move_Input_3.Text) + 3) = 1) Then Calced_Move_3.Def_B_D.Text = Def_B_D(1).ToString("0.00")
            '最終防御力
            If (Move_Data(Array.IndexOf(Move_Data, Move_Input_3.Text) + 3) = 0) Then Calced_Move_3.Lasted_B_D.Text = Def_B(0)
            If (Move_Data(Array.IndexOf(Move_Data, Move_Input_3.Text) + 3) = 1) Then Calced_Move_3.Lasted_B_D.Text = Def_D(0)
            '防御側タイプ
            Dim Type_D_Dymmy As String = Types_2(0)
            If (Types_2.Length = 2 And Types_2(0) <> Types_2(1)) Then Type_D_Dymmy += " / " & Types_2(1)
            Calced_Move_3.Type_D.Text = Type_D_Dymmy

            'ダメージ補正
            Calced_Move_3.Damage_C.Text = (Mod1(2) * Mod2(2) * Mod3(2)).ToString("0.00")
            '範囲補正
            'Calced_Move_3.Range.Text = Range
            'タイプ一致補正
            Calced_Move_3.STAB.Text = STAB(2)
            '相性補正
            Calced_Move_3.Type_Compatibility.Text = Calced_Type_Compatibility(2, 0) * Calced_Type_Compatibility(2, 1)
            '急所補正
            Calced_Move_3.Critical.Text = CH(2)

            '攻撃側素早さ
            Calced_Move_3.RSs_S_1.Text = RSs_Input_S_1.Text
            'ランク補正
            Calced_Move_3.Rank_S_1.Text = Rank_S_1.Text
            '素早さ補正
            Calced_Move_3.Atk_S.Text = Atk_S.ToString("0.00")
            '攻撃側最終素早さ
            Calced_Move_3.Lasted_S_1.Text = S_1

            '防御側素早さ
            Calced_Move_3.RSs_S_2.Text = RSs_Input_S_2.Text
            'ランク補正
            Calced_Move_3.Rank_S_2.Text = Rank_S_2.Text
            '素早さ補正
            Calced_Move_3.Def_S.Text = Def_S.ToString("0.00")
            '防御側最終素早さ
            Calced_Move_3.Lasted_S_2.Text = S_2

        End If


        '--------------------
        '技4
        '--------------------

        If (N = 3 And -1 <> Array.IndexOf(Move_Data, Move_Input_4.Text)) Then
            '乱数
            Calced_Move_4.Ran_Calced_Panel_Number_85.Text = Damage_Formula(3, 0)
            Calced_Move_4.Ran_Calced_Panel_Number_86.Text = Damage_Formula(3, 1)
            Calced_Move_4.Ran_Calced_Panel_Number_87.Text = Damage_Formula(3, 2)
            Calced_Move_4.Ran_Calced_Panel_Number_88.Text = Damage_Formula(3, 3)
            Calced_Move_4.Ran_Calced_Panel_Number_89.Text = Damage_Formula(3, 4)
            Calced_Move_4.Ran_Calced_Panel_Number_90.Text = Damage_Formula(3, 5)
            Calced_Move_4.Ran_Calced_Panel_Number_91.Text = Damage_Formula(3, 6)
            Calced_Move_4.Ran_Calced_Panel_Number_92.Text = Damage_Formula(3, 7)
            Calced_Move_4.Ran_Calced_Panel_Number_93.Text = Damage_Formula(3, 8)
            Calced_Move_4.Ran_Calced_Panel_Number_94.Text = Damage_Formula(3, 9)
            Calced_Move_4.Ran_Calced_Panel_Number_95.Text = Damage_Formula(3, 10)
            Calced_Move_4.Ran_Calced_Panel_Number_96.Text = Damage_Formula(3, 11)
            Calced_Move_4.Ran_Calced_Panel_Number_97.Text = Damage_Formula(3, 12)
            Calced_Move_4.Ran_Calced_Panel_Number_98.Text = Damage_Formula(3, 13)
            Calced_Move_4.Ran_Calced_Panel_Number_99.Text = Damage_Formula(3, 14)
            Calced_Move_4.Ran_Calced_Panel_Number_100.Text = Damage_Formula(3, 15)

            'ダメージ割合
            Dim Confirmed_Number As String = ""
            If (Damage_Formula(3, 0) / RSs_Input_HP_2.Text * 100 >= 100) Then Confirmed_Number = "確定1発"
            If (Damage_Formula(3, 0) / RSs_Input_HP_2.Text * 100 < 100 And Damage_Formula(3, 15) / RSs_Input_HP_2.Text * 100 >= 100) Then
                For L = 0 To 15
                    If (Damage_Formula(3, L) >= RSs_Input_HP_2.Text) Then Confirmed_Number = "乱数1発" & " (" & ((16 - L) / 16 * 100).ToString("0.00") & "%)" : Exit For
                Next
            End If
            If (Damage_Formula(3, 0) / RSs_Input_HP_2.Text * 100 >= 50 And Damage_Formula(3, 15) / RSs_Input_HP_2.Text * 100 < 100) Then Confirmed_Number = "確定2発"
            If (Damage_Formula(3, 0) / RSs_Input_HP_2.Text * 100 < 50 And Damage_Formula(3, 15) / RSs_Input_HP_2.Text * 100 >= 50) Then Confirmed_Number = "乱数2発"
            If (Damage_Formula(3, 0) / RSs_Input_HP_2.Text * 100 >= 33.34 And Damage_Formula(3, 15) / RSs_Input_HP_2.Text * 100 < 50) Then Confirmed_Number = "確定3発"
            If (Damage_Formula(3, 0) / RSs_Input_HP_2.Text * 100 < 33.34 And Damage_Formula(3, 15) / RSs_Input_HP_2.Text * 100 >= 33.34) Then Confirmed_Number = "乱数3発"
            If (Damage_Formula(3, 0) / RSs_Input_HP_2.Text * 100 >= 25 And Damage_Formula(3, 15) / RSs_Input_HP_2.Text * 100 < 33.4) Then Confirmed_Number = "確定4発"
            If (Damage_Formula(3, 0) / RSs_Input_HP_2.Text * 100 < 25 And Damage_Formula(3, 15) / RSs_Input_HP_2.Text * 100 >= 25) Then Confirmed_Number = "乱数4発"
            If (Damage_Formula(3, 15) / RSs_Input_HP_2.Text * 100 < 25) Then Confirmed_Number = "5発以上"
            Calced_Move_4.Damege.Text = (Damage_Formula(3, 0) / RSs_Input_HP_2.Text * 100).ToString("0.00") & "% ～ " & (Damage_Formula(3, 15) / RSs_Input_HP_2.Text * 100).ToString("0.00") & "%　" & Confirmed_Number

            '威力 / 威力補正 / 最終威力
            Calced_Move_4.Power.Text = Power_4.Text
            Calced_Move_4.Power_C.Text = Power_C(3).ToString("0.00")
            Calced_Move_4.Lasted_Power.Text = BasePower(3)
            '技タイプ
            Calced_Move_4.Move_Type.Text = Move_Type(3)

            '攻撃力
            If (Move_Data(Array.IndexOf(Move_Data, Move_Input_4.Text) + 3) = 0) Then
                Calced_Move_4.RSs_A_C_View.Text = "攻撃"
                Calced_Move_4.RSs_A_C.Text = RSs_Input_A_1.Text
            End If
            If (Move_Data(Array.IndexOf(Move_Data, Move_Input_4.Text) + 3) = 1) Then
                Calced_Move_4.RSs_A_C_View.Text = "特攻"
                Calced_Move_4.RSs_A_C.Text = RSs_Input_C_1.Text
            End If
            'ランク
            If (Move_Data(Array.IndexOf(Move_Data, Move_Input_4.Text) + 3) = 0) Then Calced_Move_4.Rank_A_C.Text = Rank_A_1.Text
            If (Move_Data(Array.IndexOf(Move_Data, Move_Input_4.Text) + 3) = 1) Then Calced_Move_4.Rank_A_C.Text = Rank_C_1.Text
            '攻撃力補正
            If (Move_Data(Array.IndexOf(Move_Data, Move_Input_4.Text) + 3) = 0) Then Calced_Move_4.Atk_A_C.Text = Atk_A_C(0).ToString("0.00")
            If (Move_Data(Array.IndexOf(Move_Data, Move_Input_4.Text) + 3) = 1) Then Calced_Move_4.Atk_A_C.Text = Atk_A_C(1).ToString("0.00")
            '最終攻撃力
            If (Move_Data(Array.IndexOf(Move_Data, Move_Input_4.Text) + 3) = 0) Then Calced_Move_4.Lasted_A_C.Text = Atk_A(3)
            If (Move_Data(Array.IndexOf(Move_Data, Move_Input_4.Text) + 3) = 1) Then Calced_Move_4.Lasted_A_C.Text = Atk_C(3)
            '攻撃側タイプ
            Dim Type_A_Dymmy As String = Types_1(0)
            If (Types_1.Length = 2 And Types_1(0) <> Types_1(1)) Then Type_A_Dymmy += " / " & Types_1(1)
            Calced_Move_4.Type_A.Text = Type_A_Dymmy

            '防御力
            If (Move_Data(Array.IndexOf(Move_Data, Move_Input_4.Text) + 3) = 0) Then
                Calced_Move_4.RSs_B_D_View.Text = "防御"
                Calced_Move_4.RSs_B_D.Text = RSs_Input_B_2.Text
            End If
            If (Move_Data(Array.IndexOf(Move_Data, Move_Input_4.Text) + 3) = 1) Then
                Calced_Move_4.RSs_B_D_View.Text = "特防"
                Calced_Move_4.RSs_B_D.Text = RSs_Input_D_2.Text
            End If
            'ランク
            If (Move_Data(Array.IndexOf(Move_Data, Move_Input_4.Text) + 3) = 0) Then Calced_Move_4.Rank_B_D.Text = Rank_B_2.Text
            If (Move_Data(Array.IndexOf(Move_Data, Move_Input_4.Text) + 3) = 1) Then Calced_Move_4.Rank_B_D.Text = Rank_D_2.Text
            '防御力補正
            If (Move_Data(Array.IndexOf(Move_Data, Move_Input_4.Text) + 3) = 0) Then Calced_Move_4.Def_B_D.Text = Def_B_D(0).ToString("0.00")
            If (Move_Data(Array.IndexOf(Move_Data, Move_Input_4.Text) + 3) = 1) Then Calced_Move_4.Def_B_D.Text = Def_B_D(1).ToString("0.00")
            '最終防御力
            If (Move_Data(Array.IndexOf(Move_Data, Move_Input_4.Text) + 3) = 0) Then Calced_Move_4.Lasted_B_D.Text = Def_B(0)
            If (Move_Data(Array.IndexOf(Move_Data, Move_Input_4.Text) + 3) = 1) Then Calced_Move_4.Lasted_B_D.Text = Def_D(0)
            '防御側タイプ
            Dim Type_D_Dymmy As String = Types_2(0)
            If (Types_2.Length = 2 And Types_2(0) <> Types_2(1)) Then Type_D_Dymmy += " / " & Types_2(1)
            Calced_Move_4.Type_D.Text = Type_D_Dymmy

            'ダメージ補正
            Calced_Move_4.Damage_C.Text = (Mod1(3) * Mod2(3) * Mod3(3)).ToString("0.00")
            '範囲補正
            'Calced_Move_4.Range.Text = Range
            'タイプ一致補正
            Calced_Move_4.STAB.Text = STAB(3)
            '相性補正
            Calced_Move_4.Type_Compatibility.Text = Calced_Type_Compatibility(3, 0) * Calced_Type_Compatibility(3, 1)
            '急所補正
            Calced_Move_4.Critical.Text = CH(3)

            '攻撃側素早さ
            Calced_Move_4.RSs_S_1.Text = RSs_Input_S_1.Text
            'ランク補正
            Calced_Move_4.Rank_S_1.Text = Rank_S_1.Text
            '素早さ補正
            Calced_Move_4.Atk_S.Text = Atk_S.ToString("0.00")
            '攻撃側最終素早さ
            Calced_Move_4.Lasted_S_1.Text = S_1

            '防御側素早さ
            Calced_Move_4.RSs_S_2.Text = RSs_Input_S_2.Text
            'ランク補正
            Calced_Move_4.Rank_S_2.Text = Rank_S_2.Text
            '素早さ補正
            Calced_Move_4.Def_S.Text = Def_S.ToString("0.00")
            '防御側最終素早さ
            Calced_Move_4.Lasted_S_2.Text = S_2

        End If


        '--------------------
        '技5
        '--------------------

        If (N = 4) Then
            '乱数
            Calced_Move_5.Ran_Calced_Panel_Number_85.Text = Damage_Formula(4, 0)
            Calced_Move_5.Ran_Calced_Panel_Number_86.Text = Damage_Formula(4, 1)
            Calced_Move_5.Ran_Calced_Panel_Number_87.Text = Damage_Formula(4, 2)
            Calced_Move_5.Ran_Calced_Panel_Number_88.Text = Damage_Formula(4, 3)
            Calced_Move_5.Ran_Calced_Panel_Number_89.Text = Damage_Formula(4, 4)
            Calced_Move_5.Ran_Calced_Panel_Number_90.Text = Damage_Formula(4, 5)
            Calced_Move_5.Ran_Calced_Panel_Number_91.Text = Damage_Formula(4, 6)
            Calced_Move_5.Ran_Calced_Panel_Number_92.Text = Damage_Formula(4, 7)
            Calced_Move_5.Ran_Calced_Panel_Number_93.Text = Damage_Formula(4, 8)
            Calced_Move_5.Ran_Calced_Panel_Number_94.Text = Damage_Formula(4, 9)
            Calced_Move_5.Ran_Calced_Panel_Number_95.Text = Damage_Formula(4, 10)
            Calced_Move_5.Ran_Calced_Panel_Number_96.Text = Damage_Formula(4, 11)
            Calced_Move_5.Ran_Calced_Panel_Number_97.Text = Damage_Formula(4, 12)
            Calced_Move_5.Ran_Calced_Panel_Number_98.Text = Damage_Formula(4, 13)
            Calced_Move_5.Ran_Calced_Panel_Number_99.Text = Damage_Formula(4, 14)
            Calced_Move_5.Ran_Calced_Panel_Number_100.Text = Damage_Formula(4, 15)

            'ダメージ割合
            Dim Confirmed_Number As String = ""
            If (Damage_Formula(4, 0) / RSs_Input_HP_2.Text * 100 >= 100) Then Confirmed_Number = "確定1発"
            If (Damage_Formula(4, 0) / RSs_Input_HP_2.Text * 100 < 100 And Damage_Formula(4, 15) / RSs_Input_HP_2.Text * 100 >= 100) Then
                For L = 0 To 15
                    If (Damage_Formula(4, L) >= RSs_Input_HP_2.Text) Then Confirmed_Number = "乱数1発" & " (" & ((16 - L) / 16 * 100).ToString("0.00") & "%)" : Exit For
                Next
            End If
            If (Damage_Formula(4, 0) / RSs_Input_HP_2.Text * 100 >= 50 And Damage_Formula(4, 15) / RSs_Input_HP_2.Text * 100 < 100) Then Confirmed_Number = "確定2発"
            If (Damage_Formula(4, 0) / RSs_Input_HP_2.Text * 100 < 50 And Damage_Formula(4, 15) / RSs_Input_HP_2.Text * 100 >= 50) Then Confirmed_Number = "乱数2発"
            If (Damage_Formula(4, 0) / RSs_Input_HP_2.Text * 100 >= 33.34 And Damage_Formula(4, 15) / RSs_Input_HP_2.Text * 100 < 50) Then Confirmed_Number = "確定3発"
            If (Damage_Formula(4, 0) / RSs_Input_HP_2.Text * 100 < 33.34 And Damage_Formula(4, 15) / RSs_Input_HP_2.Text * 100 >= 33.34) Then Confirmed_Number = "乱数3発"
            If (Damage_Formula(4, 0) / RSs_Input_HP_2.Text * 100 >= 25 And Damage_Formula(4, 15) / RSs_Input_HP_2.Text * 100 < 33.4) Then Confirmed_Number = "確定4発"
            If (Damage_Formula(4, 0) / RSs_Input_HP_2.Text * 100 < 25 And Damage_Formula(4, 15) / RSs_Input_HP_2.Text * 100 >= 25) Then Confirmed_Number = "乱数4発"
            If (Damage_Formula(4, 15) / RSs_Input_HP_2.Text * 100 < 25) Then Confirmed_Number = "5発以上"
            Calced_Move_5.Damege.Text = (Damage_Formula(4, 0) / RSs_Input_HP_2.Text * 100).ToString("0.00") & "% ～ " & (Damage_Formula(4, 15) / RSs_Input_HP_2.Text * 100).ToString("0.00") & "%　" & Confirmed_Number

            '威力 / 威力補正 / 最終威力
            Calced_Move_5.Power.Text = Power_Input_1.Text
            Calced_Move_5.Power_C.Text = Power_C(4).ToString("0.00")
            Calced_Move_5.Lasted_Power.Text = BasePower(4)
            '技タイプ
            Calced_Move_5.Move_Type.Text = Move_Type(4)

            '攻撃力
            If (Physical_Special_Display.Text = "物理") Then
                Calced_Move_5.RSs_A_C_View.Text = "攻撃"
                Calced_Move_5.RSs_A_C.Text = RSs_Input_A_1.Text
            End If
            If (Physical_Special_Display.Text = "特殊") Then
                Calced_Move_5.RSs_A_C_View.Text = "特攻"
                Calced_Move_5.RSs_A_C.Text = RSs_Input_C_1.Text
            End If
            'ランク
            If (Physical_Special_Display.Text = "物理") Then Calced_Move_5.Rank_A_C.Text = Rank_A_1.Text
            If (Physical_Special_Display.Text = "特殊") Then Calced_Move_5.Rank_A_C.Text = Rank_C_1.Text
            '攻撃力補正
            If (Physical_Special_Display.Text = "物理") Then Calced_Move_5.Atk_A_C.Text = Atk_A_C(0).ToString("0.00")
            If (Physical_Special_Display.Text = "特殊") Then Calced_Move_5.Atk_A_C.Text = Atk_A_C(1).ToString("0.00")
            '最終攻撃力
            If (Physical_Special_Display.Text = "物理") Then Calced_Move_5.Lasted_A_C.Text = Atk_A(4)
            If (Physical_Special_Display.Text = "特殊") Then Calced_Move_5.Lasted_A_C.Text = Atk_C(4)
            '攻撃側タイプ
            Dim Type_A_Dymmy As String = Types_1(0)
            If (Types_1.Length = 2 And Types_1(0) <> Types_1(1)) Then Type_A_Dymmy += " / " & Types_1(1)
            Calced_Move_5.Type_A.Text = Type_A_Dymmy

            '防御力
            If (Physical_Special_Display.Text = "物理") Then
                Calced_Move_5.RSs_B_D_View.Text = "防御"
                Calced_Move_5.RSs_B_D.Text = RSs_Input_B_2.Text
            End If
            If (Physical_Special_Display.Text = "特殊") Then
                Calced_Move_5.RSs_B_D_View.Text = "特防"
                Calced_Move_5.RSs_B_D.Text = RSs_Input_D_2.Text
            End If
            'ランク
            If (Physical_Special_Display.Text = "物理") Then Calced_Move_5.Rank_B_D.Text = Rank_B_2.Text
            If (Physical_Special_Display.Text = "特殊") Then Calced_Move_5.Rank_B_D.Text = Rank_D_2.Text
            '防御力補正
            If (Physical_Special_Display.Text = "物理") Then Calced_Move_5.Def_B_D.Text = Def_B_D(0).ToString("0.00")
            If (Physical_Special_Display.Text = "特殊") Then Calced_Move_5.Def_B_D.Text = Def_B_D(1).ToString("0.00")
            '最終防御力
            If (Physical_Special_Display.Text = "物理") Then Calced_Move_5.Lasted_B_D.Text = Def_B(0)
            If (Physical_Special_Display.Text = "特殊") Then Calced_Move_5.Lasted_B_D.Text = Def_D(0)
            '防御側タイプ
            Dim Type_D_Dymmy As String = Types_2(0)
            If (Types_2.Length = 2 And Types_2(0) <> Types_2(1)) Then Type_D_Dymmy += " / " & Types_2(1)
            Calced_Move_5.Type_D.Text = Type_D_Dymmy

            'ダメージ補正
            Calced_Move_5.Damage_C.Text = (Mod1(4) * Mod2(4) * Mod3(4)).ToString("0.00")
            '範囲補正
            'Calced_Move_5.Range.Text = Range
            'タイプ一致補正
            Calced_Move_5.STAB.Text = STAB(4)
            '相性補正
            Calced_Move_5.Type_Compatibility.Text = Calced_Type_Compatibility(4, 0) * Calced_Type_Compatibility(4, 1)
            '急所補正
            Calced_Move_5.Critical.Text = CH(4)

            '攻撃側素早さ
            Calced_Move_5.RSs_S_1.Text = RSs_Input_S_1.Text
            'ランク補正
            Calced_Move_5.Rank_S_1.Text = Rank_S_1.Text
            '素早さ補正
            Calced_Move_5.Atk_S.Text = Atk_S.ToString("0.00")
            '攻撃側最終素早さ
            Calced_Move_5.Lasted_S_1.Text = S_1

            '防御側素早さ
            Calced_Move_5.RSs_S_2.Text = RSs_Input_S_2.Text
            'ランク補正
            Calced_Move_5.Rank_S_2.Text = Rank_S_2.Text
            '素早さ補正
            Calced_Move_5.Def_S.Text = Def_S.ToString("0.00")
            '防御側最終素早さ
            Calced_Move_5.Lasted_S_2.Text = S_2

        End If

    End Function

End Class
